function buildgui(this,defaultname) 
% BUILDGUI  Build the GUI
%
 
% Author(s): John W. Glass 25-Mar-2005
% Copyright 2005 The MathWorks, Inc.
% $Revision: 1.1.6.6 $ $Date: 2009/04/21 04:50:09 $

% Create the figure
handles.fig=dialog('Name',xlate('Export to Workspace'),...
   'IntegerHandle','off',...
   'NumberTitle','off',...
   'Units','char',...
   'ToolBar','none',...
   'MenuBar','none',...
   'Visible','off',...
   'Resize','off',...
   'Position',[50 50 50 13.5],...
   'DockControls', 'off');

% Create the UIControls
handles.DestTitle = uicontrol('Style','text',...
                              'String',xlate('Select destination workspace:'),...
                              'Units','characters',...
                              'HorizontalAlignment','left',...
                              'Position',[1 11 48 1.5],... 
                              'Parent',handles.fig);

% Create the button group                          
ButtonGroup = uibuttongroup('Units','characters',...
                            'Position',[1 7.5 48 3.5],...
                            'Visible','on',...
                            'BorderType','none',...
                            'Parent',handles.fig);

handles.BaseWrks = uicontrol('Style','radio',...
                              'String',xlate('Base Workspace'),...
                              'Units','characters',...
                              'Position',[3 2.0 42 1.5],...
                              'HorizontalAlignment','left',...
                              'Parent',ButtonGroup);
                          
handles.ModelWrks = uicontrol('Style','radio',...
                              'String',xlate('Model Workspace'),...
                              'Units','characters',...
                              'Position',[3 0.5 42 1.5],...
                              'HorizontalAlignment','left',...
                              'Parent',ButtonGroup);
                          
% Create the edit field
handles.VarTitle = uicontrol('Style','text',...
                              'String',xlate('Variable Name:'),...
                              'Units','characters',...
                              'HorizontalAlignment','left',...
                              'Position',[1 6 60 1.5],... 
                              'Parent',handles.fig);                              
                          
handles.VarEdit = uicontrol('Style','edit',...
                              'String',defaultname,...
                              'Units','characters',...
                              'HorizontalAlignment','left',...
                              'BackGroundColor',[1 1 1],...
                              'Position',[3 4.5 44 1.5],... 
                              'Parent',handles.fig);   

                          
handles.SetICCheck = uicontrol('Style','checkbox',...
                              'String',xlate('Use the operating point to initialize model'),...
                              'Units','characters',...
                              'HorizontalAlignment','left',...
                              'Position',[1 3 44 1.25],... 
                              'Parent',handles.fig);  
                          
% Create the buttons 
handles.OKButton = uicontrol('Style','pushbutton',...
                              'String',xlate('OK'),...
                              'Units','characters',...
                              'Position',[15 0.5 10 1.5],... 
                              'Callback',{@(es,ed,this) LocalExport(this),this},...
                              'Parent',handles.fig);  
                          
handles.CancelButton = uicontrol('Style','pushbutton',...
                              'String',xlate('Cancel'),...
                              'Units','characters',...
                              'Position',[26 0.5 10 1.5],...
                              'Callback',{@(es,ed,this) LocalCloseFigure(this),this},...
                              'Parent',handles.fig);  
                          
handles.HelpButton = uicontrol('Style','pushbutton',...
                              'String',xlate('Help'),...
                              'Units','characters',...
                              'Position',[37 0.5 10 1.5],... 
                              'Callback',{@(es,ed,this) LocalHelp(this),this},...
                              'Parent',handles.fig);  
                          
% Center the dialog on top of the control and estimation tools manager 
centerfig(handles.fig,0)
set(handles.fig,'Visible','on',...
    'Color',get(handles.DestTitle,'BackGroundColor')) 

this.Handles = handles;

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LocalExport - Export the IC and close the dialog
function LocalExport(this)

% Get the handles
handles = this.Handles;

% Get the model name
model = this.Model;

% If the model is not open try to open it
if isempty(find_system('type','block_diagram','Name',model))
    try
        open_system(model)
    catch Ex
        errordlg(sprintf('The model %s could not be loaded.',model),...
                     'Simulink Control Design') 
        return
    end
end

% Get the variable name that the user has specified
varname = get(handles.VarEdit,'String');

% Check for a valid variable name
if ~isvarname(varname)
    errordlg(sprintf('The variable name %s is not a valid MATLAB variable name.',varname),...
                     'Simulink Control Design') 
    return
end

% Now write the data to the appropriate workspace
if get(handles.BaseWrks,'Value')
    assignin('base',varname,this.OperatingPoint);
else
    mws = get_param(model, 'modelworkspace');
    mws.assignin(varname,this.OperatingPoint);
end   

% Set the load initial state fields
if get(handles.SetICCheck,'Value')
    set_param(model,'LoadInitialState','on')
    set_param(model,'InitialState',['getstatestruct(',varname,')'])
    set_param(model,'LoadExternalInput','on')
    set_param(model,'ExternalInput',['getinputstruct(',varname,')'])
end

% Close the dialog
LocalCloseFigure(this)

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LocalCloseFigure - Dispose of the dialog
function LocalCloseFigure(this)

close(this.Handles.fig);

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% LocalHelp - Launch the context sensitive help
function LocalHelp(this)

scdguihelp('exportic')