import com.mathworks.toolbox.distcomp.util.ConfigUtil;
import com.mathworks.toolbox.distcomp.control.PortConfig;
import com.mathworks.util.PlatformInfo;

/* Copyright 2004-2010 The MathWorks, Inc. */

// IMPORTANT!!!: Please note that the system properties referenced here actually get set 
// start-mlworker.config file, are read by the service constructor on STDIN and then are 
// set using a the java.lang.System.setProperty method before the service makes use of the 
// config file.  This is because MATLAB does not accept -D arguments. In order to see a 
// property here, you need to add them to the String[] that is passed as the 6th argument 
// to the SharedActivatableServiceDescriptor in start-mlworker.config

com.mathworks.toolbox.distcomp.mlworker {
    private static configDir = "${com.mathworks.toolbox.distcomp.toolboxroot}${/}config${/}";

    persistenceDirectory = "${com.mathworks.toolbox.distcomp.persistenceDir}";
    logDirectory = "${com.mathworks.toolbox.distcomp.logdir}";
    serviceName = "${com.mathworks.toolbox.distcomp.servicename}";
    jobManagerName = "${com.mathworks.toolbox.distcomp.jobmanagername}";

    lookupServiceQueryIntervalSecs = 30;
    maxWaitBeforeShutdownSecs = 10;

    lookupPort = PortConfig.getLookupUnicastPort("${com.mathworks.toolbox.distcomp.base_port}");
    lookupHosts = "${com.mathworks.toolbox.distcomp.lookup_hosts}";

    codebase = "";
    policy = ConfigUtil.concat(new String[]{configDir,"jsk-all.policy"});
    minServiceExportPort = PortConfig.getMinDistcompServiceExportPort("${com.mathworks.toolbox.distcomp.base_port}");

    logLevel = "${com.mathworks.toolbox.distcomp.loglevel}";

    // Messages logged via LOGGER.log() in the Worker JVM will end up in this file.
    serviceLogFile = ConfigUtil.concat(new String[]{
                                           "${com.mathworks.toolbox.distcomp.logdir}${/}",
                                           "worker-service-log_",
                                           "${com.mathworks.toolbox.distcomp.hostname}_",
                                           "${com.mathworks.toolbox.distcomp.servicename}",
                                           ".log"});

    securityLevel = "${com.mathworks.toolbox.distcomp.securityLevel}";
    securityDir   = "${com.mathworks.toolbox.distcomp.securityDir}";

    taskEvaluator = "com.mathworks.toolbox.distcomp.worker.matlab.MatlabTaskEvaluator";

    // These properties control how the Worker starts MATLAB.
    matlabExecutable = "${com.mathworks.toolbox.distcomp.matlabexecutable}";

    // Use -noFigureWindows on Windows and -nodisplay everywhere else
    private static nodisplay = ConfigUtil.ifThenElse(
        /*if*/ PlatformInfo.isWindows(),
               /*then*/ "-noFigureWindows",
               /*else*/ "-nodisplay"
        );

    // Can add other command line arguments: e.g -timing or -jdb
    matlabArguments = new String[]{"-dmlworker", nodisplay, "-r", "initworker"};

    // Messages in logged in MATLAB  via LOGGER.log() or dctSchedulerMessage will end up in this file.
    matlabLogFile = ConfigUtil.concat(new String[]{
                                           "${com.mathworks.toolbox.distcomp.logdir}${/}",
                                           "worker-matlab-log_",
                                           "${com.mathworks.toolbox.distcomp.hostname}_",
                                           "${com.mathworks.toolbox.distcomp.servicename}",
                                           ".log"});

    // MATLAB stdout and stderr streams are written to this file.
    matlabOutputFile = "${com.mathworks.toolbox.distcomp.matlabOutputFile}";

    matlabEnvironment = new String[]{"HOSTNAME",                      "${com.mathworks.toolbox.distcomp.hostname}",
                                     "BASE_PORT",                     "${com.mathworks.toolbox.distcomp.base_port}",    
                                     "USE_SECURE_COMMUNICATION",      "${com.mathworks.toolbox.distcomp.rmi.useSecureCommunication}",
                                     "SECURE_DATA_TRANSFER",          "${com.mathworks.toolbox.distcomp.rmi.secureDataTransfer}",
                                     "KEYSTORE_PATH",                 "${com.mathworks.toolbox.distcomp.rmi.keystorePath}",
                                     "DEFAULT_KEYSTORE_PATH",         "${com.mathworks.toolbox.distcomp.rmi.defaultKeystorePath}",
                                     "KEYSTORE_PASSWORD",             "${com.mathworks.toolbox.distcomp.rmi.keystorePassword}",
                                     "USE_SERVER_SPECIFIED_HOSTNAME", "${com.mathworks.toolbox.distcomp.rmi.useServerSpecifiedHostname}"};

                                     // Other useful variables to set for debugging purposes are:
                                     //"PCTIPC_VERBOSE",                "DEBUG4",
                                     //"PCTIPC_LOGFILE",                "/tmp/pctipc_${com.mathworks.toolbox.distcomp.servicename}.log"

    // Set by mdce_def "WORKER_START_TIMEOUT" property
    matlabStartupTimeoutSecs = Long.parseLong("${com.mathworks.toolbox.distcomp.workerstarttimeout}");

    windowsDomain = "${com.mathworks.toolbox.distcomp.worker.windowsDomain}";

}
