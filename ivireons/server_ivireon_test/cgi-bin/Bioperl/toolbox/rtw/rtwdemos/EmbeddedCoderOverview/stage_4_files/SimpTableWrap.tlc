%% File : SimpTableWrap.tlc
%%
%% Description: 
%%   Real-Time Workshop TLC Code Generation file for SimpTableWrap
%%
%% Simulink version      : 6.5 (R2006b+) 11-Sep-2006
%% TLC file generated on : 10-Nov-2006 11:32:36

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code_initialize;
     def.SFunctionName = 'SimpTableWrap';
     def.OutputFcnSpec = 'double y1 = SimpleTable(double u1, double p1[], double p2[], int16 p3)';
     def.HeaderFiles = {'SimpleTable.h'};
     def.SourceFiles = {'SimpleTable.c'};
     def.IncPaths = {'C:\c_work\PCG_Eval_Model\PCG_Eval'};
     def.SrcPaths = {'C:\c_work\PCG_Eval_Model\PCG_Eval'};
     legacy_code_sfcn_tlc_generate(def);
     %%%-MATLAB_Construction_Commands_End
 %/

%implements SimpTableWrap "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C
  %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
  %endif

  %<LibAddToCommonIncludes("SimpleTable.h")>
  %<LibAddToModelSources("SimpleTable")>

  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
  %assign p1_ptr = LibBlockParameterBaseAddr(p1)
  %assign p2_ptr = LibBlockParameterBaseAddr(p2)
  %assign p3_val = LibBlockParameter(p3, "", "", 0)
  %assign u1_val = LibBlockInputSignal(0, "", "", 0)
  %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
  %%
  %<y1_val> = SimpleTable( %<u1_val>, %<p1_ptr>, %<p2_ptr>, %<p3_val>);
  %%
%endfunction

%% Function: BlockOutputSignal ============================================
%%
%function BlockOutputSignal(block,system,portIdx,ucv,lcv,idx,retType) void
  %%
  %assign p1_ptr = LibBlockParameterBaseAddr(p1)
  %assign p2_ptr = LibBlockParameterBaseAddr(p2)
  %assign p3_val = LibBlockParameter(p3, "", "", 0)
  %assign u1_val = LibBlockInputSignal(0, "", "", 0)
  %assign y1_val = LibBlockOutputSignal(0, "", "", 0)
  %%
  %switch retType
    %case "Signal"
      %if portIdx == 0
        %return "SimpleTable( %<u1_val>, %<p1_ptr>, %<p2_ptr>, %<p3_val>)"
      %else
        %assign errTxt = "Block output port index not supported: %<portIdx>"
        %<LibBlockReportError(block,errTxt)>
      %endif
    %default
      %assign errTxt = "Unsupported return type: %<retType>"
      %<LibBlockReportError(block,errTxt)>
  %endswitch
  %%
%endfunction

%% [EOF]
