function saveasmfig(h, filename)
%SAVEASMFIG Save figure to fig file and generate MATLAB code to load.
%
% SAVEASMFIG(H, 'Filename') Use SAVEASFIG to write figure to file
% then generate a file  which loads the figure.

%   Copyright 1984-2007 The MathWorks, Inc. 
%   $Revision: 1.11.4.4 $  $Date: 2010/04/21 21:31:52 $

[path, name, ext] = fileparts(filename);

if ~isempty(find(name == '.'))
    error('MATLAB:saveasmfig:InvalidFilename', 'Invalid MATLAB file name: %s, . (dot) is not valid filename character.',filename);
end

mFncnName = name;
mFileName = fullfile(path, [name '.m']);
fFileName = fullfile(path, [name '.fig']);

% try to save figure as fig - this may error out on bad input
% args

saveasfig(h, fFileName)

% saveasfig was ok, generate a MATLAB file to load the fig

fid = fopen(mFileName ,'wb');

if (fid < 0)
    error('MATLAB:saveasmfig:CannotCreateFile', 'Can''t create m-file: %s', mFileName)
end

fprintf(fid, [ ...
'function h = %s\n', ...
'%% This function was created by saveas(...,''mfig''), or print -dmfile.\n', ...
'%% It loads an HG object saved in binary format in the FIG-file of the\n', ...
'%% same name.  NOTE: if you want to see the old-style MATLAB code\n', ...
'%% representation of a saved object, previously created by print -dmfile,\n', ...
'%% you can obtain this by using saveas(...,''mmat''). But be advised that the\n', ...
'%% MATLAB file/MAT-file format does not preserve some important information due\n', ...
'%% to limitations in that format, including ApplicationData stored using\n', ...
'%% setappdata.  Also, references to handles stored in UserData or Application-\n', ...
'%% Data will no longer be valid if saved in the MATLAB file/MAT-file format.\n', ...
'%% ApplicationData and stored handles (excluding integer figure handles)\n', ...
'%% are both correctly saved in FIG-files.\n', ...
'%%\n', ...
'%%load the saved object\n', ...
'[path, name] = fileparts(mfilename(''fullpath''));\n', ...
'figname = fullfile(path, [name ''.fig'']);\n', ...
'if (exist(figname,''file'')), open(figname), else open([name ''.fig'']), end\n', ...
'if nargout > 0, h = gcf; end\n'], mFncnName);

% all done
fclose(fid);
