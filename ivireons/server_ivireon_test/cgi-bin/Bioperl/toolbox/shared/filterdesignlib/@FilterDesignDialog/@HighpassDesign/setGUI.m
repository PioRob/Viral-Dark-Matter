function b = setGUI(this, Hd)
%SETGUI   Set the GUI.

%   Author(s): J. Schickler
%   Copyright 2005-2010 The MathWorks, Inc.
%   $Revision: 1.1.6.3 $  $Date: 2010/05/20 03:03:21 $

b = true;
hfdesign = getfdesign(Hd);
if ~strcmpi(get(hfdesign, 'Response'), 'highpass')
    b = false;
    return;
end

switch hfdesign.Specification
    case 'Fst,Fp,Ast,Ap'
        set(this, ...
            'Fstop', num2str(hfdesign.Fstop), ...
            'Fpass', num2str(hfdesign.Fpass), ...
            'Astop', num2str(hfdesign.Astop), ...
            'Apass', num2str(hfdesign.Apass));
    case 'N,F3dB'
        set(this, ...
            'privFrequencyConstraints', '3dB point', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'F3dB', num2str(hfdesign.F3db));
    case 'N,F3dB,Fp'
        set(this, ...
            'privFrequencyConstraints', '3dB point and passband edge', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'F3dB', num2str(hfdesign.F3db), ...
            'Fpass', num2str(hfdesign.Fpass));
    case 'N,F3dB,Ap'
        set(this, ...
            'privFrequencyConstraints', '3dB point', ...
            'privMagnitudeConstraints', 'Passband ripple', ...
            'F3dB',  num2str(hfdesign.F3db), ...
            'Apass', num2str(hfdesign.Apass));
    case 'N,F3dB,Ast,Ap'
        set(this, ...
            'privFrequencyConstraints', '3dB point', ...
            'privMagnitudeConstraints', 'Stopband attenuation and passband ripple', ...
            'F3dB',  num2str(hfdesign.F3db), ...
            'Apass', num2str(hfdesign.Apass), ...
            'Astop', num2str(hfdesign.Astop));
    case 'N,F3dB,Ast'
        set(this, ...
            'privFrequencyConstraints', '3dB point', ...
            'privMagnitudeConstraints', 'Stopband attenuation', ...
            'F3dB',  num2str(hfdesign.F3db), ...
            'Astop', num2str(hfdesign.Astop));
    case 'N,Fst,F3dB'
        set(this, ...
            'privFrequencyConstraints', 'stopband edge and 3dB point', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'F3dB',  num2str(hfdesign.F3db), ...
            'Fstop', num2str(hfdesign.Fstop));
    case 'N,Fc'
        set(this, ...
            'privFrequencyConstraints', '6dB point', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'F3dB',  num2str(hfdesign.Fcutoff));
    case 'N,Fc,Ast,Ap'
        set(this, ...
            'privFrequencyConstraints', '6dB point', ...
            'privMagnitudeConstraints', 'Stopband attenuation and passband ripple', ...
            'F6dB',  num2str(hfdesign.Fcutoff), ...
            'Apass', num2str(hfdesign.Apass), ...
            'Astop', num2str(hfdesign.Astop));
    case 'N,Fp,Ap'
        set(this, ...
            'privFrequencyConstraints', 'Passband edge', ...
            'privMagnitudeConstraints', 'Passband ripple', ...
            'Fpass', num2str(hfdesign.Fpass), ...
            'Apass', num2str(hfdesign.Apass));
    case 'N,Fp,Ast,Ap'
        set(this, ...
            'privFrequencyConstraints', 'Passband edge', ...
            'privMagnitudeConstraints', 'Stopband attenuation and passband ripple', ...
            'Fpass', num2str(hfdesign.Fpass), ...
            'Apass', num2str(hfdesign.Apass), ...
            'Astop', num2str(hfdesign.Astop));
    case 'N,Fp,F3dB'
        set(this, ...
            'privFrequencyConstraints', '3dB point and passband edge', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'Fpass', num2str(hfdesign.Fpass), ...
            'F3dB',  num2str(hfdesign.F3dB));
    case 'N,Fst,Fp'
        set(this, ...
            'privFrequencyConstraints', 'Stopband edge and passband edge', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'Fpass', num2str(hfdesign.Fpass), ...
            'Fstop', num2str(hfdesign.Fstop));
    case 'N,Fst,Fp,Ap'
        set(this, ...
            'privFrequencyConstraints', 'Stopband edge and passband edge', ...
            'privMagnitudeConstraints', 'Passband ripple', ...
            'Fpass', num2str(hfdesign.Fpass), ...
            'Fstop', num2str(hfdesign.Fstop), ...
            'Apass', num2str(hfdesign.Apass));
    case 'N,Fst,Fp,Ast'
        set(this, ...
            'privFrequencyConstraints', 'Stopband edge and passband edge', ...
            'privMagnitudeConstraints', 'Stopband attenuation', ...
            'Fpass', num2str(hfdesign.Fpass), ...
            'Fstop', num2str(hfdesign.Fstop), ...
            'Astop', num2str(hfdesign.Astop));
    case 'N,Fst,Ast,Ap'
        set(this, ...
            'privFrequencyConstraints', 'Stopband edge', ...
            'privMagnitudeConstraints', 'Stopband attenuation and passband ripple', ...
            'Fstop', num2str(hfdesign.Fstop), ...
            'Apass', num2str(hfdesign.Apass), ...
            'Astop', num2str(hfdesign.Astop));
    case 'N,Fst,Ast'
        set(this, ...
            'privFrequencyConstraints', 'Stopband edge', ...
            'privMagnitudeConstraints', 'Stopband attenuation', ...
            'Fstop', num2str(hfdesign.Fstop), ...
            'Astop', num2str(hfdesign.Astop));
    case 'Nb,Na,Fp,Fst'
        set(this, ...
            'privFrequencyConstraints', 'Stopband edge and passband edge', ...
            'privMagnitudeConstraints', 'Unconstrained', ...
            'Fpass', num2str(hfdesign.Fpass), ...
            'Fstop', num2str(hfdesign.Fstop));
    otherwise
        error(generatemsgid('IncompleteConstraints'), ...
            'Internal Error: Highpass ''%s'' incomplete', hfdesign.Specification);
end

abstract_setGUI(this, Hd);

% [EOF]
