function hLib = tfl_table_fixpt()
%TFL_TABLE_FIXPT - Describe entries for a Target Function Library table.

% Copyright 2007 The MathWorks, Inc.
% $Revision: 1.1.6.2 $
% $Date: 2007/07/31 20:05:58 $

hLib = RTW.TflTable;


% Create an entry for addition of fixed-point data types where
% the Slopes must be the same and the net Bias must be zero.
% Saturation off, Rounding as a don't care
op_entry = RTW.TflCOperationEntryGenerator;
op_entry.setTflCOperationEntryParameters( 'Key',                     'RTW_OP_ADD', ...
                                         'Priority',                 90, ...
                                         'SaturationMode',           'RTW_WRAP_ON_OVERFLOW', ...
                                         'RoundingMode',             'RTW_ROUND_UNSPECIFIED', ...
                                         'SlopesMustBeTheSame',      true, ...
                                         'MustHaveZeroNetBias',      true, ...
                                         'ImplementationName',       'u16_add_SameSlopeZeroBias', ...
                                         'ImplementationHeaderFile', 'u16_add_SameSlopeZeroBias.h', ...
                                         'ImplementationSourceFile', 'u16_add_SameSlopeZeroBias.c' );

op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'y1',...
                                    'IOType',         'RTW_IO_OUTPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       false,...
                                    'WordLength',     16);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u1', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       false,...
                                    'WordLength',     16);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u2', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       false,...
                                    'WordLength',     16);

arg = hLib.getTflArgFromString('y1','uint16');
op_entry.Implementation.setReturn(arg);

arg = hLib.getTflArgFromString('u1','uint16');
op_entry.Implementation.addArgument(arg);

arg = hLib.getTflArgFromString('u2','uint16');
op_entry.Implementation.addArgument(arg);

hLib.addEntry( op_entry );


% Create an entry for subtraction of fixed-point data types where
% the Slopes must be the same and the net Bias must be zero.
% Saturation off, Rounding as simplest
op_entry = RTW.TflCOperationEntryGenerator;
op_entry.setTflCOperationEntryParameters( 'Key',                     'RTW_OP_MINUS', ...
                                         'Priority',                 90, ...
                                         'SaturationMode',           'RTW_WRAP_ON_OVERFLOW', ...
                                         'RoundingMode',             'RTW_ROUND_SIMPLEST', ...
                                         'SlopesMustBeTheSame',      true, ...
                                         'MustHaveZeroNetBias',      true, ...
                                         'ImplementationName',       's8_sub_SameSlopeZeroBias', ...
                                         'ImplementationHeaderFile', 's8_sub_SameSlopeZeroBias.h', ...
                                         'ImplementationSourceFile', 's8_sub_SameSlopeZeroBias.c' );

op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'y1',...
                                    'IOType',         'RTW_IO_OUTPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       true,...
                                    'WordLength',     8);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u1', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       true,...
                                    'WordLength',     8);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u2', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       true,...
                                    'WordLength',     8);

arg = hLib.getTflArgFromString('y1','int8');
op_entry.Implementation.setReturn(arg);

arg = hLib.getTflArgFromString('u1','int8');
op_entry.Implementation.addArgument(arg);

arg = hLib.getTflArgFromString('u2','int8');
op_entry.Implementation.addArgument(arg);

hLib.addEntry( op_entry );


% Create an entry for addition of fixed-point data types where
% the Slopes must be the same and the net Bias must be zero.
% Saturation off, Rounding to floor
op_entry = RTW.TflCOperationEntryGenerator;
op_entry.setTflCOperationEntryParameters( 'Key',                     'RTW_OP_ADD', ...
                                         'Priority',                 90, ...
                                         'SaturationMode',           'RTW_WRAP_ON_OVERFLOW', ...
                                         'RoundingMode',             'RTW_ROUND_FLOOR', ...
                                         'SlopesMustBeTheSame',      true, ...
                                         'MustHaveZeroNetBias',      true, ...
                                         'ImplementationName',       's32_add_SameSlopeZeroBias', ...
                                         'ImplementationHeaderFile', 's32_add_SameSlopeZeroBias.h', ...
                                         'ImplementationSourceFile', 's32_add_SameSlopeZeroBias.c' );

op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'y1',...
                                    'IOType',         'RTW_IO_OUTPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       true,...
                                    'WordLength',     32);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u1', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       true,...
                                    'WordLength',     32);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u2', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'IsSigned',       true,...
                                    'WordLength',     32);

arg = hLib.getTflArgFromString('y1','int32');
op_entry.Implementation.setReturn(arg);

arg = hLib.getTflArgFromString('u1','int32');
op_entry.Implementation.addArgument(arg);

arg = hLib.getTflArgFromString('u2','int32');
op_entry.Implementation.addArgument(arg);

hLib.addEntry( op_entry );


% Create an entry for division of fixed-point data types where
% arguments are specified using Slope and Bias scaling
% Saturation on, Rounding to ceiling
op_entry = RTW.TflCOperationEntry;
op_entry.setTflCOperationEntryParameters('Key',                      'RTW_OP_DIV', ...
                                         'Priority',                 90, ...
                                         'SaturationMode',           'RTW_SATURATE_ON_OVERFLOW', ...
                                         'RoundingMode',             'RTW_ROUND_CEILING', ...
                                         'ImplementationName',       's16_div_s16_s16_slopebias', ...
                                         'ImplementationHeaderFile', 's16_div_s16_s16_slopebias.h', ...
                                         'ImplementationSourceFile', 's16_div_s16_s16_slopebias.c' );
                                         
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'y1',... 
                                    'IOType',         'RTW_IO_OUTPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: slope and bias scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     16,...
                                    'Slope',          15,...
                                    'Bias',           2);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u1', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: slope and bias scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     16,...
                                    'Slope',          15,...
                                    'Bias',           2);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u2', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: slope and bias scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     16,...
                                    'Slope',          13,...
                                    'Bias',           5);

arg = hLib.getTflArgFromString('y1','int16');
op_entry.Implementation.setReturn(arg);

arg = hLib.getTflArgFromString('u1','int16');
op_entry.Implementation.addArgument(arg);

arg = hLib.getTflArgFromString('u2','int16');
op_entry.Implementation.addArgument(arg);

hLib.addEntry( op_entry );


% Create an entry for multiplication of fixed-point data types where
% arguments are specified with binary point scaling (Fraction length)
% and their derived Slope/Bias settings are required to match.
% Saturation on, Rounding as a don't care
op_entry = RTW.TflCOperationEntry;
op_entry.setTflCOperationEntryParameters('Key',                      'RTW_OP_MUL', ...
                                         'Priority',                 90, ...
                                         'SaturationMode',           'RTW_SATURATE_ON_OVERFLOW', ...
                                         'RoundingMode',             'RTW_ROUND_UNSPECIFIED', ...
                                         'ImplementationName',       's32_mul_s16_s16_binarypoint', ...
                                         'ImplementationHeaderFile', 's32_mul_s16_s16_binarypoint.h', ...
                                         'ImplementationSourceFile', 's32_mul_s16_s16_binarypoint.c' );
                                         
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'y1',... 
                                    'IOType',         'RTW_IO_OUTPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: binary point scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     32,...
                                    'FractionLength', 28);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u1', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: binary point scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     16,...
                                    'FractionLength', 15);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u2', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: binary point scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     16,...
                                    'FractionLength', 13);

arg = hLib.getTflArgFromString('y1','int32');
op_entry.Implementation.setReturn(arg);

arg = hLib.getTflArgFromString('u1','int16');
op_entry.Implementation.addArgument(arg);

arg = hLib.getTflArgFromString('u2','int16');
op_entry.Implementation.addArgument(arg);

hLib.addEntry( op_entry );


% Create an entry for division of fixed-point data types where
% arguments are specified with binary point scaling (Fraction length)
% and their derived Slope/Bias settings are required to match.
% Saturation on, Rounding to nearest
op_entry = RTW.TflCOperationEntry;
op_entry.setTflCOperationEntryParameters('Key',                      'RTW_OP_DIV', ...
                                         'Priority',                 90, ...
                                         'SaturationMode',           'RTW_SATURATE_ON_OVERFLOW', ...
                                         'RoundingMode',             'RTW_ROUND_NEAREST', ...
                                         'ImplementationName',       's32_div_s16_s16_binarypoint', ...
                                         'ImplementationHeaderFile', 's32_div_s16_s16_binarypoint.h', ...
                                         'ImplementationSourceFile', 's32_div_s16_s16_binarypoint.c' );
                                         
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'y1',... 
                                    'IOType',         'RTW_IO_OUTPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: binary point scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     32,...
                                    'FractionLength', 28);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u1', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: binary point scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     16,...
                                    'FractionLength', 15);
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u2', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     true,...
                                    'CheckBias',      true,...
                                    'DataTypeMode',   'Fixed-point: binary point scaling',...
                                    'IsSigned',       true,...
                                    'WordLength',     16,...
                                    'FractionLength', 13);

arg = hLib.getTflArgFromString('y1','int32');
op_entry.Implementation.setReturn(arg);

arg = hLib.getTflArgFromString('u1','int16');
op_entry.Implementation.addArgument(arg);

arg = hLib.getTflArgFromString('u2','int16');
op_entry.Implementation.addArgument(arg);

hLib.addEntry( op_entry );


% Create an entry for division of fixed-point data types using
% RelativeScalingFactorF and RelativeScalingFactorE parameters
% Saturation off, Rounding to ceiling
op_entry = RTW.TflCOperationEntryGenerator;
op_entry.setTflCOperationEntryParameters('Key',                      'RTW_OP_DIV', ...
                                         'Priority',                 90, ...
                                         'SaturationMode',           'RTW_WRAP_ON_OVERFLOW', ...
                                         'RoundingMode',             'RTW_ROUND_CEILING', ...
                                         'RelativeScalingFactorF',   1.0, ...
                                         'RelativeScalingFactorE',   -3.0, ...
                                         'ImplementationName',       's16_div_s16_s16_rsf0p125', ...
                                         'ImplementationHeaderFile', 's16_div_s16_s16_rsf0p125.h', ...
                                         'ImplementationSourceFile', 's16_div_s16_s16_rsf0p125.c' );
                                         
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'y1',... 
                                    'IOType',         'RTW_IO_OUTPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'DataType',       'Fixed',...
                                    'IsSigned',       true,...
                                    'WordLength',     16 );
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u1', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'DataType',       'Fixed',...
                                    'IsSigned',       true,...
                                    'WordLength',     16 );
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u2', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'DataType',       'Fixed',...
                                    'IsSigned',       true,...
                                    'WordLength',     16 );

arg = hLib.getTflArgFromString('y1','int16');
op_entry.Implementation.setReturn(arg);

arg = hLib.getTflArgFromString('u1','int16');
op_entry.Implementation.addArgument(arg);

arg = hLib.getTflArgFromString('u2','int16');
op_entry.Implementation.addArgument(arg);

hLib.addEntry( op_entry );


% Create an entry for multiplication of fixed-point data types using
% RelativeScalingFactorF and RelativeScalingFactorE parameters
% Saturation off, Rounding as simplest
op_entry = RTW.TflCOperationEntryGenerator;
op_entry.setTflCOperationEntryParameters('Key',                      'RTW_OP_MUL', ...
                                         'Priority',                 90, ...
                                         'SaturationMode',           'RTW_WRAP_ON_OVERFLOW', ...
                                         'RoundingMode',             'RTW_ROUND_SIMPLEST', ...
                                         'RelativeScalingFactorF',   1.0, ...
                                         'RelativeScalingFactorE',   -3.0, ...
                                         'ImplementationName',       's16_mul_s16_s16_rsf0p125', ...
                                         'ImplementationHeaderFile', 's16_mul_s16_s16_rsf0p125.h', ...
                                         'ImplementationSourceFile', 's16_mul_s16_s16_rsf0p125.c' );
                                         
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'y1',... 
                                    'IOType',         'RTW_IO_OUTPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'DataType',       'Fixed',...
                                    'IsSigned',       true,...
                                    'WordLength',     16 );
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u1', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'DataType',       'Fixed',...
                                    'IsSigned',       true,...
                                    'WordLength',     16 );
                               
op_entry.createAndAddConceptualArg( 'RTW.TflArgNumeric',...
                                    'Name',           'u2', ...
                                    'IOType',         'RTW_IO_INPUT',...
                                    'CheckSlope',     false,...
                                    'CheckBias',      false,...
                                    'DataType',       'Fixed',...
                                    'IsSigned',       true,...
                                    'WordLength',     16);

arg = hLib.getTflArgFromString('y1','int16');
op_entry.Implementation.setReturn(arg);

arg = hLib.getTflArgFromString('u1','int16');
op_entry.Implementation.addArgument(arg);

arg = hLib.getTflArgFromString('u2','int16');
op_entry.Implementation.addArgument(arg);

hLib.addEntry( op_entry );
