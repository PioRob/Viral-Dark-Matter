function initializeSourcePanel(h)
% INITIALIZESOURCEPANEL initializes the 'Step 1' panel

% Author: Rong Chen 
%  Copyright 1986-2006 The MathWorks, Inc.
%  $Revision: 1.1.6.10 $ $Date: 2009/10/29 15:23:18 $


% -------------------------------------------------------------------------
%% Build timeseries naming option control and its contents
% -------------------------------------------------------------------------
h.DefaultPos.SourcePanelDefaultColor=h.DefaultPos.FigureDefaultColor;
h.Handles.PNLsource = uipanel('Parent',h.Figure, ...
    'Units','Pixels', ...
    'Title',xlate(' Data Source '), ...
    'BackgroundColor',h.DefaultPos.SourcePanelDefaultColor, ...
    'Position',[h.DefaultPos.leftoffsetDynamicPnl ...
                h.DefaultPos.buttomoffsetDynamicPnl ...
                h.DefaultPos.widthDynamicPnl ...
                h.DefaultPos.heightDynamicPnl] ...
    );

width_TXT = 75;
width_EDIT = 350;
huicTXTsource = uicontextmenu('Parent',h.Figure);
h.Handles.TXTsource = uicontrol('Parent',h.Handles.PNLsource, ...
    'style','text',...
    'Units','Pixels', ...
    'BackgroundColor',h.DefaultPos.SourcePanelDefaultColor, ...
    'String',xlate('Import from:'), ...
    'HorizontalAlignment','Left', ...
    'UIContextMenu',huicTXTsource,...
    'Position',[20 ...
                h.DefaultPos.heightDynamicPnl-60 ...
                width_TXT ...
                h.DefaultPos.heighttxt] ...
    );
uimenu(huicTXTsource,'Label','What''s This','Callback','tsDispatchHelp(''its_wiz_import_from'',''modal'')')

h.Handles.COMBsource = uicontrol('Parent',h.Handles.PNLsource, ...
    'style','popupmenu', ...
    'Units','Pixels', ...
    'String', {xlate('Excel Workbook (.xls)'),xlate('Text File (.csv,.txt,.dat)'),...
          xlate('MAT-file (.mat)'),xlate('MATLAB workspace')}, ...
    'Value',1, ...
    'TooltipString',xlate('Select a source where the data is stored.'), ...
    'Position',[20+width_TXT+10 ...
                h.DefaultPos.heightDynamicPnl-56 ...
                width_EDIT ...
                h.DefaultPos.heightcomb], ...
    'Callback',{@localSwitch h}, ...
    'Tag', 'COMBsource');
if ~ismac
   set(h.Handles.COMBsource,'BackgroundColor',[1 1 1]);
end

huicTXTbrowser = uicontextmenu('Parent',h.Figure);
h.Handles.TXTbrowser = uicontrol('Parent',h.Handles.PNLsource, ...
    'style','text',...
    'Units','Pixels', ...
    'BackgroundColor',h.DefaultPos.SourcePanelDefaultColor, ...
    'String',xlate('Select File :'), ...
    'HorizontalAlignment','Left', ...
    'UIContextMenu',huicTXTbrowser,...
    'Position',[20 ...
                h.DefaultPos.heightDynamicPnl-100 ...
                width_TXT ...
                h.DefaultPos.heighttxt] ...
    );
uimenu(huicTXTbrowser,'Label','What''s This','Callback','tsDispatchHelp(''its_wiz_file_location'',''modal'')')

h.Handles.EDTbrowser = uicontrol('Parent',h.Handles.PNLsource, ...
    'style','edit',...
    'Units','Pixels', ...
    'BackgroundColor',[1 1 1], ...
    'HorizontalAlignment','Left', ...
    'Position',[20+width_TXT+10 ...
                h.DefaultPos.heightDynamicPnl-100 ...
                width_EDIT ...
                h.DefaultPos.heightedt], ...
    'Tag', 'EDTbrowser');

huicBTNbrowser = uicontextmenu('Parent',h.Figure);
h.Handles.BTNbrowser = uicontrol('Parent',h.Handles.PNLsource, ...
    'style','pushbutton', ...
    'Units','Pixels', ...
    'String',xlate('Browse ...'),...
    'UIContextMenu',huicBTNbrowser,...
    'Position',[20+width_TXT+10+width_EDIT+20 ...
                h.DefaultPos.heightDynamicPnl-103 ...
                h.DefaultPos.widthbtn ...
                h.DefaultPos.heightbtn],...
    'Callback',{@localBrowser h} ...
    );
uimenu(huicBTNbrowser,'Label','What''s This','Callback','tsDispatchHelp(''its_wiz_browse_button'',''modal'')')


function localSwitch(eventSrc, eventData, h)
choice=get(h.Handles.COMBsource,'Value');
switch choice
    case {1,2,3}
        set(h.Handles.TXTbrowser,'Visible','on');
        set(h.Handles.EDTbrowser,'Visible','on');
        set(h.Handles.EDTbrowser,'String','');
        set(h.Handles.BTNbrowser,'Visible','on');
    case 4
        set(h.Handles.TXTbrowser,'Visible','off');
        set(h.Handles.EDTbrowser,'Visible','off');
        set(h.Handles.BTNbrowser,'Visible','off');
end

function localBrowser(eventSrc, eventData, h)
% Switch to the last path that is used in loading a file

choice = get(h.Handles.COMBsource,'Value');

% Manange paths
currentPath = '';
cachedPath = '';
specifiedPath = get(h.Handles.EDTbrowser,'string');
if isfield(h.DefaultPos,'lastloadedfilepath')
   cachedPath = h.DefaultPos.lastloadedfilepath;
end
if ~isempty(deblank(specifiedPath))
    try
        currentPath = pwd;
        cd(fileparts(specifiedPath));
    end
elseif ~isempty(cachedPath)
    try
        currentPath = pwd;
        cd(cachedPath);
    end
end

% Get files
switch choice
    case 1
        [filename, pathname, filterindex] = uigetfile( ...
        {'*.xls', xlate('Excel Workbooks (*.xls)')}, ...
        xlate('Import file'));
    case 2 
        [filename, pathname, filterindex] = uigetfile( ...
        {'*.txt;*.dat;*.tab;*.csv', xlate('Text Files (*.txt, *.dat, *.tab, *.csv)')}, ...
        xlate('Import file'));
    case 3
        [filename, pathname, filterindex] = uigetfile( ...
        {'*.mat', xlate('MATLAB Saved Files (*.mat)')}, ...
        xlate('Import file'));
    case 4
        ;
end
h.DefaultPos.lastloadedfilepath = pathname;

% Return to previous path
if ~isempty(currentPath)
    try
       cd(currentPath);
    end
end

% Check if user pressed cancel
if isequal(filename,0) || isequal(pathname,0)
    return
else
    set(h.Handles.EDTbrowser,'String',fullfile(pathname,filename));
end


