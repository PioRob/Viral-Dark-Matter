function h = createactions(h)
%CREATEACTIONS   Create actions used by menus, toolbars, & context menus

%   Author(s): G. Taillefer
%   Copyright 2006-2009 The MathWorks, Inc.
%   $Revision: 1.1.6.6 $  $Date: 2009/11/13 04:18:48 $

h.actions = java.util.HashMap;
h.actionstate = java.util.HashMap;

am = DAStudio.ActionManager;
am.initializeClient(h);


%FILE----------------------------------------------------------------------
action = am.createDefaultAction(h, 'FILE_CLOSE');
action.statusTip = 'Close the Fixed-Point Tool';
action.Tag = 'FPT_file_close';
h.actions.put('FILE_CLOSE', action);


%VIEW----------------------------------------------------------------------
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'info.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionAUTOSCALEINFO'), ...
                         'Tag', 'FPT_view_autoscaleinfo',...
                         'Callback', 'fxptui.cb_scaleinfo;');
h.actions.put('VIEW_AUTOSCALEINFO', action);

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'plot.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionVIEWTSINFIGURE'), ...
                         'Tag', 'FPT_view_tsinfigure',...
                         'Callback', 'fxptui.cb_plotinfigure;');
h.actions.put('VIEW_TSINFIGURE', action);

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'plothist.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionVIEWHISTINFIGURE'), ...
                         'Tag', 'FPT_view_histinfigure',...
                         'Callback', 'fxptui.cb_plothistinfigure;');
h.actions.put('VIEW_HISTINFIGURE', action); 

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'plotdiff.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionVIEWDIFFINFIGURE'), ...
                         'Tag', 'FPT_view_diffinfigure',...
                         'Callback', 'fxptui.cb_plotdiffinfigure;');
h.actions.put('VIEW_DIFFINFIGURE', action);

% Dialog View action
action = am.createDefaultAction(h, 'VIEW_SHOWDYNDLGS');
action.statusTip = 'Display the dynamic dialog in Fixed-Point Tool';
action.Tag = 'FPT_view_showdialog';
h.actions.put('VIEW_SHOWDYNDLGS', action);

action = am.createDefaultAction(h, 'VIEW_INCREASEFONT');
action.statusTip = 'Increase font size';
action.Tag = 'FPT_view_increasefont';
h.actions.put('VIEW_INCREASEFONT', action);

action = am.createDefaultAction(h, 'VIEW_DECREASEFONT');
action.statusTip = 'Decrease font size';
action.Tag = 'FPT_view_decreasefont';
h.actions.put('VIEW_DECREASEFONT', action);

action = am.createDefaultAction(h, 'VIEW_CUSTPROPSPANE');
action.on = 'on';
action.Tag = 'FPT_view_custpropspane';
h.actions.put('VIEW_CUSTPROPSPANE', action);

%TOOLS---------------------------------------------------------------------
action = am.createDefaultAction(h, 'TOOLS_PROMPT_DLG_REPLACE');
action.on = 'on';
action.Tag = 'FPT_tools_dlgreplace';
h.actions.put('TOOLS_PROMPT_DLG_REPLACE', action);

%Simulation----------------------------------------------------------------
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'start.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionSTART'), ...
                         'Tag', 'FPT_simulation_start',...
                         'Callback', 'fxptui.cb_simulation(''start'');',...
   'Accel','Ctrl+T');
h.actions.put('START', action);
	
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'pause.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionPAUSE'), ...
                         'Tag', 'FPT_simulation_pause',...
                         'Callback', 'fxptui.cb_simulation(''pause'');');
h.actions.put('PAUSE', action);

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'stop.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionSTOP'), ...
                         'Tag', 'FPT_simulation_stop',...
                         'Callback', 'fxptui.cb_simulation(''stop'');');
h.actions.put('STOP', action);


%Results----------------------------------------------------------------------
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'result.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionRESULTSSTOREACTIVERUN'), ...
                         'Tag', 'FPT_results_storeactive',...
                         'Callback', 'fxptui.cb_active2reference;');
h.actions.put('RESULTS_STOREACTIVERUN', action);

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'result2.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionRESULTSSTOREREFRUN'), ...
                         'Tag', 'FPT_results_storeref',...
                         'Callback', 'fxptui.cb_reference2active;');
h.actions.put('RESULTS_STOREREFRUN', action);

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'result3.png'), ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionRESULTSSWAPRUNS'), ...
                         'Tag', 'FPT_results_swapruns',...
                         'Callback', 'fxptui.cb_swapruns;');
h.actions.put('RESULTS_SWAPRUNS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionRESULTSCLEARACTIVERUN'), ...
                         'Tag', 'FPT_results_clearactive',...
                         'Callback', 'fxptui.cb_clearactiverun');
h.actions.put('RESULTS_CLEARACTIVERUN', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionRESULTSCLEARREFRUN'), ...
                         'Tag', 'FPT_results_clearrefrun',...
                         'Callback', 'fxptui.cb_clearrefrun;');
h.actions.put('RESULTS_CLEARREFRUN', action);

%SIMULINK------------------------------------------------------------------
action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHILITESYSTEM'), ...
                         'Tag', 'FPT_simulink_hilitesys',...
                         'Callback', 'fxptui.cb_highlightsystem');
h.actions.put('HILITE_SYSTEM', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHILITESYSTEM'), ...
                         'Tag', 'FPT_simulink_hiliteblock',...
                         'Callback', 'fxptui.cb_highlightblock');
h.actions.put('HILITE_BLOCK', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHILITESDO'), ...
                         'Tag', 'FPT_simulink_hilitesdo',...
                         'Callback', 'fxptui.cb_highlightconnectedblks');
h.actions.put('HILITE_CONNECTED_BLOCKS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHILITEDTGROUP'), ...
                         'Tag', 'FPT_simulink_hilitedtgroup',...
                         'Callback', 'fxptui.cb_highlightdtgroup');
h.actions.put('HILITE_DTGROUP', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHILITECLEAR'), ...
                         'Tag', 'FPT_simulink_hiliteclear',...
                         'Callback', 'fxptui.cb_highlightclear');
h.actions.put('HILITE_CLEAR', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionOPENSYSTEM'), ...
                         'Tag', 'FPT_simulink_opensys',...
                         'Callback', 'fxptui.cb_opensystem');
h.actions.put('OPEN_SYSTEM', action);

%<logging "depth=Inf">
action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGALL'), ...
                         'Tag', 'FPT_simulink_logall',...
                         'Callback', 'fxptui.cb_signal_logging(''On'', ''All'', Inf);');
h.actions.put('LOG_ALL', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGALL'), ...
                         'Tag', 'FPT_simulink_lognone',...
                         'Callback', 'fxptui.cb_signal_logging(''Off'', ''All'', Inf);');
h.actions.put('LOG_NONE', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGNAMED'), ...
                         'Tag', 'FPT_simulink_lognamed',...
                         'Callback', 'fxptui.cb_signal_logging(''On'', ''NAMED'', Inf);');
h.actions.put('LOG_NAMED', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGNAMED'), ...
                         'Tag', 'FPT_simulink_lognonenamed',...
                         'Callback', 'fxptui.cb_signal_logging(''Off'', ''NAMED'', Inf);');
h.actions.put('LOG_NO_NAMED', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGUNNAMED'), ...
                         'Tag', 'FPT_simulink_logunnamed',...
                         'Callback', 'fxptui.cb_signal_logging(''On'', ''UNNAMED'', Inf);');
h.actions.put('LOG_UNNAMED', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGUNNAMED'), ...
                         'Tag', 'FPT_simulink_lognoneunnamed',...
                         'Callback', 'fxptui.cb_signal_logging(''Off'', ''UNNAMED'', Inf);');
h.actions.put('LOG_NO_UNNAMED', action);
%</logging>

%<logging "depth=1">
action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGALLSYS'), ...
                         'Tag', 'FPT_simulink_logallsys',...
                         'Callback', 'fxptui.cb_signal_logging(''On'', ''ALL'', 1);');
h.actions.put('LOG_ALL_SYS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGALLSYS'), ...
                         'Tag', 'FPT_simulink_lognonesys',...
                         'Callback', 'fxptui.cb_signal_logging(''Off'', ''ALL'', 1);');
h.actions.put('LOG_NONE_SYS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGOUTPORTSYS'), ...
                         'Tag', 'FPT_simulink_logoutport',...
                         'Callback', 'fxptui.cb_signal_logging(''On'', ''OUTPORT'', 1);');
h.actions.put('LOG_OUTPORT_SYS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGOUTPORTSYS'), ...
                         'Tag', 'FPT_simulink_lognoneoutport',...
                         'Callback', 'fxptui.cb_signal_logging(''Off'', ''OUTPORT'', 1);');
h.actions.put('LOG_NO_OUTPORT_SYS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGNAMEDSYS'), ...
                         'Tag', 'FPT_simulink_lognamedsys',...
                         'Callback', 'fxptui.cb_signal_logging(''On'', ''NAMED'', 1);');
h.actions.put('LOG_NAMED_SYS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGNAMEDSYS'), ...
                         'Tag', 'FPT_simulink_lognonenamedsys',...
                         'Callback', 'fxptui.cb_signal_logging(''Off'', ''NAMED'', 1);');
h.actions.put('LOG_NO_NAMED_SYS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGUNNAMEDSYS'), ...
                         'Tag', 'FPT_simulink_logunnamedsys',...
                         'Callback', 'fxptui.cb_signal_logging(''On'', ''UNNAMED'', 1);');
h.actions.put('LOG_UNNAMED_SYS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionLOGUNNAMEDSYS'), ...
                         'Tag', 'FPT_simulink_lognonenamedsys',...
                         'Callback', 'fxptui.cb_signal_logging(''Off'', ''UNNAMED'', 1);');
h.actions.put('LOG_NO_UNNAMED_SYS', action);
%</loggingon>

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionOPENBLOCKDIALOG'), ...
                         'Tag', 'FPT_simulink_openblkdlg',...
                         'Callback', 'fxptui.cb_openblkdlg');
h.actions.put('OPEN_BLOCKDIALOG', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionOPENSIGNALDIALOG'), ...
                         'Tag', 'FPT_simulink_opensigprops',...
                         'Callback', 'fxptui.cb_opensignaldlg');
h.actions.put('OPEN_SIGNALDIALOG', action);

action = am.createAction(h, ...
                         'Tag', 'FPT_simulink_opensiglogdlg',...
                         'Callback', 'fxptui.cb_opensiglogdlg');
h.actions.put('OPEN_SIGLOGDIALOG', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionOPENSIGNALDIALOG'), ...
                         'Tag', 'FPT_simulink_opensignaldlgsys',...
                         'Callback', 'fxptui.cb_opensignaldlg_sys(1)');
h.actions.put('OPEN_SIGLOGDIALOG_SYS', action);

action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionOPENBLOCKDIALOG'), ...
                         'Tag', 'FPT_simulink_openblkdlg',...
                         'Callback', 'fxptui.cb_opensysdlg');
h.actions.put('OPEN_SYSTEMDIALOG', action);

%AUTOSCALE------------------------------------------------------------------
action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'scalepropose.png'), ...	
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionSCALEPROPOSE'), ...
                         'Tag', 'FPT_autoscale_propose',...
                         'Callback', 'fxptui.cb_scalepropose;');
h.actions.put('SCALE_PROPOSE', action);

action = am.createAction(h, ...
                         'icon', fullfile(matlabroot, 'toolbox', 'fixedpoint', 'fixedpointtool', 'resources', 'scaleapply.png'), ...	
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionSCALEAPPLY'), ...
                         'Tag', 'FPT_autoscale_apply',...
                         'Callback', 'fxptui.cb_scaleapply');
h.actions.put('SCALE_APPLY', action);

%HELP----------------------------------------------------------------------
action = am.createAction(h, ...
                         'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHELPFXPTTOOL'), ...
                         'Tag', 'FPT_help_fptool',...
                         'Callback', 'fpbhelp(''fxptdlg'');');
h.actions.put('HELP_FXPTTOOL', action);

% Create the Simulink Fixed Point specific actions/menus if present.
if fxptui.isslfxptinstalled,
    
    action = am.createAction(h, ...
                             'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHELPSLFXPT'), ...
                             'Tag', 'FPT_help_slfxpt',...
                             'Callback', 'doc fixpoint');
    h.actions.put('HELP_SLFXPT', action);
    
    action = am.createAction(h, ...
                             'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHELPSLFXPTDEMOS'), ...
                             'Tag', 'FPT_help_slfxptdemos',...
                             'Callback', 'demo(''simulink'',''Simulink Fixed Point'')');
    h.actions.put('HELP_SLFXPTDEMOS', action);
    
    action = am.createAction(h, ...
                             'Text', DAStudio.message('FixedPoint:fixedPointTool:actionHELPABOUTSLFXPT'), ...
                             'Tag', 'FPT_help_aboutslfxpt',...
                             'Callback', 'fxptui.aboutslfixpoint');
    h.actions.put('HELP_ABOUTSLFXPT', action);
    
end

% [EOF]
