Library {
  Name			  "eml_evalin_matlab_lib"
  Version		  7.6
  MdlSubVersion		  0
  SavedCharacterEncoding  "US-ASCII"
  LibraryType		  "BlockLibrary"
  SaveDefaultBlockParams  on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  MaxMDLFileLineLength	  120
  Created		  "Wed Jun 18 14:31:23 2003"
  Creator		  "The MathWorks Inc."
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Wed Jul  7 21:18:24 2010"
  RTWModifiedTimeStamp	  199680318
  ModelVersionFormat	  "1.%<AutoIncrement:95>"
  ConfigurationManager	  "None"
  SampleTimeColors	  off
  SampleTimeAnnotations	  off
  LibraryLinkDisplay	  "none"
  WideLines		  off
  ShowLineDimensions	  off
  ShowPortDataTypes	  off
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  ShowStorageClass	  off
  ShowTestPointIcons	  on
  ShowSignalResolutionIcons on
  ShowViewerIcons	  on
  SortedOrder		  off
  ExecutionContextIcon	  off
  ShowLinearizationAnnotations on
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  SimulationMode	  "normal"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  RecordCoverage	  off
  CovSaveName		  "covdata"
  CovMetricSettings	  "dcmtr"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  CovForceBlockReductionOff on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeReport	  off
  CovReportOnPause	  on
  CovModelRefEnable	  "Off"
  CovExternalEMLEnable	  off
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock off
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      1
      Version		      "1.10.0"
      Array {
	Type			"Handle"
	Dimension		8
	Simulink.SolverCC {
	  $ObjectID		  2
	  Version		  "1.10.0"
	  StartTime		  "0.0"
	  StopTime		  "10.0"
	  AbsTol		  "auto"
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ZcThreshold		  "auto"
	  ConsecutiveZCsStepRelTol "10*128*eps"
	  MaxConsecutiveZCs	  "1000"
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  MaxConsecutiveMinStep	  "1"
	  RelTol		  "1e-3"
	  SolverMode		  "SingleTasking"
	  ConcurrentTasks	  off
	  Solver		  "ode45"
	  SolverName		  "ode45"
	  SolverJacobianMethodControl "auto"
	  ShapePreserveControl	  "DisableAll"
	  ZeroCrossControl	  "UseLocalSettings"
	  ZeroCrossAlgorithm	  "Nonadaptive"
	  AlgebraicLoopSolver	  "TrustRegion"
	  SolverResetMethod	  "Fast"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  InsertRTBMode		  "Whenever possible"
	}
	Simulink.DataIOCC {
	  $ObjectID		  3
	  Version		  "1.10.0"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveCompleteFinalSimState off
	  SaveFormat		  "Array"
	  SaveOutput		  on
	  SaveState		  off
	  SignalLogging		  on
	  DSMLogging		  on
	  InspectSignalLogs	  off
	  SaveTime		  on
	  ReturnWorkspaceOutputs  off
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsOut"
	  DSMLoggingName	  "dsmout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  ReturnWorkspaceOutputsName "out"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  4
	  Version		  "1.10.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    3
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "OptimizeModelRefInitCode"
	    PropName		    "DisabledProps"
	  }
	  BlockReduction	  on
	  BooleanDataType	  off
	  ConditionallyExecuteInputs on
	  InlineParams		  off
	  UseIntDivNetSlope	  off
	  UseSpecifiedMinMax	  off
	  InlineInvariantSignals  on
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnhancedBackFolding	  off
	  StrengthReduction	  off
	  ExpressionFolding	  on
	  BooleansAsBitfields	  off
	  BitfieldContainerType	  "uint_T"
	  EnableMemcpy		  on
	  MemcpyThreshold	  64
	  PassReuseOutputArgsAs	  "Structure reference"
	  ExpressionDepthLimit	  2147483647
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  on
	  NoFixptDivByZeroProtection off
	  EfficientFloat2IntCast  off
	  EfficientMapNaN2IntZero on
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	  MaxStackSize		  "Inherit from target"
	  BufferReusableBoundary  on
	  SimCompilerOptimization "Off"
	  AccelVerboseBuild	  off
	}
	Simulink.DebuggingCC {
	  $ObjectID		  5
	  Version		  "1.10.0"
	  RTPrefix		  "error"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  SignalInfNanChecking	  "none"
	  SignalRangeChecking	  "none"
	  ReadBeforeWriteMsg	  "UseLocalSettings"
	  WriteAfterWriteMsg	  "UseLocalSettings"
	  WriteAfterReadMsg	  "UseLocalSettings"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  SaveWithDisabledLinksMsg "warning"
	  SaveWithParameterizedLinksMsg	"none"
	  CheckSSInitialOutputMsg on
	  UnderspecifiedInitializationDetection	"Classic"
	  MergeDetectMultiDrivingBlocksExec "none"
	  CheckExecutionContextPreStartOutputMsg on
	  CheckExecutionContextRuntimeOutputMsg	on
	  SignalResolutionControl "TryResolveAllWithWarning"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  TimeAdjustmentMsg	  "none"
	  MaxConsecutiveZCsMsg	  "error"
	  MaskedZcDiagnostic	  "warning"
	  IgnoredZcDiagnostic	  "warning"
	  SolverPrmCheckMsg	  "none"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskDSMMsg	  "warning"
	  MultiTaskCondExecSysMsg "none"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  SigSpecEnsureSampleTimeMsg "warning"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterUnderflowMsg	  "none"
	  ParameterPrecisionLossMsg "warning"
	  ParameterTunabilityLossMsg "warning"
	  FixptConstUnderflowMsg  "none"
	  FixptConstOverflowMsg	  "none"
	  FixptConstPrecisionLossMsg "none"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  FcnCallInpInsideContextMsg "Use local settings"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  BusObjectLabelMismatch  "warning"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceMultiInstanceNormalModeStructChecksumCheck "error"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	  ModelReferenceExtraNoncontSigs "error"
	  StateNameClashWarn	  "warning"
	  SimStateInterfaceChecksumMismatchMsg "warning"
	  InitInArrayFormatMsg	  "warning"
	  StrictBusMsg		  "None"
	  BusNameAdapt		  "WarnAndRepair"
	  NonBusSignalsTreatedAsBus "none"
	  LoggingUnavailableSignals "error"
	  BlockIODiagnostic	  "none"
	  SFUnusedDataAndEventsDiag "warning"
	  SFUnexpectedBacktrackingDiag "warning"
	  SFInvalidInputDataAccessInChartInitDiag "warning"
	  SFNoUnconditionalDefaultTransitionDiag "warning"
	  SFTransitionOutsideNaturalParentDiag "warning"
	}
	Simulink.HardwareCC {
	  $ObjectID		  6
	  Version		  "1.10.0"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdBitPerFloat	  32
	  ProdBitPerDouble	  64
	  ProdBitPerPointer	  32
	  ProdLargestAtomicInteger "Char"
	  ProdLargestAtomicFloat  "None"
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "Specified"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetBitPerFloat	  32
	  TargetBitPerDouble	  64
	  TargetBitPerPointer	  32
	  TargetLargestAtomicInteger "Char"
	  TargetLargestAtomicFloat "None"
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  on
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  7
	  Version		  "1.10.0"
	  UpdateModelReferenceTargets "IfOutOfDate"
	  CheckModelReferenceTargetMessage "error"
	  EnableParallelModelReferenceBuilds off
	  ParallelModelReferenceMATLABWorkerInit "None"
	  ModelReferenceNumInstancesAllowed "Multi"
	  PropagateVarSize	  "Infer from blocks in model"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	  PropagateSignalLabelsOutOfModel off
	  SupportModelReferenceSimTargetCustomCode off
	}
	Simulink.SFSimCC {
	  $ObjectID		  8
	  Version		  "1.10.0"
	  SFSimEnableDebug	  on
	  SFSimOverflowDetection  on
	  SFSimEcho		  on
	  SimBlas		  on
	  SimCtrlC		  on
	  SimExtrinsic		  on
	  SimIntegrity		  on
	  SimUseLocalCustomCode	  off
	  SimParseCustomCode	  on
	  SimBuildMode		  "sf_incremental_build"
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  9
	  Version		  "1.10.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    "IncludeHyperlinkInReport"
	    PropName		    "DisabledProps"
	  }
	  SystemTargetFile	  "grt.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  GenerateMakefile	  on
	  TemplateMakefile	  "grt_default_tmf"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ConfigAtBuild		  off
	  RTWUseLocalCustomCode	  off
	  RTWUseSimCustomCode	  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  TargetLang		  "C"
	  IncludeBusHierarchyInRTWFileBlockHierarchyMap	off
	  IncludeERTFirstTime	  on
	  GenerateTraceInfo	  off
	  GenerateTraceReport	  off
	  GenerateTraceReportSl	  off
	  GenerateTraceReportSf	  off
	  GenerateTraceReportEml  off
	  GenerateCodeInfo	  off
	  GenerateSLWebview	  off
	  RTWCompilerOptimization "Off"
	  CheckMdlBeforeBuild	  "Off"
	  CustomRebuildMode	  "OnUpdate"
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      10
	      Version		      "1.10.0"
	      Array {
		Type			"Cell"
		Dimension		8
		Cell			"IgnoreCustomStorageClasses"
		Cell			"InsertBlockDesc"
		Cell			"SFDataObjDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		PropName		"DisabledProps"
	      }
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IgnoreTestpoints	      off
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      MATLABFcnDesc	      off
	      IncDataTypeInIds	      off
	      MangleLength	      1
	      CustomSymbolStrGlobalVar "$R$N$M"
	      CustomSymbolStrType     "$N$R$M"
	      CustomSymbolStrField    "$N$M"
	      CustomSymbolStrFcn      "$R$N$M$F"
	      CustomSymbolStrFcnArg   "rt$I$N$M"
	      CustomSymbolStrBlkIO    "rtb_$N$M"
	      CustomSymbolStrTmpVar   "$N$M"
	      CustomSymbolStrMacro    "$R$N$M"
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      InsertPolySpaceComments off
	      SimulinkBlockComments   on
	      MATLABSourceComments    off
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	      UseSimReservedNames     off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      11
	      Version		      "1.10.0"
	      Array {
		Type			"Cell"
		Dimension		8
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportComplex"
		PropName		"DisabledProps"
	      }
	      TargetFcnLib	      "ansi_tfl_tmw.mat"
	      TargetLibSuffix	      ""
	      TargetPreCompLibLocation ""
	      TargetFunctionLibrary   "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      ERTMultiwordTypeDef     "System defined"
	      ERTCodeCoverageTool     "None"
	      ERTMultiwordLength      256
	      MultiwordLength	      2048
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      GenerateTestInterfaces  off
	      IsPILTarget	      off
	      ModelReferenceCompliant on
	      ParMdlRefBuildCompliant on
	      CompOptLevelCompliant   on
	      IncludeMdlTerminateFcn  on
	      GeneratePreprocessorConditionals "Disable all"
	      CombineOutputUpdateFcns off
	      CombineSignalStateStructs	off
	      SuppressErrorStatus     off
	      ERTFirstTimeCompliant   off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      SupportVariableSizeSignals off
	      EnableShiftOperators    on
	      ParenthesesLevel	      "Nominal"
	      PortableWordSizes	      off
	      ModelStepFunctionPrototypeControlCompliant off
	      CPPClassGenCompliant    off
	      AutosarCompliant	      off
	      UseMalloc		      off
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      ExtModeIntrfLevel	      "Level1"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      CurrentDlgPage	      "Solver"
      ConfigPrmDlgPosition    " [ 400, 210, 1280, 840 ] "
    }
    PropName		    "ConfigurationSets"
  }
  BlockDefaults {
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
    BlockRotation	    0
    BlockMirror		    off
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    UseDisplayTextAsClickCallback off
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Abs
      ZeroCross		      on
      SampleTime	      "-1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Same as input"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
    }
    Block {
      BlockType		      Assertion
      StopWhenAssertionFail   on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Constant
      Value		      "1"
      VectorParams1D	      on
      SamplingMode	      "Sample based"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Inherit from 'Constant value'"
      LockScale		      off
      SampleTime	      "inf"
      FramePeriod	      "inf"
      PreserveConstantTs      off
    }
    Block {
      BlockType		      Demux
      Outputs		      "4"
      DisplayOption	      "none"
      BusSelectionMode	      off
    }
    Block {
      BlockType		      DigitalClock
      SampleTime	      "1"
    }
    Block {
      BlockType		      Display
      Format		      "short"
      Decimation	      "10"
      Floating		      off
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Inport
      Port		      "1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      LatchByDelayingOutsideSignal off
      LatchInputForFeedbackSignals off
      Interpolate	      on
    }
    Block {
      BlockType		      Logic
      Operator		      "AND"
      Inputs		      "2"
      IconShape		      "rectangular"
      AllPortsSameDT	      on
      OutDataTypeStr	      "Inherit: Logical (see Configuration Parameters: Optimization)"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      MinMax
      Function		      "min"
      Inputs		      "1"
      InputSameDT	      on
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      ZeroCross		      on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      SourceOfInitialOutputValue "Dialog"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
    }
    Block {
      BlockType		      RelationalOperator
      Operator		      ">="
      InputSameDT	      on
      OutDataTypeStr	      "Inherit: Logical (see Configuration Parameters: Optimization)"
      ZeroCross		      on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Reshape
      OutputDimensionality    "1-D array"
      OutputDimensions	      "[1,1]"
    }
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      SFunctionModules	      "''"
      PortCounts	      "[]"
      SFunctionDeploymentMode off
    }
    Block {
      BlockType		      Stop
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      "FromPortIcon"
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      TreatAsAtomicUnit	      off
      CheckFcnCallInpInsideContextMsg off
      SystemSampleTime	      "-1"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      DataTypeOverrideAppliesTo	"AllNumericTypes"
      MinMaxOverflowLogging   "UseLocalSettings"
      Variant		      off
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Sum
      IconShape		      "rectangular"
      Inputs		      "++"
      CollapseMode	      "All dimensions"
      CollapseDim	      "1"
      InputSameDT	      on
      AccumDataTypeStr	      "Inherit: Inherit via internal rule"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Same as first input"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Terminator
    }
    Block {
      BlockType		      ToWorkspace
      VariableName	      "simulink_output"
      MaxDataPoints	      "1000"
      Decimation	      "1"
      SampleTime	      "0"
      FixptAsFi		      off
    }
  }
  System {
    Name		    "eml_evalin_matlab_lib"
    Location		    [411, 415, 1083, 732]
    Open		    on
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
    TiledPageScale	    1
    ShowPageBoundaries	    off
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    SIDHighWatermark	    11
    Block {
      BlockType		      Constant
      Name		      "Constant"
      SID		      1
      Position		      [30, 38, 155, 62]
      ShowName		      off
      FontSize		      12
      Value		      "single(magic(4))"
    }
    Block {
      BlockType		      Constant
      Name		      "Constant1"
      SID		      2
      Position		      [30, 79, 155, 101]
      ShowName		      off
      FontSize		      12
      Value		      "5+magic(2)*i"
    }
    Block {
      BlockType		      SubSystem
      Name		      "Example\neML script\n# |eML-ML| optional_eML_file.m #"
      SID		      3
      Ports		      [2, 2]
      Position		      [195, 29, 300, 111]
      FontSize		      12
      PermitHierarchicalResolution "ExplicitOnly"
      TreatAsAtomicUnit	      on
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskType		      "Stateflow"
      MaskDescription	      "Stateflow diagram"
      MaskSelfModifiable      on
      MaskDisplay	      "disp('passthrough');"
      MaskIconFrame	      on
      MaskIconOpaque	      off
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Example\neML script\n# |eML-ML| optional_eML_file.m #"
	Location		[257, 457, 812, 717]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	SIDHighWatermark	15
	Block {
	  BlockType		  Inport
	  Name			  "u1"
	  SID			  1
	  Position		  [20, 101, 40, 119]
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "u2"
	  SID			  2
	  Position		  [20, 136, 40, 154]
	  Port			  "2"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Demux
	  Name			  " Demux "
	  SID			  13
	  Ports			  [1, 1]
	  Position		  [270, 180, 320, 220]
	  Outputs		  "1"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  " SFunction "
	  SID			  12
	  Tag			  "Stateflow S-Function eml_evalin_matlab_lib 2"
	  Ports			  [2, 3]
	  Position		  [180, 100, 230, 180]
	  FunctionName		  "sf_sfun"
	  PortCounts		  "[2 3]"
	  EnableBusSupport	  off
	  Port {
	    PortNumber		    2
	    Name		    "y1"
	    RTWStorageClass	    "Auto"
	    DataLoggingNameMode	    "SignalName"
	  }
	  Port {
	    PortNumber		    3
	    Name		    "y2"
	    RTWStorageClass	    "Auto"
	    DataLoggingNameMode	    "SignalName"
	  }
	}
	Block {
	  BlockType		  Terminator
	  Name			  " Terminator "
	  SID			  15
	  Position		  [460, 191, 480, 209]
	}
	Block {
	  BlockType		  Outport
	  Name			  "y1"
	  SID			  6
	  Position		  [460, 101, 480, 119]
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Outport
	  Name			  "y2"
	  SID			  7
	  Position		  [460, 136, 480, 154]
	  Port			  "2"
	  IconDisplay		  "Port number"
	}
	Line {
	  SrcBlock		  " SFunction "
	  SrcPort		  1
	  DstBlock		  " Demux "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "u1"
	  SrcPort		  1
	  DstBlock		  " SFunction "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "u2"
	  SrcPort		  1
	  DstBlock		  " SFunction "
	  DstPort		  2
	}
	Line {
	  Name			  "y1"
	  Labels		  [0, 0]
	  SrcBlock		  " SFunction "
	  SrcPort		  2
	  DstBlock		  "y1"
	  DstPort		  1
	}
	Line {
	  Name			  "y2"
	  Labels		  [0, 0]
	  SrcBlock		  " SFunction "
	  SrcPort		  3
	  DstBlock		  "y2"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  " Demux "
	  SrcPort		  1
	  DstBlock		  " Terminator "
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "README"
      SID		      4
      Ports		      []
      Position		      [450, 130, 564, 206]
      List {
	ListType		RTWdata
	document_text01		"Usage of '|eML-ML| <= Tol' Block  - Wish: EMM 2/26/03 update the doc here\n \n- Strictly for intern"
	"al MathWorks use and qualification of eML script block\n\n- This masked subsystem can be used to activate a MATLAB ba"
	"sed, numerical equivalency test\n  for specialy named eML scripts. Their name must contain \"## eML EVALIN MATLAB ##\""
	"\n\n- For development,\n          0- Before doing anything in Stateflow/eML do >> sf('Feature','eML evalin MATLAB','o"
	"n');\n          1- augment the eML block name with \"# |eML-ML| <optional_eML_file.m> #\" otherwise a\n             t"
	"emporary M-file is used to evaluate the eML script as a MATLAB function. The string\n             between #(s) is not"
	" space sensitive, however the optional M file name - if present -\n             must include the \".m\" extension.\n "
	"         2- Drag and drop the blue blocks in the Library to your model\n          3- Make sure the \"STOP at T>0\" bl"
	"ock is at root level\n          4- You are all set to go!\n\n          5- The I/O data dictionary gets updated atimat"
	"ically with Ctl-T (Simulation), Ctl-D (Update Diag.)\n              or Ctl-S (Save model).\n          6- In Rebuild-A"
	"LL  mode,  Ctl-T or Ctl-D will auto-rebuild all the charts => you no longer need to\n              keep editing the e"
	"ML script to force a rebuild.\n          7- *** IMPORTANT *** your model containing these blocks can be simply put in"
	"\n              <matlabroot>/test/toolbox/eml/eml_checkin/evalin_ml_models directory for testing in BaT.\n\n- eML eva"
	"lin mechanism supports multiple I/O ports as well as all Simulink builtin types\n  including complex numbers. After a"
	"n evalin MATLAB the I/O ports of #|eML-ML|#\n  blocks are auomatically updated for size, type, and complexity.\n\n- T"
	"he VERBOSE eML evalin mode (set in STOP at T>0 block) will display extra diagnostic messages while\n  evaluating eML "
	"scripts in MATLAB.\n \n- The InBaT evalin Mode will display all the failures (just like BaT) instead of stopping on f"
	"irst\n  assertion failure. Creating a global ENABLE_EML_EVALIN_MATLAB = 'INBAT' does the same thing ignoring\n  the m"
	"odel settings for eML evalin mode, and RebuildAll. This global is used in\n  test/toolbox/eml/eml_checkin/trunmdls.m\n"
	"\n- You can turn-off individual assertions by setting the Tolerance parameter of the test block to\n  Inf, or setting"
	" its Geck field to a non-zero geck number.\n\n- The SILENT mode is similar to InBaT, but on error it will display mor"
	"e (interactive) information\n  before continuing.\n  \n- Tolerance can be a scalar value used for both double and sin"
	"gle precision types, or it can a vector of\n  two elements - first element used for double precision tests and the 2n"
	"d for single precision.\n  \n- Apart from the default Tolerance property, you can choose to override the values for G"
	"LNX86, SOL2,\n  and MAC platforms.\n\n\n"
      }
      CopyFcn		      "docblock('breaklink',gcb);"
      DeleteFcn		      "docblock('close_document',gcb);"
      PreSaveFcn	      "docblock('save_document',gcb);"
      OpenFcn		      "docblock('edit_document',gcb);"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskType		      "DocBlock"
      MaskDescription	      "Use this block to save long descriptive text with the model.  Double-clicking the block w"
      "ill open an editor."
      MaskPromptString	      "E Coder Flag|Document Type"
      MaskStyleString	      "edit,popup(Text|RTF|HTML)"
      MaskVariables	      "ECoderFlag=&1;DocumentType=&2;"
      MaskTunableValueString  "off,off"
      MaskCallbackString      "|"
      MaskEnableString	      "on,on"
      MaskVisibilityString    "on,off"
      MaskToolTipString	      "on,on"
      MaskDisplay	      "plot([.8 0 0 1 1 .8 .8 1],[1 1 0 0 .8 1 .8 .8]);\ntext(.5,.5,'DOC','horizontalalignment','cen"
      "ter');\n"
      MaskIconFrame	      off
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "|Text"
      System {
	Name			"README"
	Location		[480, 85, 980, 386]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  SubSystem
	  Name			  "EmptySubsystem"
	  SID			  5
	  Ports			  []
	  Position		  [115, 50, 145, 80]
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  System {
	    Name		    "EmptySubsystem"
	    Location		    [146, 180, 902, 673]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	  }
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Test #1"
      SID		      6
      Ports		      [1]
      Position		      [380, 39, 615, 61]
      BackgroundColor	      "cyan"
      InitFcn		      "set_param(gcb,'BackgroundColor','orange');             \n                                       "
      "                \n                                                       \nif(exist('DO_EML_SINGLE', 'var') && D"
      "O_EML_SINGLE == 1)\n    set_param(gcb, 'precision', '2');                  \nelse                               "
      "                    \n    set_param(gcb, 'precision', '1');                  \nend                              "
      "                      \n                                                       "
      StopFcn		      "set_param(gcb,'BackgroundColor','cyan');"
      FontSize		      12
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskType		      "|eML-ML| <= Tol"
      MaskPromptString	      "|||||Tolerance [double single] (Inf disables assertion)|GLNX86 Tolerance override|SOL2 T"
      "olerance override|MAC Tolerance override|Geck (non-zero value disables assertion)"
      MaskStyleString	      "edit,edit,edit,edit,edit,edit,edit,edit,edit,edit"
      MaskVariables	      "expected=@1;emlSource=@2;emlBlock=@3;tol=@4;precision=@5;tolPCWIN=@6;tolGLNX86=&7;tolSOL2=&"
      "8;tolMAC=&9;geck=@10;"
      MaskTunableValueString  "off,off,off,off,off,off,off,off,off,off"
      MaskCallbackString      "|||||||||"
      MaskEnableString	      "on,on,on,on,on,on,on,on,on,on"
      MaskVisibilityString    "off,off,off,off,off,on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on,on,on,on,on,on"
      MaskInitialization      "tol = sf('Private','eml_evalin_matlab','tol_calc',tolPCWIN,tolGLNX86,tolSOL2,tolMAC);\n"
      MaskSelfModifiable      on
      MaskDisplay	      "disp(sf('Private','eml_evalin_matlab','icon',tol,geck))"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "|\"eml_evalin_matlab_lib/passthrough.y1 in eML Script\"(#27)|eml_evalin_matlab_lib/Exampl"
      "e\neML script\n## eML EVALIN MATLAB ##|0|0|[1,1]|[1,1]|[1,1]|[1,1]|0"
      System {
	Name			"Test #1"
	Location		[132, 18, 1400, 706]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"96"
	SIDHighWatermark	29
	Block {
	  BlockType		  Inport
	  Name			  "from eML"
	  SID			  1
	  Position		  [30, 48, 60, 62]
	  NamePlacement		  "alternate"
	  FontSize		  14
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Display
	  Name			  "<= Tolerance"
	  SID			  2
	  Ports			  [1]
	  Position		  [890, 27, 995, 353]
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Decimation		  "1"
	  Lockdown		  off
	}
	Block {
	  BlockType		  Display
	  Name			  "Difference"
	  SID			  3
	  Ports			  [1]
	  Position		  [750, 30, 855, 350]
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Decimation		  "1"
	  Lockdown		  off
	}
	Block {
	  BlockType		  Constant
	  Name			  "GECKED"
	  SID			  4
	  Position		  [670, 570, 780, 600]
	  BlockRotation		  270
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Value			  "geck~=0"
	}
	Block {
	  BlockType		  Display
	  Name			  "MATLAB"
	  SID			  5
	  Ports			  [1]
	  Position		  [1100, 30, 1275, 350]
	  BlockMirror		  on
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Format		  "long"
	  Decimation		  "1"
	  Lockdown		  off
	}
	Block {
	  BlockType		  MinMax
	  Name			  "MinMax1"
	  SID			  6
	  Ports			  [1, 1]
	  Position		  [310, 425, 345, 445]
	  ShowName		  off
	  Function		  "max"
	}
	Block {
	  BlockType		  Reshape
	  Name			  "Reshape"
	  SID			  29
	  Ports			  [1, 1]
	  Position		  [235, 424, 275, 446]
	  ShowName		  off
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "Subsystem3"
	  SID			  8
	  Ports			  [3, 2]
	  Position		  [755, 443, 860, 557]
	  ShowName		  off
	  FontSize		  14
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  System {
	    Name		    "Subsystem3"
	    Location		    [985, 103, 1373, 270]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "|diff|"
	      SID		      9
	      Position		      [25, 38, 55, 52]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "Tol"
	      SID		      10
	      Position		      [35, 73, 65, 87]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "geck"
	      SID		      11
	      Position		      [165, 98, 195, 112]
	      Port		      "3"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Logic
	      Name		      "Logical\nOperator1"
	      SID		      12
	      Ports		      [2, 1]
	      Position		      [245, 43, 280, 127]
	      NamePlacement	      "alternate"
	      ShowName		      off
	      FontSize		      14
	      Operator		      "OR"
	      AllPortsSameDT	      off
	    }
	    Block {
	      BlockType		      RelationalOperator
	      Name		      "Relational\nOperator"
	      SID		      13
	      Ports		      [2, 1]
	      Position		      [90, 27, 115, 98]
	      NamePlacement	      "alternate"
	      ShowName		      off
	      FontSize		      14
	      Operator		      "<="
	      InputSameDT	      off
	      ZeroCross		      off
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "|diff| <= Tol"
	      SID		      14
	      Position		      [190, 18, 220, 32]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "True"
	      SID		      15
	      Position		      [310, 78, 340, 92]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Line {
	      SrcBlock		      "geck"
	      SrcPort		      1
	      DstBlock		      "Logical\nOperator1"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "Relational\nOperator"
	      SrcPort		      1
	      Points		      [25, 0; 10, 0]
	      Branch {
		DstBlock		"Logical\nOperator1"
		DstPort			1
	      }
	      Branch {
		Points			[0, -40]
		DstBlock		"|diff| <= Tol"
		DstPort			1
	      }
	    }
	    Line {
	      SrcBlock		      "|diff|"
	      SrcPort		      1
	      DstBlock		      "Relational\nOperator"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "Tol"
	      SrcPort		      1
	      DstBlock		      "Relational\nOperator"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "Logical\nOperator1"
	      SrcPort		      1
	      DstBlock		      "True"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "Subsystem4"
	  SID			  16
	  Ports			  [2, 1]
	  Position		  [150, 443, 190, 472]
	  ShowName		  off
	  FontSize		  14
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  MaskDisplay		  "disp('|diff|')"
	  MaskIconFrame		  on
	  MaskIconOpaque	  on
	  MaskIconRotate	  "none"
	  MaskPortRotate	  "default"
	  MaskIconUnits		  "autoscale"
	  System {
	    Name		    "Subsystem4"
	    Location		    [532, 197, 757, 314]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    Block {
	      BlockType		      Inport
	      Name		      "In1"
	      SID		      17
	      Position		      [25, 33, 55, 47]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "In2"
	      SID		      18
	      Position		      [85, 85, 115, 100]
	      BlockRotation	      270
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Abs
	      Name		      "Abs"
	      SID		      19
	      Position		      [130, 28, 160, 52]
	      NamePlacement	      "alternate"
	      ShowName		      off
	    }
	    Block {
	      BlockType		      Sum
	      Name		      "Sum"
	      SID		      20
	      Ports		      [2, 1]
	      Position		      [90, 30, 110, 50]
	      NamePlacement	      "alternate"
	      ShowName		      off
	      IconShape		      "round"
	      Inputs		      "|+-"
	      InputSameDT	      off
	      OutDataTypeStr	      "Inherit: Inherit via internal rule"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "Abs Diff"
	      SID		      21
	      Position		      [185, 33, 215, 47]
	      IconDisplay	      "Port number"
	    }
	    Line {
	      SrcBlock		      "Sum"
	      SrcPort		      1
	      DstBlock		      "Abs"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "In1"
	      SrcPort		      1
	      DstBlock		      "Sum"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "In2"
	      SrcPort		      1
	      DstBlock		      "Sum"
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "Abs"
	      SrcPort		      1
	      DstBlock		      "Abs Diff"
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  Constant
	  Name			  "Tolerance"
	  SID			  22
	  Position		  [275, 483, 420, 517]
	  BackgroundColor	  "cyan"
	  FontSize		  14
	  Value			  "abs(tol(precision))"
	}
	Block {
	  BlockType		  Display
	  Name			  "Tolerance Value"
	  SID			  23
	  Ports			  [1]
	  Position		  [525, 150, 745, 175]
	  BlockRotation		  270
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Format		  "long"
	  Decimation		  "1"
	  Lockdown		  off
	}
	Block {
	  BlockType		  Display
	  Name			  "eML"
	  SID			  24
	  Ports			  [1]
	  Position		  [150, 33, 325, 347]
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Format		  "long"
	  Decimation		  "1"
	  Lockdown		  off
	}
	Block {
	  BlockType		  Constant
	  Name			  "from MATLAB"
	  SID			  25
	  Position		  [15, 444, 90, 486]
	  FontSize		  14
	  Value			  "expected"
	  VectorParams1D	  off
	}
	Block {
	  BlockType		  ToWorkspace
	  Name			  "max(|diff|)"
	  SID			  26
	  Ports			  [1]
	  Position		  [375, 424, 600, 446]
	  NamePlacement		  "alternate"
	  ShowName		  off
	  InitFcn		  "                                                                                                       "
	  "                                                                                                     \nif(exist('SE"
	  "T_TOL', 'var') & SET_TOL==1)                                                                                       "
	  "                                                                             \nevalin('base',  ['if(~exist(''max_' "
	  "strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p1'')), ' 'max_' strrep(strrep(strrep(gcs, '/', '_'), '"
	  " ', '_'), '#', '_') '_p1.signals.values = inf; end'])\n                                                            "
	  "                                                                                                                   "
	  "                             \nevalin('base',  ['if(~exist(''max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), "
	  "'#', '_') '_p2'')), max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p2.signals.values = inf; end'"
	  "])   \nend                                                                                                         "
	  "                                                                                                \n                 "
	  "                                                                                                                   "
	  "                                                                        \nif(exist('EML_NO_OUT', 'var') & EML_NO_OU"
	  "T==1)                                                                                                              "
	  "                                                \nset_param(gcb, 'variableName', ['foo_' strrep(strrep(strrep(gcs, "
	  "'/', '_'), ' ', '_'), '#', '_') '_p' get_param(gcs, 'precision')]);                                                "
	  "                        \nelse                                                                                     "
	  "                                                                                                                   "
	  "\nset_param(gcb, 'variableName', ['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p' get_param(g"
	  "cs, 'precision')]);                                                                        \nend                   "
	  "                                                                                                                   "
	  "                                                                   \n                                              "
	  "                                                                                                                   "
	  "                                           \n                                                                      "
	  "                                                                                                                   "
	  "                   "
	  StopFcn		  "if(exist('SET_TOL', 'var') & SET_TOL==1)                                                               "
	  "                                                                                                                   "
	  "                                                            \n                                                     "
	  "                                                                                                                   "
	  "                                                                                                              \n   "
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "                                             \n                                                                    "
	  "                                                                                                                   "
	  "                                                                                               \n                  "
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "                              \n                                                                                   "
	  "                                                                                                                   "
	  "                                                                                \nset_param(gcs, ['tol' upper(compu"
	  "ter)], ['[' num2str(eval(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p1.signals.values']), "
	  "'%0.6g') ',' num2str(eval(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p2.signals.values']),"
	  " '%0.6g') ']'])\n                                                                                                  "
	  "                                                                                                                   "
	  "                                                                 \n                                                "
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "\nend                                                                                                              "
	  "                                                                                                                   "
	  "                                                  \n                                                               "
	  "                                                                                                                   "
	  "                                                                                                    \n             "
	  "                                                                                                                   "
	  "                                    if(exist('EML_NO_OUT', 'var') & EML_NO_OUT==1)                                 "
	  "                                   \n                                                                              "
	  "                                                                                                                   "
	  "                                                                                     \n                            "
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "                    \n                                                                                             "
	  "                                                                                                                   "
	  "                                                                      \nincEmlTol(['max_' strrep(strrep(strrep(gcs,"
	  " '/', '_'), ' ', '_'), '#', '_') '_p1'])                                                                           "
	  "                                                                                                                   "
	  "     \n                                                                                                            "
	  "                                                                                                                   "
	  "                                                       \n                                                          "
	  "                                                                                                                   "
	  "                                                                                                         \nincEmlTo"
	  "l(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p2'])                                        "
	  "                                                                                                                   "
	  "                                        \n                                                                         "
	  "                                                                                                                   "
	  "                                                                                          \n                       "
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "                         \n                                                                                        "
	  "                                                                                                                   "
	  "                                                                           \nend                                   "
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "          \n                                                                                                       "
	  "                                                                                                                   "
	  "                                                            \n                                                     "
	  "                                                                                                                   "
	  "                                                                                                              \n   "
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "                                             \n                                                                    "
	  "                                                                                                                   "
	  "                                                                                               \n                  "
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "                              "
	  VariableName		  "max_AddSubMulDiv_test_sub_Test__1_p"
	  MaxDataPoints		  "inf"
	  SampleTime		  "-1"
	  SaveFormat		  "Structure"
	}
	Block {
	  BlockType		  ToWorkspace
	  Name			  "max(|diff|)1"
	  SID			  27
	  Ports			  [1]
	  Position		  [1035, 419, 1260, 441]
	  NamePlacement		  "alternate"
	  ShowName		  off
	  InitFcn		  "                                                                                                       "
	  "                                \nset_param(gcb, 'variableName', ['assert_' strrep(strrep(strrep(gcs, '/', '_'), ' "
	  "', '_'), '#', '_') '_p' get_param(gcs, 'precision')]);\n                                                           "
	  "                                                                            \n                                     "
	  "                                                                                                  \n               "
	  "                                                                                                                   "
	  "     \n                                                                                                            "
	  "                           \n                                                                                      "
	  "                                                 "
	  StopFcn		  "if(exist('SET_TOL', 'var') & SET_TOL==1)                                                               "
	  "                                                                                                                   "
	  "                                                            \nset_param(gcs, ['tol' upper(computer)], ['[' num2str("
	  "eval(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p1.signals.values']), '%.17g') ',' num2str"
	  "(eval(['max_' strrep(strrep(strrep(gcs, '/', '_'), ' ', '_'), '#', '_') '_p2.signals.values']), '%.17g') ']'])\nend"
	  "                                                                                                                   "
	  "                                                                                                                   "
	  "                                             \n                                                                    "
	  "                                                                                                                   "
	  "                                                                                               "
	  VariableName		  "assert_AddSubMulDiv_test_sub_Test__1_p"
	  MaxDataPoints		  "inf"
	  SampleTime		  "-1"
	  SaveFormat		  "Structure"
	}
	Block {
	  BlockType		  Assertion
	  Name			  "|diff| <= Tolerance"
	  SID			  28
	  Position		  [980, 514, 1055, 546]
	  BackgroundColor	  "cyan"
	  NamePlacement		  "alternate"
	  FontSize		  14
	  Enabled		  off
	  AssertionFailFcn	  "sf('Private','eml_evalin_matlab','failure')"
	}
	Line {
	  SrcBlock		  "GECKED"
	  SrcPort		  1
	  Points		  [0, -25]
	  DstBlock		  "Subsystem3"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Subsystem4"
	  SrcPort		  1
	  Points		  [0, 0; 20, 0]
	  Branch {
	    Points		    [520, 0]
	    Branch {
	      DstBlock		      "Difference"
	      DstPort		      1
	    }
	    Branch {
	      DstBlock		      "Subsystem3"
	      DstPort		      1
	    }
	  }
	  Branch {
	    Points		    [0, -25]
	    DstBlock		    "Reshape"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Subsystem3"
	  SrcPort		  1
	  Points		  [10, 0]
	  DstBlock		  "<= Tolerance"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "from MATLAB"
	  SrcPort		  1
	  Points		  [0, 0; 20, 0]
	  Branch {
	    Points		    [0, 150; 1185, 0; 0, -425]
	    DstBlock		    "MATLAB"
	    DstPort		    1
	  }
	  Branch {
	    DstBlock		    "Subsystem4"
	    DstPort		    2
	  }
	}
	Line {
	  Labels		  [0, 0]
	  SrcBlock		  "Subsystem3"
	  SrcPort		  2
	  Points		  [0, 0; 60, 0]
	  Branch {
	    DstBlock		    "|diff| <= Tolerance"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, -100]
	    DstBlock		    "max(|diff|)1"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "MinMax1"
	  SrcPort		  1
	  DstBlock		  "max(|diff|)"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "from eML"
	  SrcPort		  1
	  Points		  [50, 0; 0, 135]
	  Branch {
	    DstBlock		    "eML"
	    DstPort		    1
	  }
	  Branch {
	    Points		    [0, 260]
	    DstBlock		    "Subsystem4"
	    DstPort		    1
	  }
	}
	Line {
	  SrcBlock		  "Reshape"
	  SrcPort		  1
	  DstBlock		  "MinMax1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Tolerance"
	  SrcPort		  1
	  Points		  [210, 0]
	  Branch {
	    DstBlock		    "Subsystem3"
	    DstPort		    2
	  }
	  Branch {
	    DstBlock		    "Tolerance Value"
	    DstPort		    1
	  }
	}
	Annotation {
	  Name			  "|-----------For setting RTW tolerances ----------|"
	  Position		  [1149, 402]
	}
	Annotation {
	  Name			  "|-------------------------------- For setting tolerances -----------------------------|"
	  Position		  [422, 406]
	}
	Annotation {
	  Name			  "This should output true"
	  Position		  [1135, 457]
	  DropShadow		  on
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "eML stop t>0"
      SID		      7
      Tag		      "eML_evalin_testController"
      Ports		      []
      Position		      [150, 208, 320, 258]
      BackgroundColor	      "cyan"
      DropShadow	      on
      InitFcn		      "set_param(gcb,'BackgroundColor','orange');"
      StartFcn		      "eml_do_selective_run('close');"
      StopFcn		      "set_param(gcb,'BackgroundColor','cyan');"
      OpenFcn		      "eml_do_selective_run;"
      FontSize		      14
      FontWeight	      "bold"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskType		      "eML STOP at T==?"
      MaskDescription	      "%disp(sf('Private','eml_evalin_matlab','eMLstop'));"
      MaskPromptString	      "eML Evalin Mode|Stop Time (s)|Rebuild Every time"
      MaskStyleString	      "popup(Verbose|InBaT|Silent),edit,checkbox"
      MaskVariables	      "evalinMode=&1;stopTime=@2;rebuildAll=&3;"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskDisplay	      "disp('Double-click here first');"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "Verbose|0|on"
      System {
	Name			"eML stop t>0"
	Location		[1010, 140, 1371, 304]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  DigitalClock
	  Name			  "Digital Clock"
	  SID			  8
	  Position		  [30, 56, 110, 84]
	}
	Block {
	  BlockType		  Constant
	  Name			  "For RTW"
	  SID			  9
	  Position		  [30, 21, 110, 49]
	  ShowName		  off
	  Value			  "stopTime"
	}
	Block {
	  BlockType		  RelationalOperator
	  Name			  "Relational\nOperator"
	  SID			  10
	  Ports			  [2, 1]
	  Position		  [145, 18, 175, 87]
	  ShowName		  off
	  Operator		  "<="
	  InputSameDT		  off
	}
	Block {
	  BlockType		  Stop
	  Name			  "Stop Simulation\nafter first step"
	  SID			  11
	  Position		  [240, 37, 275, 73]
	}
	Line {
	  SrcBlock		  "Digital Clock"
	  SrcPort		  1
	  DstBlock		  "Relational\nOperator"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "For RTW"
	  SrcPort		  1
	  DstBlock		  "Relational\nOperator"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Relational\nOperator"
	  SrcPort		  1
	  DstBlock		  "Stop Simulation\nafter first step"
	  DstPort		  1
	}
      }
    }
    Line {
      SrcBlock		      "Constant"
      SrcPort		      1
      DstBlock		      "Example\neML script\n# |eML-ML| optional_eML_file.m #"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Constant1"
      SrcPort		      1
      DstBlock		      "Example\neML script\n# |eML-ML| optional_eML_file.m #"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Example\neML script\n# |eML-ML| optional_eML_file.m #"
      SrcPort		      1
      DstBlock		      "Test #1"
      DstPort		      1
    }
  }
}
# Finite State Machines
#
#    Stateflow Version 7.5 (R2010a) dated Jul  7 2010, 19:59:58
#
#


Stateflow {
  machine {
    id			    1
    name		    "eml_evalin_matlab_lib"
    created		    "18-Jun-2003 14:31:32"
    isLibrary		    1
    firstTarget		    11
    sfVersion		    75014000.000003
    sfDemoChecksum	    [2447570105 3252532319 2383817598 3985728699]
  }
  chart {
    id			    2
    name		    "Example\neML script\n# |eML-ML| optional_eML_file.m #"
    windowPosition	    [261.325 -143.517 200.25 189.75]
    viewLimits		    [0 156.75 0 153.75]
    screen		    [1 1 1600 1200 1.25]
    treeNode		    [0 3 0 0]
    firstTransition	    5
    firstJunction	    4
    viewObj		    2
    machine		    1
    toolbarMode		    LIBRARY_TOOLBAR
    ssIdHighWaterMark	    7
    decomposition	    CLUSTER_CHART
    type		    EML_CHART
    firstData		    6
    chartFileNumber	    2
    disableImplicitCasting  1
    eml {
      name		      "passthrough"
    }
    supportVariableSizing   0
  }
  state {
    id			    3
    labelString		    "eML_blk_kernel()"
    position		    [18 64.5 118 66]
    fontSize		    12
    chart		    2
    treeNode		    [2 0 0 0]
    superState		    SUBCHART
    subviewer		    2
    ssIdNumber		    1
    type		    FUNC_STATE
    decomposition	    CLUSTER_STATE
    eml {
      isEML		      1
      script		      "function [y1,y2]=passthrough(u1,u2)\n% a simple pass through example\n   y1 = u1;\n   y2 = u2;\n\n"
      "\n"
      editorLayout	      "100 M4x1[440 37 600 400]"
      fimathString	      "fimath(...\n'RoundMode', 'floor',...\n'OverflowMode', 'wrap',...\n'ProductMode', 'KeepLSB', "
      "'ProductWordLength', 32,...\n'SumMode', 'KeepLSB', 'SumWordLength', 32,...\n'CastBeforeSum', true)"
      fimathForFiConstructors FimathMatlabFactoryDefault
      emlDefaultFimath	      FimathUserSpecified
    }
  }
  junction {
    id			    4
    position		    [23.5747 49.5747 7]
    chart		    2
    linkNode		    [2 0 0]
    subviewer		    2
    ssIdNumber		    3
    type		    CONNECTIVE_JUNCTION
  }
  transition {
    id			    5
    labelString		    "{eML_blk_kernel();}"
    labelPosition	    [32.125 19.875 102.544 14.964]
    fontSize		    12
    src {
      intersection	      [0 0 1 0 23.5747 14.625 0 0]
    }
    dst {
      id		      4
      intersection	      [7 0 -1 -1 23.5747 42.5747 0 0]
    }
    midPoint		    [23.5747 24.9468]
    chart		    2
    linkNode		    [2 0 0]
    dataLimits		    [21.175 25.975 14.625 42.575]
    subviewer		    2
    drawStyle		    SMART
    executionOrder	    1
    ssIdNumber		    2
  }
  data {
    id			    6
    ssIdNumber		    4
    name		    "u1"
    linkNode		    [2 0 7]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"[4,4]"
	firstIndex		"1"
      }
      type {
	primitive		SF_SINGLE_TYPE
	fixpt {
	  scalingMode		  SF_FIXPT_BINARY_POINT
	}
      }
    }
    dataType		    "single"
  }
  data {
    id			    7
    ssIdNumber		    5
    name		    "y1"
    linkNode		    [2 6 8]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"[4,4]"
	firstIndex		"1"
      }
      type {
	primitive		SF_SINGLE_TYPE
	fixpt {
	  scalingMode		  SF_FIXPT_BINARY_POINT
	}
      }
      frame		      SF_FRAME_NO
    }
    dataType		    "single"
  }
  data {
    id			    8
    ssIdNumber		    6
    name		    "u2"
    linkNode		    [2 7 9]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"[2,2]"
	firstIndex		"1"
      }
      type {
	primitive		SF_DOUBLE_TYPE
	fixpt {
	  scalingMode		  SF_FIXPT_BINARY_POINT
	}
      }
      complexity	      SF_COMPLEX_YES
    }
    dataType		    "double"
  }
  data {
    id			    9
    ssIdNumber		    7
    name		    "y2"
    linkNode		    [2 8 0]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"[2,2]"
	firstIndex		"1"
      }
      type {
	primitive		SF_DOUBLE_TYPE
	fixpt {
	  scalingMode		  SF_FIXPT_BINARY_POINT
	}
      }
      complexity	      SF_COMPLEX_YES
      frame		      SF_FRAME_NO
    }
    dataType		    "double"
  }
  instance {
    id			    10
    name		    "Example\neML script\n# |eML-ML| optional_eML_file.m #"
    machine		    1
    chart		    2
  }
  target {
    id			    11
    name		    "sfun"
    machine		    1
    linkNode		    [1 0 12]
  }
  target {
    id			    12
    name		    "rtw"
    codeFlags		    " comments=1 statebitsets=1 databitsets=1 emitlogicalops=1 elseifdetection=1 constantfolding=1 redu"
    "ndantloadelimination=0 preserveconstantnames=0 preservenames=0 preservenameswithparent=0 exportcharts=0"
    machine		    1
    linkNode		    [1 11 0]
  }
}
