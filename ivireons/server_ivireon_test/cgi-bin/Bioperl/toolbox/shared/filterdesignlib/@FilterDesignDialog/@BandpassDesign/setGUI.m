function b = setGUI(this, Hd)
%SETGUI   Set the GUI.

%   Author(s): J. Schickler
%   Copyright 2005-2010 The MathWorks, Inc.
%   $Revision: 1.1.6.4 $  $Date: 2010/05/20 03:03:12 $

b = true;

hfdesign = getfdesign(Hd);
if ~strcmpi(get(hfdesign, 'Response'), 'bandpass')
    b = false;
    return;
end

switch lower(hfdesign.Specification)
    case 'fst1,fp1,fp2,fst2,ast1,ap,ast2'
        set(this, ...
            'Fstop1', num2str(hfdesign.Fstop1), ...
            'Fpass1', num2str(hfdesign.Fpass1), ...
            'Fpass2', num2str(hfdesign.Fpass2), ...
            'Fstop2', num2str(hfdesign.Fstop2), ...
            'Astop1', num2str(hfdesign.Astop1), ...
            'Apass',  num2str(hfdesign.Apass), ...
            'Astop2', num2str(hfdesign.Astop2));
    case 'n,f3db1,f3db2'
        set(this, ...
            'privFrequencyConstraints', '3dB points', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'F3dB1', num2str(hfdesign.F3db1), ...
            'F3dB2', num2str(hfdesign.F3db2));
    case 'n,f3db1,f3db2,ap'
        set(this, ...
            'privFrequencyConstraints', '3dB points', ...
            'privMagnitudeConstraints', 'passband ripple', ...
            'F3dB1', num2str(hfdesign.F3db1), ...
            'F3dB2', num2str(hfdesign.F3db2), ...
            'Apass', num2str(hfdesign.Apass));
    case 'n,f3db1,f3db2,ast'
        set(this, ...
            'privFrequencyConstraints', '3dB points', ...
            'privMagnitudeConstraints', 'stopband attenuation', ...
            'F3dB1',  num2str(hfdesign.F3db1), ...
            'F3dB2',  num2str(hfdesign.F3db2), ...
            'Astop1', num2str(hfdesign.Astop));
    case 'n,f3db1,f3db2,ast1,ap,ast2'
        set(this, ...
            'privFrequencyConstraints', '3dB points', ...
            'privMagnitudeConstraints', 'passband ripple and stopband attenuations', ...
            'F3dB1',  num2str(hfdesign.F3db1), ...
            'F3dB2',  num2str(hfdesign.F3db2), ...
            'Astop1', num2str(hfdesign.Astop1), ...
            'Apass',  num2str(hfdesign.Apass), ...
            'Astop2', num2str(hfdesign.Astop2));
    case 'n,f3db1,f3db2,bwp'
        set(this, ...
            'privFrequencyConstraints', '3dB points and passband width', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'F3dB1',  num2str(hfdesign.F3db1), ...
            'F3dB2',  num2str(hfdesign.F3db2), ...
            'BWpass', num2str(hfdesign.BWpass));
    case 'n,f3db1,f3db2,bwst'
        set(this, ...
            'privFrequencyConstraints', '3dB points and stopband width', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'F3dB1',  num2str(hfdesign.F3db1), ...
            'F3dB2',  num2str(hfdesign.F3db2), ...
            'BWstop', num2str(hfdesign.BWstop));
    case 'n,fc1,fc2'
        set(this, ...
            'privFrequencyConstraints', '6dB points', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'F6dB1',  num2str(hfdesign.Fcutoff1), ...
            'F6dB2',  num2str(hfdesign.Fcutoff2));
    case 'n,fc1,fc2,ast1,ap,ast2'
        set(this, ...
            'privFrequencyConstraints', '6dB points', ...
            'privMagnitudeConstraints', 'passband ripple and stopband attenuations', ...
            'F6dB1',  num2str(hfdesign.Fcutoff1), ...
            'F6dB2',  num2str(hfdesign.Fcutoff2),...
            'Astop1', num2str(hfdesign.Astop1), ...
            'Apass',  num2str(hfdesign.Apass), ...
            'Astop2', num2str(hfdesign.Astop2));
    case 'n,fp1,fp2,ap'
        set(this, ...
            'privFrequencyConstraints', 'passband edges', ...
            'privMagnitudeConstraints', 'passband ripple', ...
            'Fpass1',  num2str(hfdesign.Fpass1), ...
            'Fpass2',  num2str(hfdesign.Fpass2), ...
            'Apass',   num2str(hfdesign.Apass));
    case 'n,fp1,fp2,ast1,ap,ast2'
        set(this, ...
            'privFrequencyConstraints', 'passband edges', ...
            'privMagnitudeConstraints', 'passband ripple and stopband attenuations', ...
            'Fpass1',  num2str(hfdesign.Fpass1), ...
            'Fpass2',  num2str(hfdesign.Fpass2), ...
            'Astop1', num2str(hfdesign.Astop1), ...
            'Apass',  num2str(hfdesign.Apass), ...
            'Astop2', num2str(hfdesign.Astop2));
    case 'n,fst1,fp1,fp2,fst2'
        set(this, ...
            'privFrequencyConstraints', 'passband and stopband edges', ...
            'privMagnitudeConstraints', 'unconstrained', ...
            'Fstop1', num2str(hfdesign.Fstop1), ...
            'Fpass1', num2str(hfdesign.Fpass1), ...
            'Fpass2', num2str(hfdesign.Fpass2), ...
            'Fstop2', num2str(hfdesign.Fstop2));
    case 'n,fst1,fp1,fp2,fst2,ap'
        set(this, ...
            'privFrequencyConstraints', 'passband and stopband edges', ...
            'privMagnitudeConstraints', 'passband ripple', ...
            'Fstop1', num2str(hfdesign.Fstop1), ...
            'Fpass1', num2str(hfdesign.Fpass1), ...
            'Fpass2', num2str(hfdesign.Fpass2), ...
            'Fstop2', num2str(hfdesign.Fstop2), ...
            'Apass',  num2str(hfdesign.Apass));
    case 'n,fst1,fst2,ast'
        set(this, ...
            'privFrequencyConstraints', 'stopband edges', ...
            'privMagnitudeConstraints', 'stopband attenuation', ...
            'Fstop1', num2str(hfdesign.Fstop1), ...
            'Fstop2', num2str(hfdesign.Fstop2), ...
            'Astop1', num2str(hfdesign.Astop));
    case 'nb,na,fst1,fp1,fp2,fst2'
        % Not yet implemented
    otherwise
        error(generatemsgid('IncompleteConstraints'), ...
            'Internal Error: Bandpass ''%s'' incomplete', hfdesign.Specification);
end

abstract_setGUI(this, Hd);

% [EOF]
