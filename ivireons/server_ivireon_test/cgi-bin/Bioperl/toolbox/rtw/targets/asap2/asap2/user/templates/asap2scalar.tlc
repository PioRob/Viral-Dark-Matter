%% $RCSfile: asap2scalar.tlc,v $
%% $Revision: 1.4.2.5 $ 
%% $Date: 2010/04/21 21:38:42 $
%%
%% Abstract:
%%   Template definitions for Scalar.
%%
%% Copyright 1994-2010 The MathWorks, Inc.
%%
%selectfile NULL_FILE

%<LibASAP2RegisterTemplate("Scalar")>

%function ASAP2UserFcnRecordLayoutAlias_Scalar(dtId) void
  %switch dtId
  
    %case tSS_BOOLEAN
      %return "Scalar_BOOLEAN"
    %case tSS_UINT8
      %return "Scalar_UBYTE"
    %case tSS_INT8
      %return "Scalar_BYTE"
    %case tSS_UINT16
      %return "Scalar_UWORD"
    %case tSS_INT16
      %return "Scalar_SWORD"
    %case tSS_UINT32
      %return "Scalar_ULONG"
    %case tSS_INT32
      %return "Scalar_LONG"
    %case tSS_SINGLE
      %return "Scalar_FLOAT32_IEEE"
   %case tSS_DOUBLE
      %return "Scalar_FLOAT64_IEEE"
   %default
      %if LibIsEnumDataType(dtId)
          %return "Scalar_LONG"
      %endif

      %% START_ASSERT
      %assign errTxt = "Unhandled dataType. DataTypeID = %<dtId>"
      %<LibReportError(errTxt)>
      %% END_ASSERT
  %endswitch
%endfunction

%function ASAP2UserFcnWriteRecordLayout_Scalar() Output

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_BOOLEAN)>
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT
    
    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_UINT8)>
      FNC_VALUES  1 UBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_INT8)>
      FNC_VALUES  1 SBYTE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_UINT16)>
      FNC_VALUES  1 UWORD COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_INT16)>
      FNC_VALUES 1 SWORD COLUMN_DIR DIRECT
    /end RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_UINT32)>
      FNC_VALUES  1 ULONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_INT32)>
      FNC_VALUES  1 SLONG COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_SINGLE)>
      FNC_VALUES  1 FLOAT32_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

    /begin RECORD_LAYOUT %<ASAP2UserFcnRecordLayoutAlias_Scalar(tSS_DOUBLE)>
      FNC_VALUES  1 FLOAT64_IEEE COLUMN_DIR DIRECT
    /end   RECORD_LAYOUT

%endfunction

%function ASAP2UserFcnWriteCharacteristic_Scalar(param) Output
%assign dtId = LibASAP2GetDataTypeId(param)
%selectfile ASAP2List
%<LibASAP2GetSymbol(param)> 
%% Example of adding parameter to a GROUPS as REF_CHARACTERISTIC
/%  <--- Remove this line if you would want to group parameters
%% Add to group based on parameters graphical hierarchy
%<LibASAP2AddCharacteristicToGraphicalGroups(param)>
%%Add to ASAP2ParGroup
%%<LibASAP2AddCharacteristicToGroup( ASAP2ParGroup, LibASAP2GetSymbol(param) )>
%/ %%<--- Remove this line if you would want to group parameters
%assign dataWidth   =  LibASAP2GetParamWidth(param)
%selectfile ModelASAP2File
    /begin CHARACTERISTIC 
      /* Name                   */      %<LibASAP2GetSymbol(param)> 
      /* Long Identifier        */      "%<LibASAP2GetLongID(param)>"
      %if dataWidth > 1
      /* Type                   */      VAL_BLK 
      %else
      /* Type                   */      VALUE 
      %endif
      /* ECU Address            */      %<LibASAP2GetAddress(param)> 
      /* Record Layout          */      %<ASAP2UserFcnRecordLayoutAlias_Scalar(dtId)> 
      /* Maximum Difference     */      0 
      /* Conversion Method      */      %<LibASAP2GetCompuMethod(param)> 
      /* Lower Limit            */      %<LibASAP2GetPhysicalMin(param)> 
      /* Upper Limit            */      %<LibASAP2GetPhysicalMax(param)>
      %if dataWidth > 1
      /* Array Size             */
        NUMBER                            %<dataWidth>
      %endif
    /end CHARACTERISTIC

%endfunction
