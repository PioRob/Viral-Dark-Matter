function propertyInfo = pGetAllConfigurableProperties()
; %#ok Undocumented
%Static method that returns all configurable properties in the distcomp package.
%    PropertyInfo = pGetAllConfigurableProperties() 
%    Returns a struct props whose field names are names of classes in the
%    distcomp package, and the corresponding value is a struct storing the
%    information about the configurable properties in that class.
%

%  Copyright 2007-2010 The MathWorks, Inc.

%% All the configurable properties on all of our scheduler objects.
% NB the order in which the properties appear in this file corresponds to the
% order in which they are applied when setting a configuration.  
% The following CCS properties have different allowable values depending
% on SchedulerHostname: ClusterSize, ClusterVersion JobTemplate, UseSOAJobSubmission.
% It is very important SchedulerHostname comes first before the other properties 
% in this list.
ccsschedulerProps = {'SchedulerHostname', 'ClusterSize', 'DataLocation', ...
                    'ClusterMatlabRoot', 'UseSOAJobSubmission', 'ClusterVersion', ...
                    'JobTemplate', 'JobDescriptionFile'};
genericschedulerProps = {'ClusterSize', 'DataLocation', 'HasSharedFilesystem', ...
                    'ClusterMatlabRoot', 'ClusterOsType', 'GetJobStateFcn', ...
                    'SubmitFcn', 'ParallelSubmitFcn',...
                    'CancelJobFcn', 'CancelTaskFcn', ...
                    'DestroyJobFcn', 'DestroyTaskFcn'};
jobmanagerProps   = {'UserName'};
localschedulerProps = {'ClusterSize', 'DataLocation'};
lsfschedulerProps = {'ClusterSize', 'DataLocation', 'HasSharedFilesystem', ...
                    'ClusterMatlabRoot', ...
                    'SubmitArguments', 'ClusterOsType', ...
                    'ParallelSubmissionWrapperScript'};
mpiexecschedulerProps = {'ClusterSize', 'DataLocation', 'MpiexecFileName', ...
                    'ClusterMatlabRoot', 'SubmitArguments', ...
                    'EnvironmentSetMethod', 'ClusterOsType'};
pbsproschedulerProps = {'ClusterSize', 'ClusterMatlabRoot', ...
                    'ClusterOsType', ...
                    'DataLocation',  ...
                    'HasSharedFilesystem', ...
                    'ParallelSubmissionWrapperScript', ...
                    'RcpCommand', ...
                    'ResourceTemplate', ...
                    'RshCommand', ...
                    'SubmitArguments',  ...
                   };
torqueschedulerProps = {'ClusterSize', 'ClusterMatlabRoot', ...
                    'DataLocation', ...
                    'HasSharedFilesystem', ...
                    'ParallelSubmissionWrapperScript', ...
                    'RcpCommand', ...
                    'ResourceTemplate', ...
                    'RshCommand', ...
                    'SubmitArguments', ...
                   };

%% All the configurable properties on all of our job objects.
% distcomp.job:
jobProps = {'FileDependencies', 'PathDependencies', ...
            'MinimumNumberOfWorkers', 'MaximumNumberOfWorkers', ...
            'QueuedFcn', 'RunningFcn',  'FinishedFcn', ...
            'Timeout', 'RestartWorker'};
% distcomp.paralleljob:
paralleljobProps = {'FileDependencies', 'PathDependencies', ...
                    'MinimumNumberOfWorkers', 'MaximumNumberOfWorkers', ...
                    'QueuedFcn', 'RunningFcn',  'FinishedFcn', ...
                    'Timeout', 'RestartWorker'};
% distcomp.matlabpooljob:
matlabpooljobProps = {'FileDependencies', 'PathDependencies', ...
                    'MinimumNumberOfWorkers', 'MaximumNumberOfWorkers', ...
                    'QueuedFcn', 'RunningFcn',  'FinishedFcn', ...
                    'Timeout', 'RestartWorker'};
% distcomp.simplejob
simplejobProps = {'FileDependencies', 'PathDependencies'};
% distcomp.simpleparalleljob
simpleparalleljobProps = {'FileDependencies', 'PathDependencies', ...
                    'MinimumNumberOfWorkers', 'MaximumNumberOfWorkers'};
% distcomp.simplematlabpooljob
simplematlabpooljobProps = {'FileDependencies', 'PathDependencies', ...
                    'MinimumNumberOfWorkers', 'MaximumNumberOfWorkers'};

%% All the configurable properties on all of our task objects.
% distcomp.task
taskProps = {'CaptureCommandWindowOutput', ...
             'Timeout', 'MaximumNumberOfRetries', 'FinishedFcn', 'RunningFcn'};
%distcomp.simpletask
simpletaskProps = {'CaptureCommandWindowOutput'};

%% All the configurable properties when calling findResource.
% Only findResource's Type argument is not writable, so we handle that below.
% The data types of findResource's configurable properties are the only data
% types we can't figure out via inspection, so we also declare them below.
findResourceProps = {'Type'};
findResourceTypes = {'string'};
findResourceWritable = false;
JobManagerFindResourceProps = {'Type', 'Name', 'LookupURL'};
JobManagerFindResourceTypes = {'string', 'string', 'string'};
JobManagerFindResourceWritable = [false, true, true];


%% Form the return values.
% For each configurable object, create a substructure storing the property
% names, their data types and IsWritable status.
propertyInfo = struct(...
    'ccsscheduler',           iCreateSubstruct(ccsschedulerProps), ...
    'genericscheduler',       iCreateSubstruct(genericschedulerProps),...
    'jobmanager',             iCreateSubstruct(jobmanagerProps), ...
    'localscheduler',         iCreateSubstruct(localschedulerProps), ...
    'lsfscheduler',           iCreateSubstruct(lsfschedulerProps), ...
    'mpiexec',                iCreateSubstruct(mpiexecschedulerProps), ...
    'pbsproscheduler',        iCreateSubstruct(pbsproschedulerProps), ...
    'torquescheduler',        iCreateSubstruct(torqueschedulerProps), ...
    'job',                    iCreateSubstruct(jobProps), ...
    'paralleljob',            iCreateSubstruct(paralleljobProps), ...
    'matlabpooljob',          iCreateSubstruct(matlabpooljobProps), ...
    'simplejob',              iCreateSubstruct(simplejobProps), ...
    'simpleparalleljob',      iCreateSubstruct(simpleparalleljobProps), ...
    'simplematlabpooljob',    iCreateSubstruct(simplematlabpooljobProps), ...
    'task',                   iCreateSubstruct(taskProps), ...
    'simpletask',             iCreateSubstruct(simpletaskProps), ...
    'findResource',           iCreateSubstruct(findResourceProps), ...
    'JobManagerFindResource', iCreateSubstruct(JobManagerFindResourceProps));

%% Fill in the data types we know a-priori.
% All data types not declared here will be found via object introspection when
% we are first asked for them.
propertyInfo.findResource.DataTypes = findResourceTypes;
propertyInfo.JobManagerFindResource.DataTypes = JobManagerFindResourceTypes;

%% Handle special cases of IsWritable
% Only the Type argument to findResource is not writable.
propertyInfo.findResource.IsWritable = findResourceWritable;
propertyInfo.JobManagerFindResource.IsWritable = JobManagerFindResourceWritable;

function propertySubstruct = iCreateSubstruct(propertyNames)
% Return a single struct storing the information about the configurable
% properties. 

% We only want a single struct, so we enclose the cell arrays in curly braces.
propertySubstruct = struct('PropertyNames', {propertyNames}, ...
                           'DataTypes', {{}}, ...
                           'IsWritable', true(size(propertyNames)));
