%% $RCSfile: sfun_tstart.tlc,v $
%% File : sfun_tstart.tlc generated from sfun_tstart.ttlc revsion 1.2
%% $Date: 2008/02/20 01:29:44 $
%%
%% Copyright 1990-2005 The MathWorks, Inc.
%%
%% Abstract:
%%	TLC file for the simulink/src/sfun_tstart.c (helper block
%%      for chirp and repeating sequence.


%implements "sfun_tstart" "C"

%% Function: BlockInstanceSetup ================================================
%% Abstract:
%%      Set expression folding compliance.
%%
%function BlockInstanceSetup(block,system) void
  %<LibBlockSetIsExpressionCompliant(block)>
%endfunction


%% Function: BlockOutputSignal =================================================
%% Abstract:
%%      Return the appropriate reference to the parameter.  This function *may*
%%      be used by Simulink when optimizing the Block IO data structure.
%%
%function BlockOutputSignal(block,system,portIdx,ucv,lcv,idx,retType) void
  %switch retType
    %case "Signal"
      %if ISEQUAL(CodeFormat,"S-Function")
	%return "ssGetTStart(%<tSimStruct>)"
      %else 
        %if isRSim || IsSimstructBasedTarget()
          %return "%<StartTime>"
        %else
          %return "(0.0)"
        %endif
      %endif
    %default
      %assign errTxt = "Unsupported return type: %<retType>"
      %<LibBlockReportError(block,errTxt)>
  %endswitch
%endfunction %% BlockOutputSignal


%% Function: Outputs ==========================================================
%% Abstract:
%%
%%     Produce the start time, which cannot be hard coded for accelerator
%%     and S-function targets.
%%
%function Outputs(block, system) Output
  %if ISEQUAL(CodeFormat,"S-Function") 
    %assign TStart = "ssGetTStart(%<tSimStruct>)"
  %else 
    %if isRSim || IsSimstructBasedTarget()
      %assign TStart = "%<StartTime>"
    %else
      %assign TStart = "(0.0)"
    %endif
  %endif
  /* %<Type> Block (%<ParamSettings.FunctionName>): %<Name> */
  %<LibBlockOutputSignal(0, "", "", 0)> = %<TStart>;    
  
%endfunction %% Outputs


%% [EOF] sfun_tstart.tlc
