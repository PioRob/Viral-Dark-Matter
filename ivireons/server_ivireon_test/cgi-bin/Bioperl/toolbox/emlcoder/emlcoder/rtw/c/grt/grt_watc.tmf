# Copyright 1994-2010 The MathWorks, Inc.
#
# File    : grt_watc.tmf $Revision: 1.1.10.5 $
# Abstract:
#	Real-Time Workshop template makefile for building a Windows-based
#	stand-alone generic real-time version of MATLAB-code using
#	generated C code and the
#		Watcom C/C++ Compiler Version 11.0
#		Open Watcom Version 1.3
#
#       The following defines (macro names) can be used to modify the behavior
#       of the build:
#	  OPT_OPTS       - Optimization option. Default is -oaxt. To enable
#			   debugging specify as "OPT_OPTS=-d2".
#	  OPTS           - User specific options.
#         CPP_OPTS       - C++ Compiler Options
#	  USER_OBJS      - Additional user objects, such as files needed by
#			   S-functions.
#         USER_PATH      - The directory path to the source (.c) files which
#                          are used to create any .obj files specified in
#                          USER_OBJS. Multiple paths must be separated
#                          with a semicolon. For example:
#                          "USER_PATH=path1;path2"
#	  USER_INCLUDES  - Additional include paths (i.e.
#			   "USER_INCLUDES=-Iinclude-path1 -Iinclude-path2")
#
#       In particular, note how the quotes are before the name of the macro
#       name.
#
#       This template makefile is designed to be used with a system target
#       file that contains 'rtwgensettings.BuildDirSuffix' see grt.tlc


#------------------------ Macros read by make_rtw -----------------------------
#
# The following macros are read by the Real-Time Workshop build procedure:
#	MAKECMD - This is the command used to invoke the make utility
#	HOST    - What platform this template makefile is targeted for
#                 (i.e. PC or UNIX)
#	BUILD   - Invoke make from the Real-Time Workshop build procedure
#                 (yes/no)?
#       TARGET  - Type of target Real-Time (RT) or Nonreal-Tie (NRT)
#
MAKECMD         = "%WATCOM%\binnt\wmake"
HOST            = PC
BUILD           = yes
SYS_TARGET_FILE = grt.tlc
BUILD_SUCCESS	= Created executable
COMPILER_TOOL_CHAIN = watc

#---------------------- Tokens expanded by make_rtw ---------------------------
#
# The following tokens, when wrapped with "|>" and "<|" are expanded by the
# Real-Time Workshop build procedure.
#
#  MODEL_NAME          - Name of the Simulink block diagram
#  MODEL_MODULES_OBJ   - Object file name for any additional generated source
#                        modules
#  MAKEFILE_NAME       - Name of makefile created from template makefile
#                        <model>.mk
#  MATLAB_ROOT         - Path to were MATLAB is installed.
#  MATLAB_BIN          - Path to MATLAB executable.
#  S_FUNCTIONS_LIB     - List of S-functions libraries to link.
#  S_FUNCTIONS_OBJ     - List of S-functions .obj sources
#  NUMST               - Number of sample times
#  TID01EQ             - yes (1) or no (0): Are sampling rates of continuous
#                        task (tid=0) and 1st discrete task equal.
#  NCSTATES            - Number of continuous states
#  BUILDARGS           - Options passed in at the command line.
#  MULTITASKING        - yes (1) or no (0): Is solver mode multitasking
#  EXT_MODE            - yes (1) or no (0): Build for external mode
#  TMW_EXTMODE_TESTING - yes (1) or no (0): Build ext_test.c for external mode
#                        testing.
#  EXTMODE_TRANSPORT   - Index of transport mechanism (e.g. tcpip, serial) for extmode
#  EXTMODE_STATIC      - yes (1) or no (0): Use static instead of dynamic mem alloc.
#  EXTMODE_STATIC_SIZE - Size of static memory allocation buffer.

MODEL                = |>MODEL_NAME<|
MODULES_OBJ          = |>MODEL_MODULES_OBJ<|
MAKEFILE             = |>MAKEFILE_NAME<|
MATLAB_ROOT          = |>MATLAB_ROOT<|
ALT_MATLAB_ROOT      = |>ALT_MATLAB_ROOT<|
MATLAB_BIN           = |>MATLAB_BIN<|
ALT_MATLAB_BIN       = |>ALT_MATLAB_BIN<|
S_FUNCTIONS          = |>S_FUNCTIONS_OBJ<|
S_FUNCTIONS_LIB      = |>S_FUNCTIONS_LIB<|
NUMST                = |>NUMST<|
TID01EQ              = |>TID01EQ<|
NCSTATES             = |>NCSTATES<|
BUILDARGS            = |>BUILDARGS<|
MULTITASKING         = |>MULTITASKING<|
EXT_MODE             = |>EXT_MODE<|
TMW_EXTMODE_TESTING  = |>TMW_EXTMODE_TESTING<|
EXTMODE_TRANSPORT    = |>EXTMODE_TRANSPORT<|
EXTMODE_STATIC       = |>EXTMODE_STATIC_ALLOC<|
EXTMODE_STATIC_SIZE  = |>EXTMODE_STATIC_ALLOC_SIZE<|
OPTIMIZATION_FLAGS   = |>OPTIMIZATION_FLAGS<|
ADDITIONAL_LDFLAGS   = |>ADDITIONAL_LDFLAGS<|

#--------------------------- Model and reference models -----------------------
MODELLIB                  = |>MODELLIB<|
MODELREF_LINK_LIBS        = |>MODELREF_LINK_LIBS<|
MODELREF_LINK_RSPFILE     = |>MODELREF_LINK_RSPFILE_NAME<|
MODELREF_INC_PATH         = |>START_MDLREFINC_EXPAND_INCLUDES<||>MODELREF_INC_PATH<|;|>END_MDLREFINC_EXPAND_INCLUDES<|
RELATIVE_PATH_TO_ANCHOR   = |>RELATIVE_PATH_TO_ANCHOR<|
MODELREF_TARGET_TYPE      = |>MODELREF_TARGET_TYPE<|

#-- In the case when directory name contains space ---
!ifneq MATLAB_ROOT $(ALT_MATLAB_ROOT)
MATLAB_ROOT = $(ALT_MATLAB_ROOT)
!endif
!ifneq MATLAB_BIN $(ALT_MATLAB_BIN)
MATLAB_BIN = $(ALT_MATLAB_BIN)
!endif

#--------------------------------- Tool Locations -----------------------------
#
# Modify the following macro to reflect where you have installed
# the Watcom C/C++ Compiler.
#
!ifndef %WATCOM
!error WATCOM environmental variable must be defined
!else
WATCOM = $(%WATCOM)
!endif

#---------------------------- Tool Definitions ---------------------------

!include $(MATLAB_ROOT)\rtw\c\tools\watctools.mak


#------------------------ External mode ---------------------------------------
# Uncomment -DVERBOSE to have information printed to stdout
# To add a new transport layer, see the comments in
#   <matlabroot>/toolbox/simulink/simulink/extmode_transports.m
!ifeq EXT_MODE 1
EXT_CC_OPTS   = -DEXT_MODE -DWIN32 # -DVERBOSE
EXTMODE_PATH  = $(MATLAB_ROOT)\rtw\c\src\ext_mode\common;$(MATLAB_ROOT)\rtw\c\src\rtiostream\rtiostreamtcpip;$(MATLAB_ROOT)\rtw\c\src\ext_mode\serial;$(MATLAB_ROOT)\rtw\c\src\ext_mode\custom;
!ifeq EXTMODE_TRANSPORT 0 #tcpip
EXT_OBJ = ext_svr.obj updown.obj ext_work.obj rtiostream_interface.obj rtiostream_tcpip.obj
!endif
!ifeq EXTMODE_TRANSPORT 1 #serial_win32
EXT_OBJ  = ext_svr.obj updown.obj ext_work.obj ext_svr_serial_transport.obj
EXT_OBJ += ext_serial_pkt.obj ext_serial_win32_port.obj
!endif
!ifeq TMW_EXTMODE_TESTING 1
EXT_OBJ     += ext_test.obj
EXT_CC_OPTS += -DTMW_EXTMODE_TESTING
!endif
!ifeq EXTMODE_STATIC 1
EXT_OBJ     += mem_mgr.obj
EXT_CC_OPTS += -DEXTMODE_STATIC -DEXTMODE_STATIC_SIZE=$(EXTMODE_STATIC_SIZE)
!endif
!else
EXT_OBJ      =
EXT_CC_OPTS  =
EXTMODE_PATH =
!endif

#------------------------ rtModel ----------------------------------------------
RTM_CC_OPTS = -DUSE_RTMODEL

#------------------------------ Include Path -----------------------------

MATLAB_INCLUDES = &
$(MATLAB_ROOT)\simulink\include;&
$(MATLAB_ROOT)\extern\include;&
$(MATLAB_ROOT)\rtw\c\src;&
$(MATLAB_ROOT)\rtw\c\src\ext_mode\common;

# Additional inludes
ADD_INCLUDES = &
|>START_EXPAND_INCLUDES<||>EXPAND_DIR_NAME<|;&
|>END_EXPAND_INCLUDES<|

COMPILER_INCLUDES = $(WATCOM)\h;$(WATCOM)\h\nt

INCLUDES = .;..;$(MATLAB_INCLUDES)$(ADD_INCLUDES)$(COMPILER_INCLUDES)

#-------------------------------- C Flags --------------------------------

# Required Options
REQ_OPTS = -fpi87 -3s -bt=NT

# Optimization Options.
#   -oaxt : maximum optimization
#   -d2   : debugging options
#
OPT_OPTS = $(DEFAULT_OPT_OPTS)

!if "$(OPTIMIZATION_FLAGS)" != ""
CC_OPTS = $(REQ_OPTS) $(OPTS) $(EXT_CC_OPTS) $(RTM_CC_OPTS) $(OPTIMIZATION_FLAGS)
!else
CC_OPTS = $(REQ_OPTS) $(OPT_OPTS) $(OPTS) $(EXT_CC_OPTS) $(RTM_CC_OPTS)
!endif

CPP_REQ_DEFINES = -DMODEL=$(MODEL) -DRT -DNUMST=$(NUMST) &
                  -DTID01EQ=$(TID01EQ) -DNCSTATES=$(NCSTATES) &
                  -DMT=$(MULTITASKING) -DHAVESTDIO 

CFLAGS = $(CC_OPTS) $(CPP_REQ_DEFINES) $(USER_INCLUDES)
CPPFLAGS = $(CPP_OPTS) $(CC_OPTS) $(CPP_REQ_DEFINES) $(USER_INCLUDES)

#------------------------------- Source Files ---------------------------------

!ifeq MODELREF_TARGET_TYPE NONE
#Standalone executable
PRODUCT   = $(RELATIVE_PATH_TO_ANCHOR)\$(MODEL).exe
!else
#Model Reference Target
PRODUCT   = $(MODELLIB)
!endif

REQ_OBJS  = $(MODULES_OBJ)
USER_OBJS =

OBJS = $(REQ_OBJS) $(USER_OBJS) $(S_FUNCTIONS) $(EXT_OBJ)

#---------------------------- Additional Libraries ----------------------------

LIBS =
|>START_PRECOMP_LIBRARIES<|
ADDLIB = |>EXPAND_LIBRARY_NAME<|.lib
!ifeq OPT_OPTS $(DEFAULT_OPT_OPTS)
!ifeq WATCOM_VER 11.0
ADDLIB = |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_watc110.lib
!endif
!ifeq WATCOM_VER 1.3
ADDLIB = |>EXPAND_LIBRARY_LOCATION<|\|>EXPAND_LIBRARY_NAME<|_openwatc13.lib
!endif
!endif
LIBS += $+$(ADDLIB)$- |>END_PRECOMP_LIBRARIES<|
|>START_EXPAND_LIBRARIES<|
LIBS += |>EXPAND_LIBRARY_NAME<|.lib |>END_EXPAND_LIBRARIES<|

#-------------------------- Source Path ---------------------------------------

# User source path

!ifdef USER_PATH
EXTRA_PATH = ;$(USER_PATH)
!else
EXTRA_PATH =
!endif

# Additional sources

ADD_SOURCES = |>START_EXPAND_RULES<||>EXPAND_DIR_NAME<|;|>END_EXPAND_RULES<|

# Source Path

.c : ..;$(MATLAB_ROOT)\rtw\c\grt;$(MATLAB_ROOT)\rtw\c\src;$(MATLAB_ROOT)\simulink\src;$(EXTMODE_PATH)$(ADD_SOURCES)$(EXTRA_PATH)
.cpp : ..;$(MATLAB_ROOT)\rtw\c\grt;$(MATLAB_ROOT)\rtw\c\src;$(MATLAB_ROOT)\simulink\src;$(EXTMODE_PATH)$(ADD_SOURCES)$(EXTRA_PATH)
#----------------------- Exported Environment Variables -----------------------
#
#  Setup path for tools.
#
PATH = $(WATCOM)\binnt;$(WATCOM)\binw

#--------------------------------- Rules --------------------------------------
.ERASE

.BEFORE
	@set path=$(PATH)
	@set INCLUDE=$(INCLUDES)
	@set WATCOM=$(WATCOM)
	@set MATLAB=$(MATLAB_ROOT)
	@if exist $(MODEL).lnk @del $(MODEL).lnk
!ifeq MODELREF_TARGET_TYPE NONE
	@echo DEBUG ALL >> $(MODEL).lnk
	@for %i in ($(OBJS)) do @echo FILE %i >> $(MODEL).lnk
	@for %i in ($(LIBS)) do @echo LIBRARY %i >> $(MODEL).lnk
	@for %i in ($(S_FUNCTIONS_LIB)) do @echo LIBRARY %i >> $(MODEL).lnk
!else
	@for %i in ($(OBJS)) do @echo + %i >> $(MODEL).lnk
!endif


!ifeq MODELREF_TARGET_TYPE NONE
#--- Stand-alone model ---
$(PRODUCT) : $(OBJS) $(LIBS)
	$(LD) NAME $@ $(LDFLAGS) $(ADDITIONAL_LDFLAGS) @$(MODEL).lnk
	@echo $#$#$# $(BUILD_SUCCESS): $(PRODUCT)
	@del $(MODEL).lnk
!else
#--- Model reference RTW Target ---
$(PRODUCT) : $(OBJS) $(LIBS)
	@if exist $@ del $@
	$(LIBCMD) -o $@ $(LDFLAGS) @$(MODEL).lnk
	@echo $#$#$# $(BUILD_SUCCESS): $(PRODUCT)
	@del $(MODEL).lnk
!endif

.c.obj:
	@echo $#$#$# Compiling $[@
	$(CC) $(CFLAGS) $[@

.cpp.obj:
	@echo $#$#$# Compiling $[@
	$(CPP) $(CPPFLAGS) $[@


$(OBJS) : $(MAKEFILE) rtw_proj.tmw .AUTODEPEND

# Libraries:

|>START_EXPAND_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = &
|>START_EXPAND_MODULES<|	|>EXPAND_MODULE_NAME<|.obj &
|>END_EXPAND_MODULES<|


|>EXPAND_LIBRARY_NAME<|.lib : rtw_proj.tmw $(MAKEFILE) $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@echo $#$#$# Creating $@
	@if exist $@ @del $@
	@for %i in ($(MODULES_|>EXPAND_LIBRARY_NAME<|)) do $(LIBCMD) $@ +%i
	@echo $#$#$# $@ Created

|>END_EXPAND_LIBRARIES<|

|>START_PRECOMP_LIBRARIES<|MODULES_|>EXPAND_LIBRARY_NAME<| = &
|>START_EXPAND_MODULES<|	|>EXPAND_MODULE_NAME<|.obj &
|>END_EXPAND_MODULES<|


|>EXPAND_LIBRARY_NAME<|.lib : rtw_proj.tmw $(MAKEFILE) $(MODULES_|>EXPAND_LIBRARY_NAME<|)
	@echo $#$#$# Creating $@
	@if exist $@ @del $@
	@for %i in ($(MODULES_|>EXPAND_LIBRARY_NAME<|)) do $(LIBCMD) $@ +%i
	@echo $#$#$# $@ Created

|>END_PRECOMP_LIBRARIES<|

# [eof] grt_watc.tmf

