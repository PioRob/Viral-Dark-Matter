function errs=sllasterror(newErrs)
%SLLASTERROR Simulink last error message.
%   SLLASTERROR by itself returns a Simulink diagnostic structure array
%   containing the last error(s) generated by Simulink.  The fields of
%   the diagnostic structure are:
%
%     Type        'error'
%     MessageID   the message ID for the error (e.g., 'Simulink:Commands:InvSimulinkObjectName')
%     Message     the error message
%     Handle      Simulink object handle(s) associated with the error
%
%   SLLASTERROR([]) resets the Simulink last error so that it will return
%   an empty array until the next Simulink error is encountered.
%
%   SLLASTERROR(DIAGSTRUCT) will set the Simulink last error(s) to those
%   specified in the DIAGSTRUCT.
%   
%   See also SLLASTDIAGNOSTIC, SLLASTWARNING.

%   Copyright 1990-2005 The MathWorks, Inc.
%   $Revision: 1.5.2.3 $

%
% if no input args, return the last error, otherwise, set it
%
if nargin == 0,
  
  errs = get_param(0, 'LastError');

else
  
  
  %
  % make sure that only errors are being set
  %
  if ~isempty(newErrs),
    isSetProperly = true;
    if isstruct(newErrs)
      if ~isequal(sort(fieldnames(newErrs)), ...
              {'Handle';'Message';'MessageID';'Type'})
          isSetProperly = false;
      end
      if isSetProperly && (~all(strcmp({ newErrs(:).Type }, 'error')))
        isSetProperly = false;
      end
    else
      isSetProperly = false;
    end    
    
    if ~isSetProperly
      error('Simulink:InvalidDiagnosticType', ...
        ['Simulink diagnostic structure must be a MATLAB structure', ...
         ' with the fieldnames Type, Message, MessageID, Handle.', ...
         ' The Type field should be set to ''error'' or ''warning''']);
    end
  end
  set_param(0, 'LastError', newErrs); 
end
