function idnlprops(modeltype, infotype)
%IDNLPROPS  Help on IDNLMODEL model properties.
%
%   IDNLPROPS gives details on the generic properties of IDNLMODEL models.
%
%   IDNLPROPS(MODELTYPE) gives details on the properties specific to the
%   various type of IDNLMODELs. MODELTYPE can be:
%
%      'idnlmodel' : Properties of an IDNLMODEL model.
%      'idnlgrey'  : Properties of an IDNLGREY model.
%      'idnlarx'   : Properties of an IDNLARX model.
%      'idnlhw'    : Properties of an IDNLHW model.
%
%   IDNLPROPS(MODELTYPE, INFOTYPE) gives details on the properties specific
%   to INFOTYPE of MODELTYPE. INFOTYPE can in general be:
%
%      'Algorithm'      : Properties associated with the algorithms.
%      'EstimationInfo' : Properties associated with the estimation result.
%   
%   For IDNLGREY models, INFOTYPE can also be:
%
%      'parameters'    : Information about parameter properties.
%      'initialstates' : Information about initial states properties.
%      'algorithm'     : Information about general algorithm properties.
%      'algorithm.simulationoptions' :
%                        Information about simulation solver properties.
%      'algorithm.gradientoptions'   :
%                        Information about gradient computation properties.
%      'algorithm.advanced' :
%                        Information about advanced estimation algorithm
%                        properties.
%      'estimationinfo': Properties associated with the estimation result.
%
%   Notice that
%
%      idnlprops idnlgrey alg
%
%   can be used as shorthand for
%
%      idnlprops('idnlgrey', 'alg')

% Copyright 2005-2010 The MathWorks, Inc.
% $Revision: 1.1.8.19 $ $Date: 2010/05/10 17:17:48 $

%   Written by Peter Lindskog.

% Check that MODELTYPE is a string.
nin = nargin;
if (nin < 1)
   modeltype = 'idnlmodel';
elseif ~ischar(modeltype)
   ctrlMsgUtils.error('Ident:general:idnlprops1')
end

% Check that INFOTYPE is a string.
% if isempty(infotype)
%     infochoice = 0;
% end
if (nin < 2)
    infochoice = 0;
elseif ~ischar(infotype)
   ctrlMsgUtils.error('Ident:general:idnlprops2')
elseif isempty(infotype)
    infochoice = 0;
end

% Check that MODELTYPE is a unique choice.
modchoices = {'idnlmodel','idnlgrey','idnlarx','idnlhw','idnlestimators',...
            'sigmoidnet','customnet','treepartition','wavenet', ...
            'neuralnet','pwlinear','poly1d','deadzone','saturation',...
            'linear','unitgain','customregressors'};
        
modchoice = strmatch(lower(modeltype), modchoices);
if (isempty(modchoice) || isempty(modeltype))
    ctrlMsgUtils.error('Ident:general:idnlprops3a',modeltype);
elseif (length(modchoice) > 1)
    modchoices = {modchoices{modchoice}};
    modchoice = '';
    for j = 1:length(modchoices)
        modchoice = [modchoice(:)' '    ''' modchoices{j} ''''];
    end
    ctrlMsgUtils.error('Ident:general:idnlprops3b',modchoice);
else
    modchoice = modchoices{modchoice};
end

% Check that INFOTYPE is a unique choice.

if (nin > 1)
    switch modchoice
        case 'idnlmodel'%1 % idnlmodel.
            infochoices = {};
            infochoice = strmatch(lower(infotype), infochoices);
            if (isempty(infochoice) || isempty(infotype))
                ctrlMsgUtils.error('Ident:general:idnlprops5',infotype)
            end
        case 'idnlgrey'%2 % idnlgrey
            infochoices = {'parameters' 'initialstates' 'algorithm' ...
                'algorithm.simulationoptions'            ...
                'algorithm.gradientoptions'              ...
                'algorithm.advanced'                     ...
                'estimationinfo'                         ...
                'simulationoptions'                      ...
                'gradientoptions'                        ...
                'advanced'                               ...
                };
            infochoice = strmatch(lower(infotype), infochoices);
            if (isempty(infochoice)|| isempty(infotype))
                ctrlMsgUtils.error('Ident:general:idnlprops5',infotype)
            elseif (length(infochoice) > 1)
                if (infochoice(1) == 3)
                    infochoice = 3;
                else
                    infochoices = {infochoices{infochoice}};
                    infochoice = '';
                    for j = 1:length(infochoices)
                        infochoice = [infochoice(:)' '    ''' infochoices{j} ''''];
                    end
                    ctrlMsgUtils.error('Ident:general:idnlprops4',infochoice);
                end
            elseif (infochoice == 8)
                infochoice = 4;
            elseif (infochoice == 9)
                infochoice = 5;
            elseif (infochoice == 10)
                infochoice = 6;
            end
        case 'idnlarx'
            infochoices={'algorithm','customregressors','estimationinfo',...
                'regressors','focus','algorithm.advanced'};
            infochoice = strmatch(lower(infotype),infochoices);
            if (isempty(infochoice)|| isempty(infotype))
                ctrlMsgUtils.error('Ident:general:idnlprops5',infotype)
            elseif (length(infochoice) > 1)
                if (infochoice(1) == 1)
                    infochoice = 1;
                else
                    infochoices = {infochoices{infochoice}};
                    infochoice = '';
                    for j = 1:length(infochoices)
                        infochoice = [infochoice(:)' '    ''' infochoices{j} ''''];
                    end
                    ctrlMsgUtils.error('Ident:general:idnlprops4', infochoice);
                end
            end
        case 'idnlhw'
            infochoices={'siso','mimo','algorithm','estimationinfo','algorithm.advanced'};
            infochoice = strmatch(lower(infotype),infochoices);
            if (isempty(infochoice)|| isempty(infotype))
                ctrlMsgUtils.error('Ident:general:idnlprops5',infotype)
            elseif (length(infochoice) > 1)
                if (infochoice(1) == 3)
                    infochoice = 3;
                else
                    infochoices = {infochoices{infochoice}};
                    infochoice = '';
                    for j = 1:length(infochoices)
                        infochoice = [infochoice(:)' '    ''' infochoices{j} ''''];
                    end
                    ctrlMsgUtils.error('Ident:general:idnlprops4', infochoice);
                end
            end
    end
end
% Generate the desired text.
switch modchoice
    case 'idnlmodel'
        txt = {' Help on properties of IDNLMODEL models.'                                                   ...
               ' '                                                                                          ...
               ' IDNLMODEL properties are divided into two categories:'                                     ...
               '   * Generic properties shared by all IDNLMODEL model types.'                               ...
               '   * Properties specific to IDNLGREY, IDNLARX and IDNLHW models.'                           ...
               '     For details, type IDPROPS followed by IDNLGREY, IDNLARX or IDNLHW.'                    ...
               ' '                                                                                          ...
               ' For an IDNLMODEL model with Ny outputs and Nu inputs, the generic'                         ...
               ' IDNLMODEL properties include:'                                                             ...
               ' '                                                                                          ...
               ' Name          - An optional value to identify the model. A string.'                        ...
               '                 Default value:  ''''.'                                                     ...
               ' '                                                                                          ...
               ' Ts            - Sample time (unit = ''TimeUnit'').'                                        ...
               '                 Assignable values:'                                                        ...
               '                   * Positive scalar (sampling period) for discrete models.'                ...
               '                   * 0 for continuous models.'                                              ...
               '                 Default value:  1 (0 for IDNLGREY models).'                                ...
               ' '                                                                                          ...
               ' TimeUnit      - Unit for sampling interval and time scale. A string.'                      ...
               '                 Default value:  ''''.'                                                     ...
               ' '                                                                                          ...
               ' TimeVariable  - Independent variable of the inputs and the outputs (and when'              ...
               '                 available internal states). A string. (Used by display.)'                  ...
               '                 Default value:  ''t'' (time).'                                             ...
               ' '                                                                                          ...
               ' InputName     - Input channel names.'                                                      ...
               '                 Content:  Nu-by-1 cell array of strings.'                                  ...
               '                 Assignable values:'                                                        ...
               '                   * String for single-input models, e.g., ''torque''.'                     ...
               '                   * Cell array of strings for multiple-input models,'                      ...
               '                     e.g., {''thrust''; ''aileron deflection''}.'                           ...
               '                 Default names:  {''u1''; ''u2''; ...; ''uNu''}.'                           ...
               ' '                                                                                          ...
               ' InputUnit     - Input channel units.'                                                      ...
               '                 Content:  Nu-by-1 cell array of strings.'                                  ...
               '                 Assignable values:'                                                        ...
               '                   * String for single-input models, e.g., ''m/s''.'                        ...
               '                   * Cell vector of strings for multiple-input models,'                     ...
               '                     e.g., {''^o C''; ''Newton''}.'                                         ...
               '                 Default names:  Empty strings.'                                            ...
               ' '                                                                                          ...
               ' OutputName    - Output channel names.'                                                     ...
               '                 Content:  Ny-by-1 cell array of strings.'                                  ...
               '                 Assignable values:  Analogous to ''InputName''.'                           ...
               '                 Default names:  {''y1''; ''y2''; ...; ''yNy''}.'                           ...
               ' '                                                                                          ...
               ' OutputUnit    - Output channel units.'                                                     ...
               '                 Content:  Ny-by-1 cell array of strings.'                                  ...
               '                 Assignable values:  Analogous to ''InputUnit''.'                           ...
               '                 Default names:  Empty strings.'                                            ...
               ' '                                                                                          ...
               ' NoiseVariance - The variance (covariance matrix) of the model innovations e.'              ...
               '                 Assignable values:'                                                        ...
               '                   * Ny-by-Ny matrix.'                                                      ...
               '                 NOTE. Typically this property is automatically set by the'                 ...
               '                 estimation algorithm.'                                                     ...
               ' '                                                                                          ...
               ' Use SET and GET to set and access property values, as in'                                  ...
               '    set(model, ''InputName'', ''u'');'                                                      ...
               '    get(model, ''TimeUnit'');'                                                              ...
               ' Autofill and subreferencing applies to property names as in model.Noi or'                  ...
               ' model.User.'                                                                               ...
              };
    case 'idnlarx'
        switch infochoice
            case 0 %general
                txt = {' Help on properties of IDNLARX models.'                  ...
                    ' ' ...
                    ' IDNLARX is a non-linear ARX predictor model of the following form:'...
                    ' '...
                    ' ypred = F(x1,x2,...,xn).'...
                    ' '...
                    ' where x1, .. xn are the standard and/or custom REGRESSORS formed from input-output data and '...
                    ' ypred is the ny-dimensional output.'...
                    ' '                                                                            ...
                    ' In addition to the generic IDNLMODEL properties (type ''idprops idnlmodel'' for details),'   ...
                    ' all IDNLARX models share the following IDNLARX-specific properties.'             ...
                    ' '   ...
                    ' na, nb and nk    - The orders, nonnegative integers, meaning that the standard regressors are' ...
                    '                    y(t-1),...y(t-na),u(t-nk),...u(t-nk-nb+1).'...
                    ' '...
                    '                    With ny outputs and nu inputs, nb and nk are ny-by-nu matrices'...
                    '                    and na is an ny-by-ny matrix, meaning that the standard regressors for component'...
                    '                    ypred_k are y_j(t-1),...y_j(t-na(k,j)),u_j(t-nk(k,j)),...u_j(t-nk(k,j)-nb(k,j)+1)'...
                    '                    for all components y_j j=1,..ny and u_j j=1,..nu.'...
                    ' '...
                    ' Nonlinearity     - The function F given as a nonlinearity estimator object.'...
                    '                    Possible objects are sigmoidnet, wavenet, treepartition, neuralnet, customnet or linear.'...
                    '                    (If only one regressor is used, pwlinear, poly1d, deadzone and saturation'...
                    '                     are also possible choices.)'...
                    '                    See ''idprops idnlestimators'' or ''idprops sigmoidnet'' etc, for more details.'...
                    '                    It can also be given as a (abbreviated) string (''sig'', ''wa'', etc).'...
                    ' '...
                    '                    When ny>1, this is an ny-by-1-array of objects, like [sigmoidnet;wavenet].'...
                    '                          If a scalar object is given, it is applied to all outputs.'...
                    ' '...
                    ' CustomRegressors - Specific constructions of regressors from inputs and outputs. They can be given as a'...
                    '                    cell array of strings, like {''y1(t-3)^3'',''y2(t-1)*u1(t-3)'',''sin(u3(t-2))''}'...
                    '                    or as a CUSTOMREG object. It is always returned as such an object.'  ...
                    '                    See help customreg, idprops idnlarx customregressors and idprops customreg for more details.'...
                    ' '...
                    ' NonlinearRegressors - A vector of integers with the indices of those regressors xk that enter the'...
                    '                    nonlinear block of the function F. The other regressors only enter the parallel'...
                    '                    linear block.'...
                    ' '...
                    '                    Assignable values: A vector of integers, or one of the strings'...
                    '                    ''all'': (default) all regressors enter the nonlinear block.'...
                    '                    ''output'' (''input''): all output (input) regressors enter the nonlinear block.'...
                    '                    ''standard'': all standard regressors (i.e. y(t-k), u(t-j)) enter the nonlinear block.'...
                    '                    ''custom'': all custom regressors enter the nonlinear block.'...
                    '                    ''search'': the estimation algorithm performs an exhaustive search for the best choice.'...
                    '                    ''[]'': no regressor enters the nonlinear block.'...
                    ' '...
                    '                    When ny>1, NonlinearRegressors is an ny-by-1 cell array of vectors of integers. If the value '...
                    '                    is ''search'' for any output channel, then it must be so for all the other channels too. This is so '...
                    '                    because the search for nonlinear regressors is performed simultaneously for all output channels.'...
                    ' '...
                    ' Focus            - One of ''Prediction'' or ''Simulation''.'...
                    '                    ''Prediction'' means that the estimation algorithm minimizes the norm of y-ypred,'...
                    '                    while for ''simulation'' the output error fit is minimized, meaning that when ypred'...
                    '                    is computed, y in the regressors in F are replaced by values simulated from the input only.'...
                    '                    '...
                    '                    ''Simulation'' cannot be used if the model contains custom regressors with past outputs.'...
                    ' ' ...                                                                                 ...
                    ' Algorithm        - A structure defining the algorithm used by various IDNLARX'    ...
                    '                    functions. Type ''idprops idnlarx algorithm'' for details.'  ...
                    ' '                                                                                  ...
                    ' EstimationInfo   - A structure with information from the estimation process.'      ...
                    '                    Type ''idprops idnlarx estimationinfo'' for details.'        ...
                    ' '                                                                                  ...
                    ' The properties can be GET and SET and by sub-referencing using autofill as in model.cus.'         ...
                    ' ''nl'' can be used as short for ''nonlinear'' and ''nonlinearity as in model.nl,'...
                    ' or model.nlr for model.NonlinearRegressors.'...



                    };
            case 1%algorithm
                txt = algtext;%{' Help on IDNLARX algorithm.'...
                    %' '...
                    %};
            case 2 %customreg
                txt = {' Help on IDNLARX CUSTOMREGRESSORS.'...
                    ' For the properties of the CUSTOMREG object, type ''idprops customreg''.'...
                    ' '...
                    ' A customregressor is a function (typically a nonlinear transformation) '...
                    ' of inputs and outputs to be used as a regressor entering the nonlinearity estimator'...
                    ' object of idnlarx.'...
                    ' Suppose, for example, that we believe that u1(t-1)*sin(y1(t-3)) and u1(t-2)^3 would be'...
                    ' relevant transformations of the input u1 and the output y1 to predict future outputs.'...
                    ' These new regressors could be defined as custom regressors in two ways:'...
                    ' '...
                    ' 1) as a cell array of strings: C = {''u1(t-1)*sin(y1(t-3))'',''u1(t-2)^3''}'...
                    ' 2) as an object array of CUSTOMREG objects:'...
                    '    cr1 = @(x,y) x*sin(y)',...
                    '    cr2 = @(x) x^3',...
                    '    C = [customreg(cr1,{''u1'' ''y1''},[1 3]),customreg(cr2,{''u1''},2)]'...
                    ' '...
                    ' The model is then estimated as m = nlarx(Data,Orders,linear,''Custom'',C)'...
                    ' The nonlinearity estimator LINEAR here means that the prediction is a linear function'...
                    ' of the custom regressors. Any other nonlinearity estimator (see ''idprops idnlestimators'')'...
                    ' can be used, to allow further nonlinearities in the model.'...
                    ' '...
                    ' The channel names (''y1'' and ''u1'') should be the channel names of the Data.'...
                    ' '...
                    ' MULTIOUTPUT MODELS'...
                    ' For models with p outputs, the custom regressors is p-by-1 dimensional'...
                    ' cell array, where entry ky defines the custom regressor for output ky.'...
                    ' either as a cell array of strings or an object array of CUSTOMREG objects,'...
                    ' as above.'...
                    ' '...
                    ' Custom regressors are obtained as model.Custom, and are then always CUSTOMREG objects'...
                    ' To retrieve custom regressor # r for output # ky, type model.custom{ky}(r).'...
                    ' '...
                    ' '...
                    ' Type ''idprops idnlarx regressors'' for more info on how to deal with the regressors.'...
                    ' See HELP POLYREG for a way to create custom regressors that are polynomial'...
                    ' combinations of delayed inputs and outputs.'...
                    };
            case 3 %estimationinfo
                txt = estinfo; 
            case 4 % regressors
                txt = {' Help on IDNLARX REGRESSORS.'...
                    ' '...
                    ' STANDARD AND CUSTOM REGRESSORS:'...
                    ' The IDNLARX model describes how the output is predicted from the regressors which are'...
                    ' functions of past input and output signals.'...
                    ' There are two kinds of regressors:'...
                    ' '...
                    ' Standard regressors, that are delayed inputs and outputs, u1(t-nk), ... u1(t-nk+nb-1),'...
                    '                  y1(t-1), ..y1(t-na). These are defined by the orders na, nb and nk.'...
                    ' Custom regressors, that are defined as transformations of delayed inputs and outputs.'...
                    '                  Custom regressors are set and retrieved by the property CustomRegressors'...
                    '                  of the idnlarx object. See idprops idnlarx customreg, idprops customreg '...
                    '                  and help customreg for more information.'...
                    ' '...
                    ' REGRESSORS AND NONLINEAR REGRESSORS:'...
                    ' A regressor can enter into the nonlinear block of the nonlinearity estimator F(x). It is then'...
                    ' called a Nonlinear Regressor, and is set and retrieved by the NonlinearRegressors property of idnlarx, ' ...
                    ' which is a vector of integer indices for a single output model and a cell array of vector of integers for '...
                    ' a multiple outputs model. The indices refer to the complete list of regressors.'...
                    ' This list for a model m is obtained by  '...
                    ' '...
                    ' reg = GETREG(m). '...
                    ' '...
                    ' ADDING REGRESSORS:'...
                    ' By the command ADDREG, new regressors can be added to the current list as in'...
                    ' m = NLARX(Data,Orders,sigmoidnet)'...
                    ' m1 = ADDREG(m,{''u1(t-1)*y1(t-1)''}), m2 = PEM(Data,m1)'...
                    ' '...
                    ' The command POLYREG is useful to create polynomial combinations of delayed inputs'...
                    ' and outputs as customregressors. See help POLYREG.'...
                    ' '...
                    };
            case 5 % Focus
                txt = {'Help on FOCUS property of IDNLARX model.'...
                    ' '...
                    ' Focus     - One of ''Prediction'' or ''Simulation''.'...
                    '             ''Prediction'' means that the estimation algorithm minimizes the norm of y-ypred,'...
                    '             while for ''simulation'' the output error fit is minimized, meaning that when ypred'...
                    '             is computed, y in the regressors in F (also customregressors) are replaced by'...
                    '             values simulated from the input only.'...
                    '             '...
                    };
            case 6 % Algorithm.advanced
                txt = algadv;
        end
    case 'idnlhw'
        if infochoice ==  0, infochoice = 1;end
        switch infochoice
            case  1 % siso
                txt = {' Help on properties of the IDNLHW model object for single-input-single-output.'...
                    ' (For Multivariate models, type ''idprops IDNLHW MIMO'')'...
                    ' '...
                    ' IDNLHW is a non-linear block oriented model, with static nonlinear block before and after'...
                    ' a linear dynamic system. The input and output at time t is u(t) and y(t):'...
                    ' '...
                    ' w(t) = f(u(t)),  x(t) = [B(q)/F(q)] w(t), y(t) = h(x(t))+e(t)'...
                    ' where B(q) = b_1 q^-nk + b_2 q^-(nk+1) + ... + b_nb q^-(nk+nb+1) and '...
                    '       F(q)= 1 + f_1 q^-1 + ... + f_nf q^-nf'...
                    ' q^-1 is the backward shift operator: q^-1 u(t) =u(t-1)'...
                    ' e(t) is the modeling error.' ...
                    ' '...
                    ' This is called a Hammerstein-Wiener Model. The case with w(t) = u(t) is a Wiener model,'...
                    ' and the case with y(t) = x(t) is called a Hammerstein model.'...
                    ' '...
                    ' In addition to the generic IDNLMODEL properties (type "idprops idnlmodel" for details),'   ...
                    ' all IDNLHW models share the following IDNLHW-specific properties.' ...
                    ' '...
                    ' nb, nf and nk        - the orders of the transfer functions (nonnegative integers). '...
                    '                        nb is the number of coefficients in B(q) (the number of zeros + 1).'...
                    '                        nf is the number of coefficients in F(q) (the number of poles).'...
                    '                        nk is the delay from input to output (in samples).'...
                    ' b                    - the B-polynomial, a cell array, with b{1} being a vector'...
                    '                            with leading zeros indicating delays.'...
                    ' f                    - the F-polynomial, a cell array with f{1} being a vector.'...
                    ' LinearModel          - The linear model B/F as an IDPOLY object. (Read only)'...
                    ' InputNonlinearity    - a nonlinearity estimator object defining f(.).'...
                    '                        Possible objects are pwlinear, poly1d, deadzone, saturation, sigmoidnet,'...
                    '                        wavenet, customnet and unitgain. See ''idprops idnlestimators'', or'...
                    '                        ''idprops pwlinear'' etc for more details.'...
                    '                        It can also be given as a (abbreviated) string (''pwl'', ''wa'', etc),'...
                    '                        for the corresponding object with default properties.'...
                    '                        ''Unitgain'' means no nonlinearity and can also be gives as [].'...
                    ' OutputNonlinearity   - a nonlinearity estimator object defining h(.).'... 
                    '                        same possible values as InputNonlinearity.'...
                    
                    };
            case 2 % mimo
                 txt = {' Help on properties of the IDNLHW model object for multiple-input-multiple-output.'...
                    ' (For SISO models, type ''idprops IDNLHW SISO'')'...
                    ' '...
                    ' IDNLHW is a non-linear block oriented model, with static nonlinear block before and after'...
                    ' a linear dynamic system. The input and output at time t is u(t) and y(t):'...
                    ' '...
                    ' w(t) = f(u(t)),  x(t) = [B(q)/F(q)] w(t-nk), y(t) = h(x(t))+e(t)'...
                    ' '...
                    ' This is called a Hammerstein-Wiener Model. The case with w(t) = u(t) is a Wiener model,'...
                    ' and the case with y(t) = x(t) is called a Hammerstein model.'...
                    ' In the MIMO case with ny outputs and nu inputs, the interpretation is as follows:'...
                    ' '...
                    ' w_k(t) = f_k(u_k(t)), k=1,...,nu' ...
                    ' x_j(t) = [B_j1(q)/F_j1(q)]w_1(t-nk(j,1)) + [B_j2(q)/F_j2(q)]w_2(t-nk(j,2)) +... ' ...
                               '+ [B_jnu(q)/F_jnu(q)]w_nu(t-nk(j,nu))' ...
                    ' y_j(t)= h_j(x_j(t))+e_j(t)' ...
                    ' '...
                    ' where _k denotes the k:th channel.'...
                    ' In addition to the generic IDNLMODEL properties (type "idprops idnlmodel" for details),'   ...
                    ' all IDNLHW models share the following IDNLHW-specific properties.' ...
                    ' '...
                    ' nb, nf and nk        - the orders of the transfer functions (ny-by-nu matrices of nonnegative integers). '...
                    '                        nb(j,k) is the number of coefficients in B_jk(q) (the number of zeros + 1).'...
                    '                        nf(j,k) is the number of coefficients in F_jk(q) (the number of poles).'...
                    '                        nk(j,k) is the delay from input k to output j (in samples).'...
                    ' b                    - the B-polynomial, a cell array, with b{j,k} being a vector'...
                    '                            containing B_jk, with leading zeros indicating delays.'...
                    ' f                    - the F-polynomial, a cell array with f{j,k} being a vector containing F_jk'...
                    ' LinearModel          - the linear model B/F as an IDPOLY model if ny = 1, and an IDSS model'...
                    '                        for multiple outputs. (Read only).'...
                    ' InputNonlinearity    - an nu-by-1 vector of nonlinearity estimator objects with the k:th'...
                    '                        component defining f_k(.) (as in [wavenet;sigmoidnet]).'...
                    '                        Possible objects are pwlinear, poly1d, deadzone, saturation, sigmoidnet,'...
                    '                        wavenet, customnet or unitgain. See ''idprops idnlestimators'', or'...
                    '                        ''idprops pwlinear'' etc for more details.'...
                    '                        It can also be given as a (abbreviated) string (''pwl'', ''wa'', etc),'...
                    '                        for the corresponding object with default properties, applied to all inputs.'...
                    '                        ''Unitgain'' means no nonlinearity and can also be gives as [].'...
                    ' OutputNonlinearity   - an ny-by-1 vector of nonlinearity estimator objects defining h_j(.).'...
                    '                        corresponding use and same possible values as InputNonlinearity.'...
                    };
            case 3 % algorithm
                txt = algtext;  
            case 4 % estimationinfo
                txt = estinfo; 
            case 5 %algorithm.advanced
                txt = algadv;
        end
        if any(infochoice==[1 2])
            txt = [txt,...
                {' '...
                    ' Algorithm            - A structure defining the algorithm used by various IDNLARX'    ...
                    '                        functions. Type ''idprops idnlhw algorithm'' for details.'  ...
                    ' '                                                                                  ...
                    ' EstimationInfo       - A structure with information from the estimation process.'      ...
                    '                        Type ''idprops idnlhw estimationinfo'' for details.'        ...
                    ' '                                                                                  ...
                    ' The properties can be GET and SET and by sub-referencing using autofill as in model.alg.'         ...
                    ' ''nl'' can be used as short for ''nonlinear'' and ''u'' and ''y'' can be used as short'...
                    ' for ''Input'' and ''Output'' as in model.unl for model.InputNonlinearity.'...
 
                }];
        end
    case 'idnlestimators'
        txt = {'IDNLESTIMATORS: summary of black box nonlinearity estimators'...
            ' '... 
            ' Black box nonlinearity estimators are designed for the estimation of'...
            ' nonlinearities in IDNLARX and IDNLHW models. They are characterized by'... 
            ' the properties described below.'...
            ' '...
            ' Differentiable/non differentiable.'...
            ' An estimator is differentiable if the computation of the derivatives in'... 
            ' its parameters and in its inputs is available. Only differentiable can be'...
            ' used with iterative estimation algorithms.'...
            ' '...
            ' Constructive/non constructive. '...
            ' An estimator is constructive if it is designed with a non iterative'... 
            ' estimation algorithm. It also has the ability to automatically adapt its'... 
            ' complexity (except the trivial LINEAR estimator).'...
            ' '...
            ' Multiple inputs/single input'...
            ' An estimator has a ''multiple inputs'' property if it is designed for the'...
            ' estimation of  multiple variables nonlinearities. In contrast, single input'...
            ' estimators are designed for the estimation of single variable nonlinearity only.'...
            ' They  are typically used in IDNLHW models for input and output channels.'...
            ' '... 
            ' ESTIMATORS AND THEIR PROPERTIES'...
            ' '...
            '                 Differentiable  Constructive   Multiple inputs'...  
            ' '...
            ' CUSTOMNET:       yes            no              yes'...
            ' DEADZONE:        yes            no              no'...
            ' LINEAR:          yes            yes             yes'...
            ' NEURALNET:       no             no              yes'...
            ' PWLINEAR:        yes            no              no'...
            ' POLY1D:          yes            yes             no'...
            ' SATURATION:      yes            no              no'...
            ' SIGMOIDNET:      yes            no              yes'...
            ' TREEPARTITION :  no             yes             yes'...
            ' UNITGAIN:        yes            yes             no'...
            ' WAVENET:         yes            yes             yes'...
            ' '...
            ' '...
            ' NOTE 1.'...
            ' NEURALNET is an interface to Neural Network Toolbox (NNTB). It allows to'...
            ' use arbitrary neural network in the form of a NETWORK object of NNTB.'...
            ' In general they are estimated with the iterative algorithms of NNTB.'...
            ' Because their derivatives are not accessible outside NNTB, they are'...
            ' considered non-differentiable here, though they may be differentiable'...
            ' inside NNTB.'...
            ' '...
            ' NOTE 2.'...
            ' For models which are estimated by simulation error minimization (IDNLARX'...
            ' with Focus=''Simulation'' and IDNLHW), differentiable nonlinearity estimators'...
            ' are  required, since these models are estimated by iterative algorithms.'...
            };
  
    case 'sigmoidnet'
        txt = {' Help on properties of the SIGMOIDNET nonlinearity estimator object.'...
            ' '...
            ' SIGMOIDNET is a nonlinear function y = F(x), where y is scalar and x an m-dimensional row vector.'...
            ' It is based on function expansion, with a possible linear term:'...
            ' '...
            '  F(x) = (x-r)*P*L + a_1 f((x-r)*Q*b_1+c_1) + ... + a_n f((x-r)*Q*b_n+c_n) + d'...
            ' '...
            ' where P and Q are m-by-p and m-by-q projection matrices, r is a 1-by-m vector, d, a_k and c_k are scalars,'...
            ' L is a p-by-1 vector, b_k are q-by-1 vectors, and f is the sigmoid function'...
            ' '...
            ' f(z) = 1/(exp(-z)+1).'...
            ' '...
            ' The vector r is the mean value of the regressor vector computed from estimation data.' ...
            ' The projection matrices P and Q are determined by principal component analysis of estimation data. ' ...
            ' Usually p=m. If in the estimation data the components of x are linearly dependent, then p<m.  ' ...
            ' The number of columns of Q, namely q, corresponds to the number of components of x really used in ' ...
            ' the sigmoid function. When used in an IDNLARX model, q is equal to the size of the ' ...
            ' NonlinearRegressors property of the IDNLARX object. When used in an IDNLHW model, m=q=1 and Q is ' ...
            ' always a scalar.' ...
            ' '...
            ' The value F(x) is computed by evaluate(N,x), where N is the sigmoidnet object.'...
            ' '...
            ' PROPERTIES:'...
            ' '...
            ' NumberOfUnits     - The integer n in the expansion above. (Default 10).'...
            ' '...
            ' LinearTerm        - Values ''off'' or ''on'' (default).'...
            '                    ''off'' means that the vector L above is fixed to zero,'...
            '                     and ''on'' means that such a term is included and estimated.'...
            ' '...
            ' Parameters        - a structure containing the parameters L, d, a_k, b_k and c_k as follows:'...
            '                     RegressorMean is a 1-by-m vector containing r, the means of x in estimation data.'...
            '                     NonLinearSubspace is a m-by-q matrix containing Q.'...
            '                     LinearSubspace is a m-by-p matrix containing P.'...
            '                     LinearCoef is the p-by-1 vector L.'...
            '                     Dilation is a q-by-n matrix containing the values b_k.'...
            '                     Translation is a 1-by-n vector containing the values c_k.'...
            '                     OutputCoef is a n-by-1 vector containing the values a_k.'...
            '                     OutputOffset is the scalar d.'...
            ' '...
            };

    case 'customnet'
        txt = {' Help on properties of the CUSTOMNET nonlinearity estimator object.'...
            ' '...
            ' CUSTOMNET is a nonlinear function y = F(x), where y is scalar and x an m-dimensional row vector.'...
            ' It is based on function expansion, with a possible linear term:'...
            ' '...
            '  F(x) = (x-r)*P*L + a_1 f((x-r)*Q*b_1+c_1) + ... + a_n f((x-r)*Q*b_n+c_n) + d'...
            ' '...
            ' where P and Q are m-by-p and m-by-q projection matrices, r is a 1-by-m vector, d, a_k and c_k are scalars,'...
            ' L is a p-by-1 vector, b_k are q-by-1 vectors, and f is the user selected unit function.'...
            ' '...
            ' The vector r is the mean value of the regressor vector computed from estimation data.' ...
            ' The projection matrices P and Q are determined by principal component analysis of estimation data. ' ...
            ' Usually p=m. If in the estimation data the components of x are linearly dependent, then p<m.  ' ...
            ' The number of columns of Q, namely q, corresponds to the number of components of x really used in ' ...
            ' the specified unit function. When used in an IDNLARX model, q is equal to the size of the ' ...
            ' NonlinearRegressors property of the IDNLARX object. When used in an IDNLHW model, m=q=1 and Q is ' ...
            ' always a scalar.' ...
            ' '...
            ' The value F(x) is computed by evaluate(N,x), where N is the customnet object.'...
            ' '...
            ' PROPERTIES:'...
            ' '...
            ' NumberOfUnits     - The integer n in the expansion above. (Default 10).'...
            ' '...
            ' LinearTerm        - Values ''off'' or ''on'' (default).'...
            '                    ''off'' means that the vector L above is fixed to zero,'...
            '                     and ''on'' means that such a term is included and estimated.'...
            ' '...
            ' Parameters        - a structure containing the parameters L, d, a_k, b_k and c_k as follows:'...
            '                     RegressorMean is a 1-by-m vector containing r, the means of x in estimation data.'...
            '                     NonLinearSubspace is a m-by-q matrix containing Q.'...
            '                     LinearSubspace is a m-by-p matrix containing P.'...
            '                     LinearCoef is the p-by-1 vector L.'...
            '                     Dilation is a q-by-n matrix containing the values b_k.'...
            '                     Translation is a 1-by-n vector containing the values c_k.'...
            '                     OutputCoef is a n-by-1 vector containing the values a_k.'...
            '                     OutputOffset is the scalar d.'...
            ' '...
            ' UnitFcn           - A function handle that points to the unit function f, its derivative and effective range.'...
            '                     UnitFcn must point to a function of the form [f, g, a] = function_name(x),'...
            '                     where f is the value of the function, g=df/dx and a indicates the unit function active range'...
            '                     (g is significantly non zero in the interval [-a a]). This function must be "vectorized":'...
            '                     for a vector or matrix x, the output arguments f and g must have the same size as x,'...
            '                     computed element-by-element.'...
            };

    case 'wavenet'
        txt = {' Help on properties of the WAVENET nonlinearity estimator object.'...
            ' '...
            ' WAVENET is a nonlinear function y = F(x), where y is scalar and x a m-dimensional vector.'...
            ' It is based on function expansion:'...
            ' '...
            '  F(x) = (x-r)*P*L + as_1 f(bs_1*((x-r)*Q-cs_1)) + ... + as_ns f(bs_ns*((x-r)*Q-cs_ns)) + ' ...
            '                   + aw_1 g(bw_1*((x-r)*Q-cw_1)) + ... + aw_nw g(bw_nw*((x-r)*Q-cw_nw)) + d '...
            ' '...
            ' where P and Q are m-by-p and m-by-q matrices, r is a 1-by-m vector, d, as_k, bs_k, aw_k ' ...
            ' and bw_k are scalars, L is a p-by-1 vector, cs_k and cw_k are 1-by-q vectors, f is ' ...
            ' the scaling function and g is the wavelet function. '...
            ' '...
            ' The vector r is the mean of x computed from estimation data. ' ...
            ' The projection matrices P and Q are determined by principal component analysis of estimation data. ' ...
            ' Usually p = m. If in the estimation data the components of x are linearly dependent, then p < m.  ' ...
            ' The number of columns of Q, namely q, corresponds to the number of components of x really used in ' ...
            ' the scaling and wavelet functions. When used in an IDNLARX model, q is equal to the size of the ' ...
            ' NonlinearRegressors property of the IDNLARX object. When used in an IDNLHW model, m=q=1 and Q is ' ...
            ' always a scalar.' ...
            ' ' ...
            ' The scaling function f and the wavelet function g are both radial functions: ' ...
            ' ' ...
            ' f(x) = exp(-0.5*x''*x) ' ...
            ' g(x) = (dim(x)-x''*x)*exp(-0.5*x''*x). ' ...
            ' '...
            ' The value F(x) is computed by evaluate(N,x), where N is the wavenet object.'...
            ' '...
            ' PROPERTIES:'...
            ' '...
            ' NumberOfUnits     - The integer ns+nw, automatically determined when set to ''Auto'' (default). ' ...
            '                     It may also be set to ''interactive'' for determination of its value during '...
            '                     model estimation.'...
            ' '...
            ' LinearTerm        - Values ''off'' or ''on'' (default).'...
            '                    ''off'' means that the term (x-r)*P*L is omitted, and ''on'' means that such ' ...
            '                     a term is included and estimated.'...
            ' '...
            ' Parameters        - a structure containing parameters as follows:'...
            '                     RegressorMean is a 1-by-m vector containing the value of r. '...
            '                     NonLinearSubspace is a m-by-q matrix containing the value of Q. ' ...
            '                     LinearSubspace is a m-by-p matrix containing the value of P. ' ...
            '                     LinearCoef is a p-by-1 vector containing the value of L. ' ...
            '                     ScalingDilation is a ns-by-1 vector containing the values bs_k. ' ...
            '                     WaveletDilation is a nw_by-1 vector containing the values bw_k. ' ...
            '                     ScalingTranslation is a ns-by-q matrix containing the values cs_k. ' ...
            '                     WaveletTranslation is a nw-by-q matrix containing the values cw_k. ' ...
            '                     ScalingCoef is a ns-by-1 vector containing the values of as_k. '...
            '                     WaveletCoef is a nw-by-1 vector containing the values of aw_k. '...
            '                     OutputOffset is the scalar d. ' ...
            ' '...
            ' Options           - A structure with the following fields affecting the initial model:'...
            '                     FinestCell: Integer or string giving the minimum number of data',...
            '                            points in the smallest cell (a cell is the area covered by the ' ...
            '                            significantly non zero part of a wavelet).'...
            '                            Default value: ''Auto'', meaning that it is determined from data.'...
            '                     MinCells: Integer (default 16). Minimum number of cells in the partition.'...
            '                     MaxCells: Integer (default 128). Maximum number of cells in the partition.'...
            '                     MaxLevels: Integer (default 10). Maximum number of wavelet levels.'...
            '                     DilationStep: Real scalar (default 2). Dilation step size.'...
            '                     TranslationStep: Real scalar (default 1). Translation step size.'...
            ' '...
            };
    case 'treepartition'
         txt = {' Help on properties of the TREEPARTITION nonlinearity estimator.'...
            ' '...
            ' TREEPARTITION is a nonlinear function y = F(x), where y is scalar and x a 1-by-m vector.'...
            ' F is a piecewise linear (affine) function of x:'...
            ' F(x) = x*L+ [1,x]*C_a + d when x belongs to D_a, where '...
            '        L is a 1-by-m vector, C_k is a 1-by-(m+1) vector,'...
            '        and D_k is partition of the x-space.' ...
            ' The active partition D_a is determined as an intersection of half-spaces by a binary tree as follows:'...
            ' first a tree with N nodes and J levels is initialized. A node at level J is a  terminating leaf'... 
            ' and a node at a level j<J has two descendants at level j+1. All levels are complete, so N = 2^(J+1)-1.'...
            ' The partition at node r is based on [1,x]*B_r > 0 or <= 0 (move to left or right descendant),'...
            ' where B_r is chosen to improve the stability of least-square computation on the partitions at the descendant'...
            ' nodes. Then at each node r the coefficients C_r of best linear approximation of unknown regression function'... 
            ' on D_r are computed using penalized least-squares algorithm.'...  
                       ' '...
            ' The value F(x) is computed by evaluate(T,x), where T is the treepartition object.'...
            ' At this stage an adaptive ''pruning'' algorithm is used to choose the active partition D_a(= D_a(x))'...
             ' on the branch of partitions of the tree, which contain x. '...
            ' '...
            ' PROPERTIES:'...
            ' '...
            ' NumberOfUnits     - The number of nodes N in the tree.'...
            '                     ''Auto'' (default) means that N is selected from data by pruning.'...
            '                     If set to an integer before estimation, N is given as the largest value'...
            '                     of the form 2^(J+1)-1 less than this integer.'...
            ' Parameters        - A structure containing the following fields:'...
            '                     RegressorMean: a 1-by-m vector containing the means of the regressors'...
            '                               in estimation data.'...
            '                     RegressorMinMax: an m-by-2 matrix, containing maximum and minimum'...
            '                               regressor values in estimation data.'...
            '                     OutputOffset: The scalar d.'...
            '                     LinearCoef: The m-by-1 vector L.'...
            '                     SampleLength: The length of estimation data.'...
            '                     NoiseVariance: The estimated variance of the noise in estimation data.'...
            '                     Tree: A structure containing the tree parameters:'...
            '                       These are given be the following fields:'...
            '                       TreeLevelPntr: a N-by-1 vector containing the levels j of each node.'...
            '                       AncestorDescendantPntr: a N-by-3 matrix, so that entry (k,1) is the ancestor'...
            '                           of node k, entries (k,2) and (k,3) are the left and right descendants.'...
            '                       LocalizingVectors: a N-by-(m+1) matrix, whose r:th row is B_r.'...
            '                       LocalParVector: a N-by-(m+1) matrix, whose k:th row is C_k.'...
            '                       LocalCovMatrix: a N-by-((m+1)m/2) matrix whose k:th row is the covariance matrix'...
            '                           of C_k (reshaped as a row vector).'...
            ' '...      
            ' Options           - A structure containing the following fields:'...
            '                     FinestCell: Integer or string giving the minimum number of data'...                
                       '                            points in the smallest partition.'...                                            
                       '                            Default value: ''Auto'', meaning that it is determined from data.'...  
                       '                     Threshold: threshold parameter used by the adaptive pruning algorithm. The smaller'...
                       '                            is the threshold value, the shorter will be the branch terminated by'...
                       '                            the active partition D_a. Higher threshold value will result in a longer branch.'...
                       '                            Default value: 1.0 .'...
                       '                     Stabilizer: the penalty parameter of the penalized least-squares algorithm used'...
                       '                            to compute local  parameter vectors C_k. Higher stabilizer value will improve'...
                       '                            stability but may deteriorate the accuracy the least-square estimate.'...
                       '                            Default value: 1e-6.'...
                       ' '...
            };
    case 'neuralnet'
        txt = {' Help on properties of the NEURALNET nonlinearity estimator. REQUIRES NEURAL NETWORK TOOLBOX.'...
            ' '...
            ' NEURALNET is a nonlinear function y = F(x), where y is scalar and x an m-dimensional row vector.'...
            ' The function is determined by a multilayer feedforward Neural Network, as given'...
            ' in Neural Network Toolbox.'...
            ' '...
            ' The value F(x) is computed by evaluate(M,x), where M is the NEURALNET object.'...
            ' '...
            ' PROPERTIES:'...
            ' Network      - This property is a Network object created with Neural Network Toolbox.'...
            '                See Help network.'...
            '                The typical way to create such an object is to use FEEDFORWARDNET, or CASCADEFORWARDNET:'...
            '                FF = FEEDFORWARDNET([nL_1,nL_2,..,nL_r]),'...
            '                where FF is a network that has r+1 layers and nL_k neurons in the k:th layer, '...
            '                except the last (output) layer which has one neuron assigned automatically: '...
            '                nL_(r+1) = 1. The transfer or unit function in the k:th layer, tf_k, can be '...
            '                assigned as: FF.layers{k}.transferFcn = tf_k;  (default: ''tansig'')'...
            '                The number of inputs and output of FF are set to zero by default, which '...
            '                denotes uninitialized values. In this case (i.e. when input size = output size = 0),'...
            '                the input and output sizes and their ranges are determined automatically during '...
            '                model estimation. You can also assign them manually by setting their ranges as in:'...
            '                FF.outputs{FF.outputConnect}.range = [min(TargetData), max(TargetData)]'...
            '                When assigning ranges manually, remember that the number of inputs is equal to'...
            '                the number of model regressors (see GETREG) and number of outputs is 1. Hence'...
            '                FF.inputs{1}.range must be a m-by-2 matrix and FF.outputs{FF.outputConnect}.range'...
            '                must be a 1-by-2 matrix, where m = No. of regressors. See Help feedforwardnet for '...
            '                more information on feedforward networks.'...
            ' '...
            ' A typical use of NEURALNET in estimation IDNLARX model is illustrated by the two hidden-layer example:'...
            '           load twotankdata'...
            '           Data = iddata(y,u,0.2);'...
            '           NET =  feedforwardnet([10 20]);'... 
            '           N = neuralnet(NET);'...
            '           Model = nlarx(Data,[2 2 1],N); '...
            ' '...
            };
    case 'linear'
        txt = {' Help on properties of the LINEAR nonlinearity estimator.'...
            ' '...
            ' LINEAR is a linear (affine) function y = F(x), where y is scalar and x an m-dimensional row vector.'...
            ' F(x) = x*L + d'...
            ' '...
            ' where L is an m-by-1 vector and d is a scalar.'...
            ' '...
            ' The value F(x) is computed by evaluate(N,x), where N is the linear object.'...
            ' '...
            ' PROPERTIES:'...
            ' Parameters     - A structure with the following fields'...
            '                  LinearCoef: the m-by-1 vector L.'...
            '                  OutputOffset: The scalar d.'...
            ' '...
            ' The typical use of the LINEAR ''Nonlinearity'' in IDNLARX is to create nonlinear models that are ' ...
            ' linear in the (custom) regressors, which could be nonlinear in input-output data:',...
            ' '...
            ' m = nlarx(data,orders,linear,''custom'',{''y1(t-1)*u1(t-2)'',''u2(t-1)*u1(t-1)''})'...
            ' '...
            };
    case 'unitgain'
        txt = {' Help on properties of the UNITGAIN nonlinearity estimator.'...
            ' '...
            ' UNITGAIN is a linear function y = F(x), where y and x are scalars.'...
            ' F(x) is the identity mapping F(x) = x.'...
            ' '...
            ' This object has no PROPERTIES.'...
            ' The use of UNITGAIN is in NLHW, to indicate that there are no nonlinearities in certain input or'...
            ' output channels. An example is:'...
            ' m = nlhw(data,orders,[saturation,unitgain],deadzone)'...
            ' for a model with 2 inputs and one output, where the first input saturates, but not the other.'...
            ' Note that if nonlinearities are absent in all input or output channels, unitgain can be replaced by'...
            ' the empty matrix: m = nlhw(data,orders,[],''sigm'') defines a Wiener model.'...
            ' '...
            };
    case 'pwlinear'
        txt = {' Help on properties of the PWLINEAR nonlinearity estimator.'...
            ' '...
            ' PWLINEAR is a nonlinear function y = F(x), where y and x are scalars.'...
            ' F(x) is piecewise linear: there are n break points (x_k,y_k), k=1,...,n such that  y_k = F(x_k) ' ...
            ' and F(x) is linearly interpolated between these points.'...
            ' '...
            ' The value F(x) is computed by evaluate(P,x), where P is the pwlinear object.'...
            ' '...
            ' PROPERTIES:'...
            ' NumberOfUnits      - the number n of breakpoints.'...
            ' BreakPoints        - a 2-by-n matrix containing the breakpoints:'...
            '                      [x_1,x_2,...,x_n;y_1,y_2,...,y_n].'...
            '                      If set to a 1-by-n vector, the values are interpreted as'...
            '                      x-values, with corresponding y-values all zeros.'...
            ' '...
            ' Note that F(x) is linear also to the left and right of the extreme breakpoints.'...
            ' The slope of these extension is quite a complicated function of x_i, y_i.'...
            ' The breakpoints are ordered by ascending x-values (which should be noted if'...
            ' a breakpoint is actively changed).'...
            ' Note also the internal representation of the breakpoints is different, which'...
            ' may explain minor deviations from the set values.'...
            };
          
    case 'poly1d'
        txt = {' Help on properties of the POLY1D nonlinearity estimator.'...
            ' '...
            ' POLY1D is a polynomial function y = F(x), where y and x are scalars.'...
            ' F(x) = c(1)*x^n + c(2)*x^(n-1) + ... + c(n)*x + c(n+1).'...
            ' '...
            ' The value F(x) is computed by evaluate(P,x), where P is the poly1d object.'...
            ' '...
            ' PROPERTIES:'...
            ' Degree       - the highest power n, a positive integer.'...
            ' Coefficients - a 1-by-(n+1) real vector containing the polynomial '...
            '                      coefficients c(1),c(2),...,c(n+1).'...
            };
      
          
    case 'saturation'
        txt = {' Help on properties of the SATURATION nonlinearity estimator.'...
            ' '...
            ' SATURATION is a nonlinear function y = F(x), where y and x are scalars.'...
            ' F(x) = x for a<=x<b.'...
            ' F(x) = a for a>x.'...
            ' F(x) = b for b<=x.'...
            ' '...
            ' The value F(x) is computed by evaluate(P,x), where P is the saturation object.'...
            ' '...
            ' PROPERTIES:'...
            ' '...
            ' LinearInterval      - a 1-by-2 vector [a b].'...
            };
    case 'deadzone'
        txt = {' Help on properties of the DEADZONE nonlinearity estimator.'...
            ' '...
            ' DEADZONE is a nonlinear function y = F(x), where y and x are scalars.'...
            ' F(x) = 0 for a<=x<b.'...
            ' F(x) = x-a for x<a.'...
            ' F(x) = x-b for x>=b.'...
            ' '...
            ' The value F(x) is computed by evaluate(P,x), where P is the deadzone object.'...
            ' '...
            ' PROPERTIES:'...
            ' '...
            ' ZeroInterval     - a 1-by-2 vector [a b].'...
            
            };

    case 'idnlgrey'
        switch infochoice
            case 0
                % General properties.
                txt = {' Help on properties of IDNLGREY models.'                                            ...
                    ' '                                                                                  ...
                    ' IDNLGREY models based on user-written MATLAB files, MEX-files or function handles'       ...
                    ' that define nonlinear state space models on the form:'                             ...
                    ' '                                                                                  ...
                    '      xn(t) = F(t, x(t), u(t), p1, ..., pNpo);        x(0) = X0;'                   ...
                    '       y(t) = H(t, x(t), u(t), p1, ..., pNpo) + e(t)'                               ...
                    ' '                                                                                  ...
                    ' in continuous or discrete time. Here xn(t) = x(T+Ts) in discrete time'             ...
                    ' and xn(t) = d/dt x(t) in continuous time. F(.) and H(.) are nonlinear'             ...
                    ' functions. NPo is the number of parameter objects (a scalar, a column vector'      ...
                    ' or a 2-dimensional matrix).'                                                       ...
                    ' '                                                                                  ...
                    ' In addition to the generic IDNLMODEL properties (type "idprops idnlmodel" for details),'   ...
                    ' all IDNLGREY models share the following IDNLGREY-specific properties.'             ...
                    ' '                                                                                  ...
                    ' FileName         - The name (a string) of the file (without extension) or a'       ...
                    '                    function handle computing the states and the outputs.'          ...
                    '                    If ''FileName'' is a string, then it must point to a MATLAB file,'      ...
                    '                    a p-coded file or a MEX-file. The format of this file/function handle'      ...
                    '                    should be'                                                      ...
                    '                      [dx, y] = FileName(t, x, u, p1, ..., pNpo, ...'               ...
                    '                                         ''FileArgument'');'                        ...
                    '                    where t is the independent variable, x the state vector'        ...
                    '                    at time t, p1, ..., pNpo the parameters of the model, u the'    ...
                    '                    input vector at time t, and ''FileArgument'' is an arbitrary'   ...
                    '                    auxiliary input argument to the file/function handle.'          ...
                    ' '                                                                                  ...
                    ' Order            - Structure with fields:'                                         ...
                    '                      ny: the number of outputs of the model structure.'            ...
                    '                      nu: the number of inputs of the model structure.'             ...
                    '                      nx: the number of states of the model structure.'             ...
                    '                    For time-series, nu should be set to 0. The number of'          ...
                    '                    inputs nu and outputs ny cannot be changed for an IDNLGREY'     ...
                    '                    model.'                                                         ...
                    ' '                                                                                  ...
                    ' Parameters       - Npo-by-1 structure array with information about the'            ...
                    '                    parameters of an IDNLGREY model.'                               ...
                    '                    Type ''idprops idnlgrey parameters'' for details.'''          ...
                    ' '                                                                                  ...
                    ' InitialStates    - Nx-by-1 structure array with information about the'             ...
                    '                    initial states of an IDNLGREY model.'                           ...
                    '                    Type ''idprops idnlgrey initialstates'' for details.'''       ...
                    ' '                                                                                  ...
                    ' FileArgument     - Auxiliary argument that will be passed on to the MATLAB file, p-file,'       ...
                    '                    MEX-file or to the function handle specified by ''FileName''.'  ...
                    '                    The FileArgument data must be condensed into a cell array.'     ...
                    '                    It is then up to the model file to parse and test'              ...
                    '                    ''FileArgument''. Default is {}.'                               ...
                    ' '                                                                                  ...
                    ' CovarianceMatrix - The covariance matrix of the estimated ''Parameters''.'         ...
                    '                    Assignable values:'                                             ...
                    '                      * ''None'' to inhibit computations of uncertainties (so'      ...
                    '                        as to save time during parameter estimation).'              ...
                    '                      * ''Estimate'' to facilitate covariance estimation'           ...
                    '                        after that ''CovarianceMatrix'' was set to ''None''.'       ...
                    '                      * Symmetric and positive Npe-by-Npe matrix or [].'            ...
                    '                        Npe is the number of free parameters of the model.'         ...
                    '                    NOTE. Typically this property is automatically set by the'      ...
                    '                    estimation algorithm. The user is only allowed to set the'      ...
                    '                    property to ''None'' or ''Estimate''.'                          ...
                    ' '                                                                                  ...
                    ' Algorithm        - A structure defining the algorithm used by various IDNLGREY'    ...
                    '                    functions. Type ''idprops idnlgrey algorithm'' for details.'  ...
                    ' '                                                                                  ...
                    ' EstimationInfo   - A structure with information from the estimation process.'      ...
                    '                    Type ''idprops idnlgrey estimationinfo'' for details.'        ...
                    ' '                                                                                  ...
                    ' The properties can be GET and SET by sub-referencing using autofill as in'         ...
                    ' FileName = model.FileN;'                                                           ...
                    };
            case 1
                txt = {' Help on parameter properties for IDNLGREY models.'                                 ...
                    ' '                                                                                  ...
                    ' The property ''Parameters'' is an Npo-by-1 structure array with fields as'         ...
                    ' follows. (Npo is the number of parameter objects, each of which has a value'       ...
                    ' that is a finite real scalar, a column vector or a 2-dimensional matrix. If'       ...
                    ' all parameters are scalars, then Npo = Np, the number of total number of'          ...
                    ' parameters.)'                                                                      ...
                    ' '                                                                                  ...
                    ' Name    - Name of the parameter (a string). Default value is ''pi'', where'        ...
                    '           i is an integer in [1, Npo].'                                            ...
                    ' '                                                                                  ...
                    ' Unit    - Unit of the parameter (a string). Default value is ''''.'                ...
                    ' '                                                                                  ...
                    ' Value   - Initial value of the parameter(s).'                                      ...
                    '           Assignable values:'                                                      ...
                    '             * A finite real scalar.'                                               ...
                    '             * A finite real column vector.'                                        ...
                    '             * A 2-dimensional real matrix.'                                        ...
                    ' '                                                                                  ...
                    ' Minimum - Minimum value of the parameter(s).'                                      ...
                    '           Assignable values:'                                                      ...
                    '             * A real scalar/column vector/matrix of the same size as'              ...
                    '               Value and such that Minimum <= Value for all components.'            ...
                    '           Default value:  -Inf(size(Value)).'                                      ...
                    ' '                                                                                  ...
                    ' Maximum - Maximum value of the parameter(s).'                                      ...
                    '           Assignable values:'                                                      ...
                    '             * A real scalar/column vector/matrix of the same size as'              ...
                    '               Value and such that Value <= Maximum for all components.'            ...
                    '           Default value:  Inf(size(Value)).'                                       ...
                    ' '                                                                                  ...
                    ' Fixed   - Specifies which component(s) of the parameter object that is to be'      ...
                    '           estimated.'                                                              ...
                    '           Assignable values:'                                                      ...
                    '             * A boolean scalar/column vector/matrix of the same size as'           ...
                    '               Value.'                                                              ...
                    '           Default value:  false(size(Value)), i.e., estimate all parameter'         ...
                    '               components.'                                                         ...
                    ' '                                                                                  ...
                    ' For an IDNLGREY model m, the i:th parameter is accessed through'               ...
                    ' m.Parameters(i) and its sub-fields as m.Parameters(i).FIELDNAME.'                  ...
                    };
            case 2
                txt = {' Help on initial states'' properties for IDNLGREY models.'                          ...
                    ' '                                                                                  ...
                    ' The property ''InitialStates'' is an Nx-by-1 structure array with fields as'       ...
                    ' follows. (Nx is the number of states of the IDNLGREY model.)'                      ...
                    ' '                                                                                  ...
                    ' Name    - Name of the state (a string). Default value is ''xi'', where i is'       ...
                    '           an integer in [1, Nx].'                                                  ...
                    ' '                                                                                  ...
                    ' Unit    - Unit of the state (a string). Default value is ''''.'                    ...
                    ' '                                                                                  ...
                    ' Value   - Initial value of the initial state(s).'                                  ...
                    '           Assignable values:'                                                      ...
                    '             * A finite real scalar.'                                               ...
                    '             * A finite real 1-by-Ne vector, where Ne is the number of'             ...
                    '               experiments.'                                                        ...
                    ' '                                                                                  ...
                    ' Minimum - Minimum value of the initial state(s).'                                  ...
                    '           Assignable values:'                                                      ...
                    '             * A real scalar/1-by-Ne vector of the same size as Value and'          ...
                    '               such that Minimum <= Value for all components.'                      ...
                    '           Default value:  -Inf(size(Value)).'                                      ...
                    ' '                                                                                  ...
                    ' Maximum - Maximum value of the initial state(s).'                                  ...
                    '           Assignable values:'                                                      ...
                    '             * A real scalar/1-by-Ne vector of the same size as Value and'          ...
                    '               such that Value <= Maximum for all components.'                      ...
                    '           Default value:  Inf(size(Value)).'                                       ...
                    ' '                                                                                  ...
                    ' Fixed   - Specifies which component(s) of the initial state(s) that is to be'      ...
                    '           estimated.'                                                              ...
                    '           Assignable values:'                                                      ...
                    '             * A boolean scalar/1-by-Ne vector of the same size as Value.'          ...
                    '           Default value:  true(size(Value)), i.e., do not estimate the'           ...
                    '             initial state(s).'                                                     ...
                    ' '                                                                                  ...
                    ' For an IDNLGREY model m, the i:th initial state is accessed through'            ...
                    ' m.InitialStates(i) and its sub-fields as m.InitialStates(i).FIELDNAME.'            ...
                    };
            case 3
                txt = {' Help on algorithm properties for IDNLGREY models.'                                 ...
                    ' '                                                                                  ...
                    ' The property ''Algorithm'' contains the following fields which can be'             ...
                    ' individually accessed by GET and SET as well as via subscripting:'                 ...
                    ' '                                                                                  ...
                    ' SimulationOptions - A structure holding various settings for the differential'     ...
                    '                     or difference equation solvers used by IDNLGREY.'              ...
                    '                     Type ''idprops idnlgrey algorithm.simulationoptions'''       ...
                    '                     for details.'                                                  ...
                    ' '                                                                                  ...
                    ' GradientOptions   - A structure containing various settings for the algorithms'    ...
                    '                      for computing Jacobians and gradients within IDNLGREY.'       ...
                    '                      Type ''idprops idnlgrey algorithm.gradientoptions'''        ...
                    '                      for details.'                                                 ...
                    ' '                                                                                  ...
                    ' SearchMethod      - The search method used by the iterative search algorithm.'     ...
                    '                     Assignable values:'                                            ...
                    '                       * ''Auto''      - An automatic choice of the following.'     ...
                    '                       * ''gn''        - Gauss-Newton method.'                      ...
                    '                       * ''gna''       - Adaptive Gauss-Newton method.'             ...
                    '                       * ''grad''      - A gradient method.'                        ...
                    '                       * ''lm''        - Levenberg-Marquardt method.'               ...
                    '                       * ''lsqnonlin'' - Nonlinear least-squares method, provided'  ...
                    '                                       by the optimization toolbox.'                ...
                    '                     Default value:  ''Auto''.'                                     ...
                    '                     Applicability:  ''lsqnonlin'' requires the optimization'       ...
                    '                        toolbox.'                                                   ...
                    ' Criterion         - Minimization criterion for iterative search (see Section 7.4, Ljung (1999))'...
                    '                     Assignable values:'                                              ...
                    '                       * ''det''    - Determinant criterion '...
                    '                                      det(E''*E) is minimized (with some normalization), '...
                    '                                      where E is the prediction error matrix  '     ...
                    '                                      (see Eqn 7.96, Ljung (1999)).              '  ...
                    '                       * ''trace''  - Trace criterion '                             ...
                    '                                      Weighted least squares: trace(E''*E*W) is minimized '...
                    '                                      (with some normalization), where E is ' ...
                    '                                      the matrix of prediction errors over the available time ' ...
                    '                                      span. Weighting W is specified through the ''Weighting'' '...
                    '                                      Algorithm property.'                                      ...
                    ' '...
                    ' Weighting         - Weighting W applied to trace minimization. When Criterion = ''Trace'', ' ...
                    '                     trace(E''*E*W)  is minimized.' ...
                    '                     Weighting should be specified as a positive semi-definite symmetric matrix. '     ...
                    '                     It can be used to specify relative importance of outputs in multi-output '...
                    '                     models (or reliability of corresponding data) ; for such a use, '...
                    '                     specify a diagonal matrix for Weighting. Weighting is not useful in '   ...
                    '                     single-output models. By default, W is an identity matrix of size equal'...
                    '                     to number of model outputs (implying all outputs are to be given equal '...
                    '                     importance during estimation).'                                         ...
                    ' '                                                                                  ...
                    ' MaxIter           - Maximum number of iterations to perform by the estimation'     ...
                    '                     algorithm.'                                                    ...
                    '                     Assignable values:'                                            ...
                    '                       * A positive integer.'                                       ...
                    '                     Default value:  20.'                                           ...
                    ' '                                                                                  ...
                    ' Tolerance         - Tolerance stating when to terminate the iterative search.'     ...
                    '                     When the expected improvement is less than ''Tolerance'' %'    ...
                    '                     the iterations are terminated.'                                ...
                    '                     Assignable values:'                                            ...
                    '                       * A positive real.'                                          ...
                    '                     Default value:  0.01.'                                         ...
                    ' '                                                                                  ...
                    ' LimitError        - A value that limits the influence of large residuals'          ...
                    '                     (robustification). Residuals (model errors) with a value'      ...
                    '                     larger than ''LimitError''*(estimated residual standard'       ...
                    '                     deviation) will carry a linear rather than a quadratic'        ...
                    '                     cost.'                                                         ...
                    '                     Assignable values:'                                            ...
                    '                       * A positive real.'                                          ...
                    '                     Default value:  1.6. (0 means no robustification.)'            ...
                    ' '                                                                                  ...
                    ' Display           - Determines the amount of information to display on the'        ...
                    '                     screen during the execution of the parameter estimation'       ...
                    '                     algorithm.'                                                    ...
                    '                     Assignable values:'                                            ...
                    '                       * ''Off''  - No information displayed.'                      ...
                    '                       * ''On''   - Information about criterion values displayed.'  ...
                    '                       * ''Full'' - Information about parameters and criterion'     ...
                    '                                  values displayed.'                                ...
                    '                     Default value:  ''Off''.'                                      ...
                    '                     In the present version, ''On'' and ''Full'' display the same'  ...
                    '                     output on the screen.'                                         ...
                    ' '                                                                                  ...
                    ' Advanced          - A structure that contains further estimation-related'          ...
                    '                     algorithmic details.'                                          ...
                    '                     Type ''idprops idnlgrey Algorithm.Advanced'' for details.'   ...
                    ' '                                                                                  ...
                    ' The algorithm properties can be GET and SET by sub-referencing using autofill.'    ...
                    };
            case 4
                txt = {' Help on Ordinary Differential/Difference Equation (ODE) solver properties for'     ...
                    ' IDNLGREY models.'                                                                  ...
                    ' '                                                                                  ...
                    ' The property ''Algorithm.SimulationOptions'' contains the following fields'        ...
                    ' which can be individually accessed by GET and SET as well as via subscripting:'    ...
                    ' '                                                                                  ...
                    ' Solver    - The ODE (Ordinary Differential/Difference Equation) solver used'       ...
                    '             to solve the state space equations.'                                   ...
                    '             Assignable values:'                                                    ...
                    '             A. Variable-step solvers for time-continuous IDNLGREY models:'         ...
                    '               * ''ode45''   - Runge-Kutta (4,5) solver for nonstiff problems.'     ...
                    '               * ''ode23''   - Runge-Kutta (2,3) solver for nonstiff problems.'     ...
                    '               * ''ode113''  - Adams-Bashforth-Moulton solver for nonstiff problems.'    ...
                    '               * ''ode15s''  - Numerical Differential Formula solver for stiff problems.' ...
                    '               * ''ode23s''  - Modified Rosenbrock solver for stiff problems.'      ...
                    '               * ''ode23t''  - Trapezoidal solver for moderately stiff problems.'   ...
                    '               * ''ode23tb'' - Implicit Runge-Kutta solver for stiff problems.'     ...
                    '             B. Fixed-step solvers for time-continuous IDNLGREY models:'            ...
                    '               * ''ode5''    - Dormand-Prince solver.'                              ...
                    '               * ''ode4''    - Fourth-order Runge-Kutta solver.'                    ...
                    '               * ''ode3''    - Bogacki-Shampine solver.'                            ...
                    '               * ''ode2''    - Heun or improved Euler solver.'                      ...
                    '               * ''ode1''    - Euler solver.'                                       ...
                    '             C. Fixed-step solvers for time-discrete IDNLGREY models:'              ...
                    '               * ''FixedStepDiscrete''.'                                            ...
                    '             D. General:'                                                           ...
                    '               * ''Auto'' - An automatic choice of the above (default).'            ...
                    '             See the manual for more details.'                                      ...
                    ' '                                                                                  ...
                    ' RelTol    - A relative error tolerance that applies to all components of the'      ...
                    '             state vector. The estimated error in each integration step'            ...
                    '             satisfies |e(i)| <= max(RelTol*abs(x(i)), AbsTol(i)).'                 ...
                    '             Assignable values:'                                                    ...
                    '               * A positive real.'                                                  ...
                    '             Default value:  1e-3 (0.1% accuracy).'                                 ...
                    '             Applicability:  Variable-step time-continuous solvers.'                ...
                    ' '                                                                                  ...
                    ' AbsTol    - Threshold error value. This tolerance represents the acceptable'       ...
                    '             error as the value of the measured state approaches zero.'             ...
                    '             Assignable values:'                                                    ...
                    '               * A positive real.'                                                  ...
                    '             Default value:  1e-6.'                                                 ...
                    '             Applicability:  Variable-step time-continuous solvers.'                ...
                    ' '                                                                                  ...
                    ' MinStep   - Specifies the smallest time step the ODE solver may take.'             ...
                    '             Assignable values:'                                                    ...
                    '               * ''Auto'' - An automatic choice.'                                   ...
                    '               * A positive real < ''MaxStep''.'                                    ...
                    '             Default value:  ''Auto''.'                                             ...
                    '             Applicability:  Variable-step time-continuous solvers.'                ...
                    ' '                                                                                  ...
                    ' MaxStep   - Specifies the largest time step the ODE solver may take.'              ...
                    '             Assignable values:'                                                    ...
                    '               * ''Auto'' - An automatic choice.'                                   ...
                    '               * A positive real > ''MinStep''.'                                    ...
                    '             Default value:  ''Auto'' (1/15 of the simulation interval).'           ...
                    '             Applicability:  Variable-step time-continuous solvers.'                ...
                    ' '                                                                                  ...
                    ' InitialStep - Specifies the initial step the ODE solver should start with.'        ...
                    '             Assignable values:'                                                    ...
                    '               * ''Auto'' - An automatic choice.'                                   ...
                    '               * A positive real such that ''MinStep'' <= ''InitialStep'' <= ''MaxStep''.' ...
                    '             Default value:  ''Auto''.'                                             ...
                    '             Applicability:  Variable-step time-continuous solvers.'                ...
                    ' '                                                                                  ...
                    ' MaxOrder  - Specifies the order of the Numerical Differentiation Formulas'         ...
                    '             (NDF) used by ode15s.'                                                 ...
                    '             Assignable values:'                                                    ...
                    '               * 1, 2, 3, 4 or 5.'                                                  ...
                    '             Default value:  5.'                                                    ...
                    '             Applicability:  ode15s.'                                               ...
                    ' '                                                                                  ...
                    ' FixedStep - Step size used by a fixed-step time-continuous solver.'                ...
                    '             Assignable values:'                                                    ...
                    '               * ''Auto'' - An automatic choice.'                                   ...
                    '               * A real such that 0 < ''FixedStep'' <= 1.'                          ...
                    '             Default value:  ''Auto'' (1/15 of the simulation interval).'           ...
                    '             Applicability:  Fixed-step time-continuous solvers.'                   ...
                    ' '                                                                                  ...
                    ' See the manual for more details on the ODE solver properties.'                     ...
                    };
            case 5
                txt = {' Help on gradient/Jacobian computation properties for IDNLGREY models.'             ...
                    ' '                                                                                  ...
                    ' The property ''Algorithm.GradientOptions'' contains the following fields'          ...
                    ' which can be individually accessed by GET and SET as well as via subscripting:'    ...
                    ' '                                                                                  ...
                    ' DiffScheme    - Method to use for computing numerical derivatives with'            ...
                    '                 respect to the components of the parameters and/or'                ...
                    '                 the initial state(s) in order to form the Jacobian.'               ...
                    '                 Assignable values:'                                                ...
                    '                   * ''Auto'' - An automatic choice of the following.'              ...
                    '                   * ''Central approximation''.'                                    ...
                    '                   * ''Forward approximation''.'                                    ...
                    '                   * ''Backward approximation''.'                                   ...
                    '                 Default value:  ''Auto''.'                                         ...
                    ' '                                                                                  ...
                    ' DiffMinChange - Smallest allowed parameter perturbation when computing'            ...
                    '                 numerical derivatives:'                                            ...
                    '                 Assignable values:'                                                ...
                    '                   * A positive real < ''DiffMaxChange''.'                          ...
                    '                 Default value:  0.01*sqrt(eps).'                                   ...
                    ' '                                                                                  ...
                    ' DiffMaxChange - Largest allowed parameter perturbation when computing'             ...
                    '                 numerical derivatives:'                                            ...
                    '                 Assignable values:'                                                ...
                    '                   * A positive real > ''DiffMinChange''.'                          ...
                    '                 Default value:  Inf.'                                              ...
                    ' '                                                                                  ...
                    ' GradientType  - Method to use when computing derivatives (Jacobian) of the'        ...
                    '                 parameters or the initial states to be estimated.'                 ...
                    '                 Assignable values:'                                                ...
                    '                   * ''Auto''    - An automatic choice of the following.'           ...
                    '                   * ''Basic''   - All numerical derivatives required to'           ...
                    '                                 form each column of the Jacobian are'              ...
                    '                                 individually computed.'                            ...
                    '                   * ''Refined'' - All numerical derivatives required to'           ...
                    '                                 form each column of the Jacobian are'              ...
                    '                                 simultaneously computed.'                          ...
                    '                 Default value:  ''Auto''.'                                         ...
                    ' '                                                                                  ...
                    ' See the manual for more details on gradient/Jacobian computations.'                ...
                    };
            case 6
                txt = {' Help on advanced parameter estimation algorithm properties for IDNLGREY'           ...
                    ' models.'                                                                           ...
                    ' '                                                                                  ...
                    ' The property ''Algorithm.EstimationOptions.Advanced'' contains the following'      ...
                    ' fields which can be individually accessed by GET and SET as well as via'           ...
                    ' subscripting:'                                                                     ...
                    ' '                                                                                  ...
                    ' GnPinvConst    - Singular values of the Jacobian smaller than'                     ...
                    '                  GnPinvConst*max(size(J))*norm(J)*eps are discarded when the search'  ...
                    '                  direction is computed. Closer to 0 singular values are'           ...
                    '                  included if this value is decreased.'                             ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive real.'                                             ...
                    '                  Default value:  1e4.'                                             ...
                    ' '                                                                                  ...
                    ' MinParChange   - Smallest allowed parameter update per iteration.'                 ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive real.'                                             ...
                    '                  Default value:  1e-16.'                                           ...
                    ' '                                                                                  ...
                    ' StepReduction  - In the line search algorithm, the suggested parameter'            ...
                    '                  update is reduced by the factor ''StepReduction'' in each'        ...
                    '                  try until either ''MaxBisections'' tries have been carried'       ...
                    '                  out or a lower value of the criterion function has been'          ...
                    '                  obtained.'                                                        ...
                    '                  Assignable values:'                                               ...
                    '                    * A real > 1.'                                                  ...
                    '                  Default value:  2. '                                              ...
                    '                  Applicability:  for search methods ''gn'', ''gna'' and ''grad''.' ...
                    ' '                                                                                  ...
                    ' MaxBisections  - The maximum number of bisections performed by the line'           ...
                    '                  search algorithm along the search direction (number of rotations '...
                    '                  of search vector for LM).'                                        ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive integer.'                                          ...
                    '                  Default value:  25. '                                             ...
                    '                  Applicability:  for search methods ''gn'', ''lm'', ''gna'' and ''grad''.' ...
                    ' '                                                                                  ...
                    ' LMStartValue   - The level of "regularization" to start with when using the'       ...
                    '                  Levenberg-Marquardt (lm) search method.'                          ...
                    '                  Assignable values:'                                               ...
                    '                    * A strictly positive real.'                                    ...
                    '                  Default value:  0.001. '                                          ...
                    '                  Applicability:  for search method ''lm''.'                        ...
                    ' '                                                                                  ...
                    ' LMStep         - The level of LM "regularization" to try next in order to'         ...
                    '                  get a lower value of the criterion function. The level of'        ...
                    '                  "regularization" is ''LMStep'' times the previous level. At'      ...
                    '                  the start of a new iteration the level of "regularization"'       ...
                    '                  is computed as 1/''LMStep'' times the previous level.'            ...
                    '                  Assignable values:'                                               ...
                    '                    * A real > 1.'                                                  ...
                    '                  Default value:  10. '                                             ...
                    '                  Applicability:  for search method ''lm''.'                        ...
                    ' '                                                                                  ...
                    ' RelImprovement - The iterations are stopped if the relative improvement'           ...
                    '                  of the criterion function is less than ''RelImprovement''.'       ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive real.'                                             ...
                    '                  Default value:  0. '                                              ...
                    '                  Applicability:  for all search methods but ''lsqnonlin''.'        ...
                    ' '                                                                                  ...
                    ' MaxFunEvals    - The iterations are stopped if the number of calls to the'         ...
                    '                  model file exceeds this value.'                                   ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive integer.'                                          ...
                    '                  Default value:  Inf. '                                            ...
                    };
            case 7
                txt = {' Help on properties associated with the estimation result for'                      ...
                    ' IDNLGREY models.'                                                                  ...
                    ' '                                                                                  ...
                    ' The property ''EstimationInfo'' contains the following fields:'                    ...
                    ' '                                                                                  ...
                    ' Status          - Describes whether the model was estimated or not. A string.'     ...
                    ' Method          - How the model was derived. A string.'                            ...
                    ' LossFcn         - The value of the loss function, det(E''*E/N), where E is the'      ...
                    '                   residual error matrix (one column for each output) and N is the' ...
                    '                   total number of samples.'                                        ...
                    ' FPE             - The value of Akaike''s Final Prediction Error.'                  ...
                    ' DataName        - Name of the data set for which the model was estimated.'         ...
                    ' DataLength      - Length of the data set used for the model estimation.'           ...
                    ' DataTs          - The sampling interval of the estimation data set.'               ...
                    ' DataDomain      - ''Time'' - the domain of the data (''Frequency'' is'             ...
                    '                   currently not supported.)'                                       ...
                    ' DataInterSample - The intersample behavior of the input estimation data:'          ...
                    '                   ''zoh'' means ''zero-order-hold'' (piecewise constant);'         ...
                    '                   ''foh'' means ''first-order-hold'' (piecewise linear).'          ...
                    ' WhyStop         - The reason for terminating the parameter estimation.'            ...
                    ' UpdateNorm      - The norm of the search vector (GN-vector) in the last'           ...
                    '                   iteration. Not provided if ''lsqnonlin'' is used as search'      ...
                    '                   method.'                                                         ...
                    ' LastImprovement - The criterion improvement in the last iteration, measured'       ...
                    '                   in %. Not provided if ''lsqnonlin'' is used as search method.'   ...
                    ' Iterations      - Number of iterations performed by the estimation algorithm.'     ...
                    ' InitialGuess    - Structure with the fields InitialStates and Parameters'          ...
                    '                   specifying the values of these quantities before the last'       ...
                    '                   estimation run.'                                                 ...
                    ' Warning         - Provides information about warnings obtained during the'         ...
                    '                   parameter estimation. A string.'                                 ...
                    ' EstimationTime  - Elapsed time for the estimation.'                                ...
                    };
        end
    case 'customregressors'
        txt = {' Help on properties of the CUSTOMREG object.'...
            ' (For information how to use and construct custom regressors, type ''idprops idnlarx customregressor''.'...
            ' '...
            ' CUSTOMREG is an object that is used to house information about customregressors in idnlarx models.'...
            ' It is typically set as in the example'...
            ' cr = @(x,y) x*y'...
            ' C = customreg(cr,{''y1'',''u1''},[2 3])'...
            ' to create the customregressor ''y1(t-2)*u1(t-3)''.'...
            ' '...
            ' PROPERTIES:'...
            ' Function        - a function handle (or a string that is a function name) that represents a function.'...
            '                   In the example above returned as @(x,y) x*y.'...
            ' Arguments       - The input/output names associated with the arguments of the function.'...
            '                   {''y1'',''u1''} in the above example.'...
            ' Delays          - The delays of the signals, associated with the arguments.'...
            '                   [2 3] above.'...
            ' Vectorized      - Default false (or 0). Set to true (or 1) to mark that function computations'...
            '                   in Function are carried out in vectorized form when called with vector arguments.'...
            ' '...
            };
end

% Display the result.
disp(' ');
disp(char(txt));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function txt = algtext

txt ={' Help on algorithm properties for IDNLARX and IDNLHW models.'                     ...
    ' '                                                                                  ...
    ' The property ''Algorithm'' contains the following fields which can be'             ...
    ' individually accessed by GET and SET as well as via subscripting:'                 ...
    ' '                                                                                  ...
    ' SearchMethod      - The search method used by the iterative search algorithm.'     ...
    '                     Assignable values:'                                            ...
    '                       * ''Auto''      - An automatic choice of the following.'     ...
    '                       * ''gn''        - Gauss-Newton method.'                      ...
    '                       * ''gna''       - Adaptive Gauss-Newton method.'             ...
    '                       * ''grad''      - A gradient method.'                        ...
    '                       * ''lm''        - Levenberg-Marquardt method.'               ...
    '                       * ''lsqnonlin'' - Trust Region approach, provided'  ...
    '                                         by Optimization Toolbox.'                ...
    '                     Default value:  ''Auto''.'                                     ...
    '                     Applicability:  ''lsqnonlin'' requires Optimization Toolbox.'  ...
    ' '...
    ' Criterion         - Minimization criterion for iterative search (see Section 7.4, Ljung (1999))'...
    '                     Assignable values:'                                              ...
    '                       * ''det''    - Determinant criterion '...
    '                                      det(E''*E) is minimized (with some normalization), '...
    '                                      where E is the prediction error matrix  '     ...
    '                                      (see Eqn 7.96, Ljung (1999)).              '  ...
    '                       * ''trace''  - Trace criterion ' ....
    '                                      Weighted least squares: trace(E''*E*W) is minimized '...
    '                                      (with some normalization), where E is ' ...
    '                                      the matrix of prediction errors over the available time ' ...
    '                                      span. Weighting W is specified through the ''Weighting'' '...
    '                                      Algorithm property.'                                      ...
    ' '...
    ' Weighting         - Weighting W applied to trace minimization. When Criterion = ''Trace'', ' ...
    '                     trace(E''*E*W)  is minimized.' ...
    '                     Weighting should be specified as a positive semi-definite symmetric matrix. '     ...
    '                     It can be used to specify relative importance of outputs in multi-output '...
    '                     models (or reliability of corresponding data) ; for such a use, '...
    '                     specify a diagonal matrix for Weighting. Weighting is not useful in '   ...
    '                     single-output models. By default, W is an identity matrix of size equal'...
    '                     to number of model outputs (implying all outputs are to be given equal '...
    '                     importance during estimation).'                                         ...
    '                     NOTE: Weighting is not used when an IDNLARX model contains NEURALNET or '... 
    '                     TREEPARTITION as one of the nonlinearities. In those cases, the estimations are '...
    '                     performed separately for each output and relative weighting of prediction errors '...
    '                     is not used.                                                                     '...
    ' '...
    ' MaxSize           - The size (number of elements) of the largest matrix to be'...
    '                     formed by the algorithm. If larger matrices are needed,'...
    '                     loops will be used.'...
   '                      Use this value for memory/speed trade-off.'...
    '                     Note: The original data matrix of u and y must be smaller'...
    '                     than MaxSize. Assignable values:'...
    '                       * Any positive integer.'...
    '                     Default: the number determined by the file IDMSIZE.M.'...
    ' '...                                                                               
    ' MaxIter           - Maximum number of iterations to perform by the estimation'     ...
    '                     algorithm.'                                                    ...
    '                     Assignable values:'                                            ...
    '                       * A positive integer.'                                       ...
    '                     Default value:  20.'                                           ...
    ' '                                                                                  ...
    ' Tolerance         - Tolerance stating when to terminate the iterative search.'     ...
    '                     When the expected improvement is less than ''Tolerance'' %'    ...
    '                     the iterations are terminated.'                                ...
    '                     Assignable values:'                                            ...
    '                       * A positive real.'                                          ...
    '                     Default value:  0.01.'                                         ...
    ' '                                                                                  ...
    ' LimitError        - A value that limits the influence of large residuals'          ...
    '                     (robustification). Residuals (model errors) with a value'      ...
    '                     larger than ''LimitError''*(estimated residual standard'       ...
    '                     deviation) will carry a linear rather than a quadratic'        ...
    '                     cost.'                                                         ...
    '                     Assignable values:'                                            ...
    '                       * A positive real.'                                          ...
    '                     Default value:  0. (0 means no robustification.)'              ...
    ' '                                                                                  ...
    ' Display           - Determines the amount of information to display on the'        ...
    '                     screen during the execution of the parameter estimation'       ...
    '                     algorithm.'                                                    ...
    '                     Assignable values:'                                            ...
    '                       * ''Off''  - No information displayed.'                      ...
    '                       * ''On''   - Information about criterion values displayed.'  ...
    '                     Default value:  ''Off''.'                                      ...
    ' '...
    ' IterWavenet       - Controls iterative estimation of wavenet used in idnlarx '     ...
    '                     models with Focus=''Prediction''.'...
    '                     Assignable values:' ...  
    '                       * ''Auto'' - First estimation is non iterative, '...
    '                                    but the following estimations are iterative (default). ' ...
    '                       * ''Off''  - Never do iterative estimation.'                 ...
    '                       * ''On''   - Always do iterative estimation.'                ...
    ' '...
    ' Advanced          - A structure that contains further estimation-related'          ...
    '                     algorithmic details.'                                          ...
    '                     Type ''idprops idnlarx Algorithm.Advanced'' for details.'      ...
    ' '                                                                                  ...
    ' The algorithm properties can be GET and SET by sub-referencing using autofill.'    ...
    };

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function txt = estinfo
txt ={' Help on properties associated with the estimation result for'                    ...
    ' IDNLARX and IDNLHW models.'                                                        ...
    ' '                                                                                  ...
    ' The property ''EstimationInfo'' contains the following fields:'                    ...
    ' '                                                                                  ...
    ' Status          - Describes whether the model was estimated or not. A string.'     ...
    ' Method          - How the model was derived. A string.'                            ...
    ' LossFcn         - The value of the loss function, det(E''*E/N), where E is the'    ...
    '                   residual error matrix (one column for each output) and N is the '...
    '                   total number of samples.'                                        ...
    ' FPE             - The value of Akaike''s Final Prediction Error.'                  ...
    ' DataName        - Name of the data set for which the model was estimated.'         ...
    ' DataLength      - Length of the data set used for the model estimation.'           ...
    ' DataTs          - The sampling interval of the estimation data set.'               ...
    ' DataDomain      - ''Time'' - the domain of the data (''Frequency'' is'             ...
    '                   currently not supported.)'                                       ...
    ' DataInterSample - The intersample behavior of the input estimation data:'          ...
    '                   ''zoh'' means ''zero-order-hold'' (piecewise constant);'         ...
    '                   ''foh'' means ''first-order-hold'' (piecewise linear).'          ...
    ' WhyStop         - The reason for terminating the parameter estimation.'            ...
    ' UpdateNorm      - The norm of the search vector (GN-vector) in the last'           ...
    '                   iteration. Not provided if ''lsqnonlin'' is used as search'      ...
    '                   method.'                                                         ...
    ' LastImprovement - The criterion improvement in the last iteration, measured'       ...
    '                   in %. Not provided if ''lsqnonlin'' is used as search method.'   ...
    ' Iterations      - Number of iterations performed by the estimation algorithm.'     ...
    ' Warning         - Provides information about warnings obtained during the'         ...
    '                   parameter estimation. A string.'                                 ...
    ' InitRandnState  - The type and state of the random number stream used for'         ...
    '                   randomization of the initial parameter vector. To reproduce '    ...
    '                   results, reset the random number stream to stored value as '     ...
    '                   follows:'                                                        ...
    '                       stream = RandStream(InitRandnState.Type); '                  ...
    '                       RandStream.setDefaultStream(stream); '                       ...
    '                       stream.State = InitRandnState.State; '                       ...
    ' EstimationTime  - Elapsed time for the estimation.'                                ...
    ' '...
    };

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%55555
function txt = algadv
 txt = {' Help on advanced parameter estimation algorithm properties for IDNLARX'           ...
                    ' and IDNLHW models.'                                                                           ...
                    ' '                                                                                  ...
                    ' The property ''Algorithm.Advanced'' contains the following'      ...
                    ' fields which can be individually accessed by GET and SET as well as via'           ...
                    ' subscripting:'                                                                     ...
                    ' '                                                                                  ...
                    ' GnPinvConst    - Singular values of the Jacobian smaller than'                     ...
                    '                  GnPinvConst*max(size(J))*norm(J)*eps are discarded when the search'  ...
                    '                  direction is computed. Closer to 0 singular values are'           ...
                    '                  included if this value is decreased.'                             ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive real.'                                             ...
                    '                  Default value:  1e4.'                                             ...
                    ' '                                                                                  ...
                    ' MinParChange   - Smallest allowed parameter update per iteration.'                 ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive real.'                                             ...
                    '                  Default value:  1e-16.'                                           ...
                    ' '                                                                                  ...
                    ' StepReduction  - In the line search algorithm, the suggested parameter'            ...
                    '                  update is reduced by the factor ''StepReduction'' in each'        ...
                    '                  try until either ''MaxBisections'' tries have been carried'       ...
                    '                  out or a lower value of the criterion function has been'          ...
                    '                  obtained.'                                                        ...
                    '                  Assignable values:'                                               ...
                    '                    * A real > 1.'                                                  ...
                    '                  Default value:  2. '                                              ...
                    '                  Applicability:  for search methods ''gn'', ''gna'' and ''grad''.' ...
                    ' '                                                                                  ...
                    ' MaxBisections  - The maximum number of bisections performed by the line'           ...
                    '                  search algorithm along the search direction (number of rotations '...
                    '                  of search vector for LM).'                                        ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive integer.'                                          ...
                    '                  Default value:  10. '                                             ...
                    '                  Applicability:  for search methods ''gn'', ''lm'', ''gna'' and ''grad''.' ...
                    ' '                                                                                  ...
                    ' LMStartValue   - The level of "regularization" to start with when using the'       ...
                    '                  Levenberg-Marquardt (lm) search method.'                          ...
                    '                  Assignable values:'                                               ...
                    '                    * A strictly positive real.'                                    ...
                    '                  Default value:  0.001. '                                          ...
                    '                  Applicability:  for search method ''lm''.'                        ...
                    ' '                                                                                  ...
                    ' LMStep         - The level of LM "regularization" to try next in order to'         ...
                    '                  get a lower value of the criterion function. The level of'        ...
                    '                  "regularization" is ''LMStep'' times the previous level. At'      ...
                    '                  the start of a new iteration the level of "regularization"'       ...
                    '                  is computed as 1/''LMStep'' times the previous level.'            ...
                    '                  Assignable values:'                                               ...
                    '                    * A real > 1.'                                                  ...
                    '                  Default value:  10. '                                             ...
                    '                  Applicability:  for search method ''lm''.'                        ...
                    ' '                                                                                  ...
                    ' RelImprovement - The iterations are stopped if the relative improvement'           ...
                    '                  of the criterion function is less than ''RelImprovement''.'       ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive real.'                                             ...
                    '                  Default value:  0. '                                              ...
                    '                  Applicability:  for all search methods but ''lsqnonlin''.'        ...
                    ' '                                                                                  ...
                    ' MaxFunEvals    - The iterations are stopped if the number of calls to the'         ...
                    '                  model file exceeds this value.'                                   ...
                    '                  Assignable values:'                                               ...
                    '                    * A positive integer.'                                          ...
                    '                  Default value:  Inf. '                                            ...
                    };
