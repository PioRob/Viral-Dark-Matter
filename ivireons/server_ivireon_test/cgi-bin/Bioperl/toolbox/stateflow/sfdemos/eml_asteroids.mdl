Model {
  Name			  "eml_asteroids"
  Version		  7.6
  MdlSubVersion		  0
  GraphicalInterface {
    NumRootInports	    0
    NumRootOutports	    0
    ParameterArgumentNames  ""
    ComputedModelVersion    "1.1695"
    NumModelReferences	    0
    NumTestPointedSignals   0
  }
  Description		  "Embedded MATLAB fixed point version of the classic Asteroids game.\n\nThe classic Asteroids game. Ev"
  "en though it is purely fictitious (and not even physically\ncorrect), it is nevertheless a complicated dynamic syste"
  "m including collisions,\nrotating polygons and gaming logic.\n\nThis version is using Embedded MATLAB and fixed poin"
  "t to demonstrate that all the\ncomputations can be done without use of floating point math. Only the \"Plot\" block\n"
  "in this model contains doubles for displaying and figure handling.\n\nThe orange blocks are the core of the simulati"
  "on and the yellow block is responsible for\ndisplaying the results. The blue blocks are managing the input controls,"
  " i.e. the space\nship rotation, thrust and firing.\n\nExcept for the \"Plot\" visualization block's use of plotting "
  "routines, all of the\nEmbedded MATLAB function blocks in this model support code generation with\nReal-Time Workshop"
  " and Real-Time Workshop Embedded Coder.\n\n  Demo Requirements\n\nDuring this demonstration, Simulink generates code"
  " for the simulation in a Simulink\nproject directory created in the current working directory (pwd). If you do not w"
  "ant\nto affect the current directory (or if you cannot) generate files in this directory, you\nshould change your wo"
  "rking directory.\n"
  SavedCharacterEncoding  "windows-1252"
  SaveDefaultBlockParams  on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  DataTypeOverride	  "UseLocalSettings"
  DataTypeOverrideAppliesTo "AllNumericTypes"
  MinMaxOverflowLogging	  "UseLocalSettings"
  MinMaxOverflowArchiveMode "Overwrite"
  MaxMDLFileLineLength	  120
  CloseFcn		  "rtwprivate ssgencode ModelCloseRequest asteroids_fixpt2"
  StopFcn		  "obj = findobj( 'Tag', 'asteroids_fig');\nif ~isempty(obj),\n   close(obj);\nend;"
  Created		  "Tue Apr 20 14:20:44 2004"
  Creator		  "The MathWorks Inc."
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Wed Jul  7 21:18:39 2010"
  RTWModifiedTimeStamp	  199680352
  ModelVersionFormat	  "1.%<AutoIncrement:1695>"
  ConfigurationManager	  "None"
  SampleTimeColors	  off
  SampleTimeAnnotations	  off
  LibraryLinkDisplay	  "none"
  WideLines		  off
  ShowLineDimensions	  off
  ShowPortDataTypes	  on
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  ShowStorageClass	  off
  ShowTestPointIcons	  on
  ShowSignalResolutionIcons on
  ShowViewerIcons	  on
  SortedOrder		  off
  ExecutionContextIcon	  off
  ShowLinearizationAnnotations on
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  SimulationMode	  "normal"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  AccelSystemTargetFile	  "accel.tlc"
  AccelTemplateMakefile	  "accel_default_tmf"
  AccelMakeCommand	  "make_rtw"
  TryForcingSFcnDF	  off
  RecordCoverage	  off
  CovPath		  "/"
  CovSaveName		  "covdata"
  CovMetricSettings	  "dw"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  CovForceBlockReductionOff on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeVarName	  "covCumulativeData"
  CovCumulativeReport	  off
  CovReportOnPause	  on
  CovModelRefEnable	  "Off"
  CovExternalEMLEnable	  off
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock off
  BufferReuse		  on
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      1
      Version		      "1.10.0"
      Array {
	Type			"Handle"
	Dimension		8
	Simulink.SolverCC {
	  $ObjectID		  2
	  Version		  "1.10.0"
	  StartTime		  "0.0"
	  StopTime		  "inf"
	  AbsTol		  "auto"
	  FixedStep		  "1"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ZcThreshold		  "auto"
	  ConsecutiveZCsStepRelTol "10*128*eps"
	  MaxConsecutiveZCs	  "1000"
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  MaxConsecutiveMinStep	  "1"
	  RelTol		  "1e-3"
	  SolverMode		  "Auto"
	  ConcurrentTasks	  off
	  Solver		  "FixedStepDiscrete"
	  SolverName		  "FixedStepDiscrete"
	  SolverJacobianMethodControl "auto"
	  ShapePreserveControl	  "DisableAll"
	  ZeroCrossControl	  "UseLocalSettings"
	  ZeroCrossAlgorithm	  "Nonadaptive"
	  AlgebraicLoopSolver	  "TrustRegion"
	  SolverResetMethod	  "Fast"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  InsertRTBMode		  "Whenever possible"
	}
	Simulink.DataIOCC {
	  $ObjectID		  3
	  Version		  "1.10.0"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveCompleteFinalSimState off
	  SaveFormat		  "Structure"
	  SaveOutput		  on
	  SaveState		  off
	  SignalLogging		  on
	  DSMLogging		  on
	  InspectSignalLogs	  off
	  SaveTime		  on
	  ReturnWorkspaceOutputs  off
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsout"
	  DSMLoggingName	  "dsmout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  ReturnWorkspaceOutputsName "out"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  4
	  Version		  "1.10.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    4
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "NoFixptDivByZeroProtection"
	    Cell		    "OptimizeModelRefInitCode"
	    PropName		    "DisabledProps"
	  }
	  BlockReduction	  on
	  BooleanDataType	  on
	  ConditionallyExecuteInputs on
	  InlineParams		  off
	  UseIntDivNetSlope	  off
	  UseSpecifiedMinMax	  off
	  InlineInvariantSignals  on
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnhancedBackFolding	  off
	  StrengthReduction	  off
	  ExpressionFolding	  on
	  BooleansAsBitfields	  off
	  BitfieldContainerType	  "uint_T"
	  EnableMemcpy		  on
	  MemcpyThreshold	  64
	  PassReuseOutputArgsAs	  "Structure reference"
	  ExpressionDepthLimit	  2147483647
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  on
	  NoFixptDivByZeroProtection off
	  EfficientFloat2IntCast  off
	  EfficientMapNaN2IntZero off
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	  MaxStackSize		  "Inherit from target"
	  BufferReusableBoundary  off
	  SimCompilerOptimization "Off"
	  AccelVerboseBuild	  off
	}
	Simulink.DebuggingCC {
	  $ObjectID		  5
	  Version		  "1.10.0"
	  RTPrefix		  "error"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  SignalInfNanChecking	  "none"
	  SignalRangeChecking	  "none"
	  ReadBeforeWriteMsg	  "UseLocalSettings"
	  WriteAfterWriteMsg	  "UseLocalSettings"
	  WriteAfterReadMsg	  "UseLocalSettings"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  SaveWithDisabledLinksMsg "warning"
	  SaveWithParameterizedLinksMsg	"none"
	  CheckSSInitialOutputMsg on
	  UnderspecifiedInitializationDetection	"Classic"
	  MergeDetectMultiDrivingBlocksExec "none"
	  CheckExecutionContextPreStartOutputMsg on
	  CheckExecutionContextRuntimeOutputMsg	on
	  SignalResolutionControl "TryResolveAllWithWarning"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  TimeAdjustmentMsg	  "none"
	  MaxConsecutiveZCsMsg	  "error"
	  MaskedZcDiagnostic	  "warning"
	  IgnoredZcDiagnostic	  "warning"
	  SolverPrmCheckMsg	  "warning"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskDSMMsg	  "warning"
	  MultiTaskCondExecSysMsg "none"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  SigSpecEnsureSampleTimeMsg "none"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterUnderflowMsg	  "none"
	  ParameterPrecisionLossMsg "warning"
	  ParameterTunabilityLossMsg "warning"
	  FixptConstUnderflowMsg  "none"
	  FixptConstOverflowMsg	  "none"
	  FixptConstPrecisionLossMsg "none"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  FcnCallInpInsideContextMsg "Use local settings"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  BusObjectLabelMismatch  "none"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceMultiInstanceNormalModeStructChecksumCheck "error"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	  ModelReferenceExtraNoncontSigs "error"
	  StateNameClashWarn	  "warning"
	  SimStateInterfaceChecksumMismatchMsg "warning"
	  InitInArrayFormatMsg	  "warning"
	  StrictBusMsg		  "ErrorLevel1"
	  BusNameAdapt		  "WarnAndRepair"
	  NonBusSignalsTreatedAsBus "none"
	  LoggingUnavailableSignals "error"
	  BlockIODiagnostic	  "none"
	  SFUnusedDataAndEventsDiag "warning"
	  SFUnexpectedBacktrackingDiag "warning"
	  SFInvalidInputDataAccessInChartInitDiag "warning"
	  SFNoUnconditionalDefaultTransitionDiag "warning"
	  SFTransitionOutsideNaturalParentDiag "warning"
	}
	Simulink.HardwareCC {
	  $ObjectID		  6
	  Version		  "1.10.0"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdBitPerFloat	  32
	  ProdBitPerDouble	  64
	  ProdBitPerPointer	  32
	  ProdLargestAtomicInteger "Char"
	  ProdLargestAtomicFloat  "None"
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "32-bit Generic"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetBitPerFloat	  32
	  TargetBitPerDouble	  64
	  TargetBitPerPointer	  32
	  TargetLargestAtomicInteger "Char"
	  TargetLargestAtomicFloat "None"
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  off
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  7
	  Version		  "1.10.0"
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  CheckModelReferenceTargetMessage "error"
	  EnableParallelModelReferenceBuilds off
	  ParallelModelReferenceMATLABWorkerInit "None"
	  ModelReferenceNumInstancesAllowed "Multi"
	  PropagateVarSize	  "Infer from blocks in model"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	  PropagateSignalLabelsOutOfModel off
	  SupportModelReferenceSimTargetCustomCode off
	}
	Simulink.SFSimCC {
	  $ObjectID		  8
	  Version		  "1.10.0"
	  SFSimEnableDebug	  off
	  SFSimOverflowDetection  on
	  SFSimEcho		  on
	  SimBlas		  on
	  SimCtrlC		  on
	  SimExtrinsic		  on
	  SimIntegrity		  on
	  SimUseLocalCustomCode	  off
	  SimParseCustomCode	  off
	  SimBuildMode		  "sf_incremental_build"
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  9
	  Version		  "1.10.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    1
	    Cell		    "IncludeHyperlinkInReport"
	    PropName		    "DisabledProps"
	  }
	  SystemTargetFile	  "grt.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  GenerateMakefile	  on
	  TemplateMakefile	  "grt_default_tmf"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ConfigAtBuild		  off
	  RTWUseLocalCustomCode	  off
	  RTWUseSimCustomCode	  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  TargetLang		  "C"
	  IncludeBusHierarchyInRTWFileBlockHierarchyMap	off
	  IncludeERTFirstTime	  on
	  GenerateTraceInfo	  off
	  GenerateTraceReport	  off
	  GenerateTraceReportSl	  off
	  GenerateTraceReportSf	  off
	  GenerateTraceReportEml  off
	  GenerateCodeInfo	  off
	  GenerateSLWebview	  off
	  RTWCompilerOptimization "Off"
	  CheckMdlBeforeBuild	  "Off"
	  CustomRebuildMode	  "OnUpdate"
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      10
	      Version		      "1.10.0"
	      Array {
		Type			"Cell"
		Dimension		9
		Cell			"IgnoreCustomStorageClasses"
		Cell			"InsertBlockDesc"
		Cell			"SFDataObjDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		PropName		"DisabledProps"
	      }
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IgnoreTestpoints	      off
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      MATLABFcnDesc	      off
	      IncDataTypeInIds	      off
	      MangleLength	      1
	      CustomSymbolStrGlobalVar "$R$N$M"
	      CustomSymbolStrType     "$N$R$M"
	      CustomSymbolStrField    "$N$M"
	      CustomSymbolStrFcn      "$R$N$M$F"
	      CustomSymbolStrFcnArg   "rt$I$N$M"
	      CustomSymbolStrBlkIO    "rtb_$N$M"
	      CustomSymbolStrTmpVar   "$N$M"
	      CustomSymbolStrMacro    "$R$N$M"
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      InsertPolySpaceComments off
	      SimulinkBlockComments   on
	      MATLABSourceComments    off
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	      UseSimReservedNames     off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      11
	      Version		      "1.10.0"
	      Array {
		Type			"Cell"
		Dimension		11
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportNonInlinedSFcns"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		PropName		"DisabledProps"
	      }
	      TargetFcnLib	      "ansi_tfl_tmw.mat"
	      TargetLibSuffix	      ""
	      TargetPreCompLibLocation ""
	      TargetFunctionLibrary   "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      ERTMultiwordTypeDef     "System defined"
	      ERTCodeCoverageTool     "None"
	      ERTMultiwordLength      256
	      MultiwordLength	      2048
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      GenerateTestInterfaces  off
	      IsPILTarget	      off
	      ModelReferenceCompliant on
	      ParMdlRefBuildCompliant on
	      CompOptLevelCompliant   on
	      IncludeMdlTerminateFcn  on
	      GeneratePreprocessorConditionals "Disable all"
	      CombineOutputUpdateFcns off
	      CombineSignalStateStructs	off
	      SuppressErrorStatus     off
	      ERTFirstTimeCompliant   off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      SupportVariableSizeSignals off
	      EnableShiftOperators    on
	      ParenthesesLevel	      "Nominal"
	      PortableWordSizes	      off
	      ModelStepFunctionPrototypeControlCompliant off
	      CPPClassGenCompliant    off
	      AutosarCompliant	      off
	      UseMalloc		      off
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      ExtModeIntrfLevel	      "Level1"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      CurrentDlgPage	      "Data Import//Export"
      ConfigPrmDlgPosition    " [ 360, 185, 1240, 815 ] "
    }
    PropName		    "ConfigurationSets"
  }
  Simulink.ConfigSet {
    $PropName		    "ActiveConfigurationSet"
    $ObjectID		    1
  }
  BlockDefaults {
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
    BlockRotation	    0
    BlockMirror		    off
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    UseDisplayTextAsClickCallback off
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  BlockParameterDefaults {
    Block {
      BlockType		      Clock
      DisplayTime	      off
    }
    Block {
      BlockType		      Constant
      Value		      "1"
      VectorParams1D	      on
      SamplingMode	      "Sample based"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Inherit from 'Constant value'"
      LockScale		      off
      SampleTime	      "inf"
      FramePeriod	      "inf"
      PreserveConstantTs      off
    }
    Block {
      BlockType		      DataTypeConversion
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Inherit via back propagation"
      LockScale		      off
      ConvertRealWorld	      "Real World Value (RWV)"
      RndMeth		      "Zero"
      SaturateOnIntegerOverflow	on
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Demux
      Outputs		      "4"
      DisplayOption	      "none"
      BusSelectionMode	      off
    }
    Block {
      BlockType		      DotProduct
      SampleTime	      "-1"
      InputSameDT	      on
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Same as first input"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Block {
      BlockType		      Inport
      Port		      "1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      LatchByDelayingOutsideSignal off
      LatchInputForFeedbackSignals off
      Interpolate	      on
    }
    Block {
      BlockType		      Logic
      Operator		      "AND"
      Inputs		      "2"
      IconShape		      "rectangular"
      AllPortsSameDT	      on
      OutDataTypeStr	      "Inherit: Logical (see Configuration Parameters: Optimization)"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      Outport
      Port		      "1"
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: auto"
      LockScale		      off
      BusOutputAsStruct	      off
      PortDimensions	      "-1"
      VarSizeSig	      "Inherit"
      SampleTime	      "-1"
      SignalType	      "auto"
      SamplingMode	      "auto"
      SourceOfInitialOutputValue "Dialog"
      OutputWhenDisabled      "held"
      InitialOutput	      "[]"
    }
    Block {
      BlockType		      "S-Function"
      FunctionName	      "system"
      SFunctionModules	      "''"
      PortCounts	      "[]"
      SFunctionDeploymentMode off
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      "FromPortIcon"
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      TreatAsAtomicUnit	      off
      CheckFcnCallInpInsideContextMsg off
      SystemSampleTime	      "-1"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      DataTypeOverrideAppliesTo	"AllNumericTypes"
      MinMaxOverflowLogging   "UseLocalSettings"
      Variant		      off
      GeneratePreprocessorConditionals off
    }
    Block {
      BlockType		      Switch
      Criteria		      "u2 >= Threshold"
      Threshold		      "0"
      InputSameDT	      on
      OutMin		      "[]"
      OutMax		      "[]"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
      LockScale		      off
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	on
      ZeroCross		      on
      SampleTime	      "-1"
      AllowDiffInputSizes     off
    }
    Block {
      BlockType		      Terminator
    }
    Block {
      BlockType		      UnitDelay
      X0		      "0"
      InputProcessing	      "Inherited"
      SampleTime	      "1"
      StateMustResolveToSignalObject off
      RTWStateStorageClass    "Auto"
    }
  }
  System {
    Name		    "eml_asteroids"
    Location		    [474, 155, 1458, 830]
    Open		    on
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
    TiledPageScale	    1
    ShowPageBoundaries	    off
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    SIDHighWatermark	    37
    Block {
      BlockType		      Reference
      Name		      "Compare\nTo Zero"
      SID		      1
      Ports		      [1, 1]
      Position		      [440, 360, 470, 390]
      BackgroundColor	      "lightBlue"
      LibraryVersion	      "1.225"
      SourceBlock	      "simulink/Logic and Bit\nOperations/Compare\nTo Zero"
      SourceType	      "Compare To Zero"
      ShowPortLabels	      "FromPortIcon"
      SystemSampleTime	      "-1"
      FunctionWithSeparateData off
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      GeneratePreprocessorConditionals off
      relop		      "~="
      LogicOutDataTypeMode    "boolean"
      ZeroCross		      off
    }
    Block {
      BlockType		      DotProduct
      Name		      "Dot Product"
      SID		      2
      Position		      [260, 157, 290, 188]
      BackgroundColor	      "orange"
      OutDataTypeStr	      "Inherit: Inherit via internal rule"
    }
    Block {
      BlockType		      Logic
      Name		      "Game"
      SID		      3
      Ports		      [2, 1]
      Position		      [145, 161, 175, 194]
      BackgroundColor	      "orange"
      Operator		      "NOR"
      AllPortsSameDT	      off
      OutDataTypeStr	      "boolean"
    }
    Block {
      BlockType		      Logic
      Name		      "Logical\nOperator"
      SID		      4
      Ports		      [4, 1]
      Position		      [545, 444, 575, 476]
      BackgroundColor	      "lightBlue"
      Operator		      "OR"
      Inputs		      "4"
      AllPortsSameDT	      off
      OutDataTypeStr	      "boolean"
    }
    Block {
      BlockType		      UnitDelay
      Name		      "Memory"
      SID		      5
      Position		      [500, 198, 535, 232]
      BlockMirror	      on
      BackgroundColor	      "orange"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      UnitDelay
      Name		      "Memory1"
      SID		      6
      Position		      [500, 123, 535, 157]
      BlockMirror	      on
      BackgroundColor	      "orange"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      UnitDelay
      Name		      "Memory2"
      SID		      7
      Position		      [500, 68, 535, 102]
      BlockMirror	      on
      BackgroundColor	      "orange"
      SampleTime	      "-1"
    }
    Block {
      BlockType		      SubSystem
      Name		      "More Info"
      SID		      8
      Ports		      []
      Position		      [15, 15, 39, 38]
      DropShadow	      on
      ShowName		      off
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskDisplay	      "disp('?')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"More Info"
	Location		[78, 96, 724, 520]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Reference
	  Name			  "Model Info"
	  SID			  9
	  Ports			  []
	  Position		  [15, 19, 610, 408]
	  ShowName		  off
	  LibraryVersion	  "1.215"
	  FontName		  "Arial"
	  SourceBlock		  "simulink/Model-Wide\nUtilities/Model Info"
	  SourceType		  "CMBlock"
	  ShowPortLabels	  "FromPortIcon"
	  SystemSampleTime	  "-1"
	  FunctionWithSeparateData off
	  RTWMemSecFuncInitTerm	  "Inherit from model"
	  RTWMemSecFuncExecute	  "Inherit from model"
	  RTWMemSecDataConstants  "Inherit from model"
	  RTWMemSecDataInternal	  "Inherit from model"
	  RTWMemSecDataParameters "Inherit from model"
	  InitialBlockCM	  "None"
	  BlockCM		  "None"
	  Frame			  "on"
	  DisplayStringWithTags	  "Model Description:\n-------------------\n\n%<Description>"
	  MaskDisplayString	  "Model Description:\\n-------------------\\n\\nEmbedded MATLAB fixed point version of the class"
	  "ic Asteroids game.\\n\\nThe classic Asteroids game. Even though it is purely fictitious (and not even physically\\n"
	  "correct), it is nevertheless a complicated dynamic system including collisions,\\nrotating polygons and gaming logi"
	  "c.\\n\\nThis version is using Embedded MATLAB and fixed point to demonstrate that all the\\ncomputations can be don"
	  "e without use of floating point math. Only the \"Plot\" block\\nin this model contains doubles for displaying and f"
	  "igure handling.\\n\\nThe orange blocks are the core of the simulation and the yellow block is responsible for\\ndis"
	  "playing the results. The blue blocks are managing the input controls, i.e. the space\\nship rotation, thrust and fi"
	  "ring.\\n\\nExcept for the \"Plot\" visualization block's use of plotting routines, all of the\\nEmbedded MATLAB fun"
	  "ction blocks in this model support code generation with\\nReal-Time Workshop and Real-Time Workshop Embedded Coder."
	  "\\n\\n  Demo Requirements\\n\\nDuring this demonstration, Simulink generates code for the simulation in a Simulink\\"
	  "nproject directory created in the current working directory (pwd). If you do not want\\nto affect the current direc"
	  "tory (or if you cannot) generate files in this directory, you\\nshould change your working directory.\\n"
	  HorizontalTextAlignment "Left"
	  LeftAlignmentValue	  "0.02"
	  SourceBlockDiagram	  "eml_asteroids"
	  TagMaxNumber		  "20"
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Plot"
      SID		      10
      Ports		      [2]
      Position		      [685, 266, 795, 304]
      BackgroundColor	      "yellow"
      PermitHierarchicalResolution "ExplicitOnly"
      TreatAsAtomicUnit	      on
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskType		      "Stateflow"
      MaskDescription	      "Embedded MATLAB block"
      MaskSelfModifiable      on
      MaskDisplay	      "disp('plot');"
      MaskIconFrame	      on
      MaskIconOpaque	      off
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Plot"
	Location		[257, 457, 812, 717]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	SIDHighWatermark	13
	Block {
	  BlockType		  Inport
	  Name			  "objs"
	  SID			  1
	  Position		  [20, 101, 40, 119]
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "info"
	  SID			  2
	  Position		  [20, 136, 40, 154]
	  Port			  "2"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Demux
	  Name			  " Demux "
	  SID			  11
	  Ports			  [1, 1]
	  Position		  [270, 100, 320, 140]
	  Outputs		  "1"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  " SFunction "
	  SID			  10
	  Tag			  "Stateflow S-Function eml_asteroids 3"
	  Ports			  [2, 1]
	  Position		  [180, 100, 230, 160]
	  FunctionName		  "sf_sfun"
	  PortCounts		  "[2 1]"
	  EnableBusSupport	  off
	}
	Block {
	  BlockType		  Terminator
	  Name			  " Terminator "
	  SID			  13
	  Position		  [460, 111, 480, 129]
	}
	Line {
	  SrcBlock		  " SFunction "
	  SrcPort		  1
	  DstBlock		  " Demux "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "objs"
	  SrcPort		  1
	  DstBlock		  " SFunction "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "info"
	  SrcPort		  1
	  DstBlock		  " SFunction "
	  DstPort		  2
	}
	Line {
	  SrcBlock		  " Demux "
	  SrcPort		  1
	  DstBlock		  " Terminator "
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Reset Ship\nControls"
      SID		      11
      Ports		      [1]
      Position		      [625, 437, 695, 483]
      BackgroundColor	      "lightBlue"
      PermitHierarchicalResolution "ExplicitOnly"
      TreatAsAtomicUnit	      on
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskType		      "Stateflow"
      MaskDescription	      "Embedded MATLAB block"
      MaskSelfModifiable      on
      MaskDisplay	      "disp('reset');"
      MaskIconFrame	      on
      MaskIconOpaque	      off
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Reset Ship\nControls"
	Location		[257, 457, 812, 717]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	SIDHighWatermark	12
	Block {
	  BlockType		  Inport
	  Name			  "x"
	  SID			  1
	  Position		  [20, 101, 40, 119]
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Demux
	  Name			  " Demux "
	  SID			  10
	  Ports			  [1, 1]
	  Position		  [270, 100, 320, 140]
	  Outputs		  "1"
	}
	Block {
	  BlockType		  "S-Function"
	  Name			  " SFunction "
	  SID			  9
	  Tag			  "Stateflow S-Function eml_asteroids 4"
	  Ports			  [1, 1]
	  Position		  [180, 100, 230, 140]
	  FunctionName		  "sf_sfun"
	  PortCounts		  "[1 1]"
	  EnableBusSupport	  off
	}
	Block {
	  BlockType		  Terminator
	  Name			  " Terminator "
	  SID			  12
	  Position		  [460, 111, 480, 129]
	}
	Line {
	  SrcBlock		  " SFunction "
	  SrcPort		  1
	  DstBlock		  " Demux "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "x"
	  SrcPort		  1
	  DstBlock		  " SFunction "
	  DstPort		  1
	}
	Line {
	  SrcBlock		  " Demux "
	  SrcPort		  1
	  DstBlock		  " Terminator "
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Setup"
      SID		      12
      Ports		      [3, 2]
      Position		      [130, 254, 200, 286]
      BackgroundColor	      "orange"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      System {
	Name			"Setup"
	Location		[192, 309, 583, 575]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "objs"
	  SID			  13
	  Position		  [15, 40, 45, 55]
	  BlockRotation		  270
	  BlockMirror		  on
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "nL"
	  SID			  14
	  Position		  [15, 73, 45, 87]
	  Port			  "2"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "nG"
	  SID			  15
	  Position		  [15, 103, 45, 117]
	  Port			  "3"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "Setup"
	  SID			  16
	  Ports			  [3, 2]
	  Position		  [90, 50, 195, 110]
	  PermitHierarchicalResolution "ExplicitOnly"
	  TreatAsAtomicUnit	  on
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  MaskType		  "Stateflow"
	  MaskDescription	  "Embedded MATLAB block"
	  MaskSelfModifiable	  on
	  MaskDisplay		  "disp('setup');"
	  MaskIconFrame		  on
	  MaskIconOpaque	  off
	  MaskIconRotate	  "none"
	  MaskPortRotate	  "default"
	  MaskIconUnits		  "autoscale"
	  System {
	    Name		    "Setup"
	    Location		    [257, 457, 812, 717]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SIDHighWatermark	    16
	    Block {
	      BlockType		      Inport
	      Name		      "objs"
	      SID		      1
	      Position		      [20, 101, 40, 119]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "nL"
	      SID		      2
	      Position		      [20, 136, 40, 154]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "nG"
	      SID		      3
	      Position		      [20, 171, 40, 189]
	      Port		      "3"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Demux
	      Name		      " Demux "
	      SID		      14
	      Ports		      [1, 1]
	      Position		      [270, 180, 320, 220]
	      Outputs		      "1"
	    }
	    Block {
	      BlockType		      "S-Function"
	      Name		      " SFunction "
	      SID		      13
	      Tag		      "Stateflow S-Function eml_asteroids 1"
	      Ports		      [3, 3]
	      Position		      [180, 100, 230, 180]
	      FunctionName	      "sf_sfun"
	      PortCounts	      "[3 3]"
	      EnableBusSupport	      off
	      Port {
		PortNumber		2
		Name			"objs1"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	      Port {
		PortNumber		3
		Name			"level"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      " Terminator "
	      SID		      16
	      Position		      [460, 191, 480, 209]
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "objs1"
	      SID		      7
	      Position		      [460, 101, 480, 119]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "level"
	      SID		      8
	      Position		      [460, 136, 480, 154]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Line {
	      SrcBlock		      " SFunction "
	      SrcPort		      1
	      DstBlock		      " Demux "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "objs"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "nL"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "nG"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      3
	    }
	    Line {
	      Name		      "objs1"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      2
	      DstBlock		      "objs1"
	      DstPort		      1
	    }
	    Line {
	      Name		      "level"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      3
	      DstBlock		      "level"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      " Demux "
	      SrcPort		      1
	      DstBlock		      " Terminator "
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  Outport
	  Name			  "objs1"
	  SID			  17
	  Position		  [220, 58, 250, 72]
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Outport
	  Name			  "level"
	  SID			  18
	  Position		  [220, 88, 250, 102]
	  Port			  "2"
	  IconDisplay		  "Port number"
	}
	Line {
	  SrcBlock		  "objs"
	  SrcPort		  1
	  DstBlock		  "Setup"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "nL"
	  SrcPort		  1
	  DstBlock		  "Setup"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "nG"
	  SrcPort		  1
	  DstBlock		  "Setup"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "Setup"
	  SrcPort		  1
	  Points		  [0, 0]
	  DstBlock		  "objs1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Setup"
	  SrcPort		  2
	  Points		  [0, 0]
	  DstBlock		  "level"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      Switch
      Name		      "Setup Ctrl"
      SID		      19
      Position		      [330, 240, 360, 270]
      BackgroundColor	      "orange"
      NamePlacement	      "alternate"
      Criteria		      "u2 > Threshold"
      InputSameDT	      off
      SaturateOnIntegerOverflow	off
      ZeroCross		      off
    }
    Block {
      BlockType		      Constant
      Name		      "Shoot"
      SID		      20
      Position		      [240, 460, 270, 490]
      Value		      "0"
      OutDataTypeStr	      "boolean"
    }
    Block {
      BlockType		      Constant
      Name		      "StopTurn"
      SID		      21
      Position		      [240, 320, 270, 350]
      NamePlacement	      "alternate"
      Value		      "0"
      OutDataTypeStr	      "boolean"
    }
    Block {
      BlockType		      Constant
      Name		      "Thrust"
      SID		      22
      Position		      [240, 405, 270, 435]
      Value		      "0"
      OutDataTypeStr	      "boolean"
    }
    Block {
      BlockType		      Clock
      Name		      "Time"
      SID		      23
      Position		      [195, 100, 215, 120]
      Decimation	      "10"
    }
    Block {
      BlockType		      Constant
      Name		      "Turn"
      SID		      24
      Position		      [240, 360, 270, 390]
      Value		      "0"
      OutDataTypeStr	      "int32"
    }
    Block {
      BlockType		      SubSystem
      Name		      "Update"
      SID		      25
      Ports		      [6, 4]
      Position		      [430, 264, 515, 326]
      BackgroundColor	      "orange"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      System {
	Name			"Update"
	Location		[499, 354, 899, 686]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
	Block {
	  BlockType		  Inport
	  Name			  "objs"
	  SID			  26
	  Position		  [15, 38, 45, 52]
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "level"
	  SID			  27
	  Position		  [15, 68, 45, 82]
	  Port			  "2"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "stop_turn"
	  SID			  28
	  Position		  [15, 98, 45, 112]
	  Port			  "3"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "turn"
	  SID			  29
	  Position		  [15, 128, 45, 142]
	  Port			  "4"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "thrust"
	  SID			  30
	  Position		  [15, 158, 45, 172]
	  Port			  "5"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Inport
	  Name			  "shoot"
	  SID			  31
	  Position		  [15, 188, 45, 202]
	  Port			  "6"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  SubSystem
	  Name			  "Update"
	  SID			  32
	  Ports			  [6, 4]
	  Position		  [90, 28, 220, 212]
	  PermitHierarchicalResolution "ExplicitOnly"
	  TreatAsAtomicUnit	  on
	  MinAlgLoopOccurrences	  off
	  PropExecContextOutsideSubsystem off
	  RTWSystemCode		  "Auto"
	  FunctionWithSeparateData off
	  Opaque		  off
	  RequestExecContextInheritance	off
	  MaskHideContents	  off
	  MaskType		  "Stateflow"
	  MaskDescription	  "Embedded MATLAB block"
	  MaskSelfModifiable	  on
	  MaskDisplay		  "disp('update');"
	  MaskIconFrame		  on
	  MaskIconOpaque	  off
	  MaskIconRotate	  "none"
	  MaskPortRotate	  "default"
	  MaskIconUnits		  "autoscale"
	  System {
	    Name		    "Update"
	    Location		    [257, 457, 812, 717]
	    Open		    off
	    ModelBrowserVisibility  off
	    ModelBrowserWidth	    200
	    ScreenColor		    "white"
	    PaperOrientation	    "landscape"
	    PaperPositionMode	    "auto"
	    PaperType		    "usletter"
	    PaperUnits		    "inches"
	    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
	    TiledPageScale	    1
	    ShowPageBoundaries	    off
	    ZoomFactor		    "100"
	    SIDHighWatermark	    21
	    Block {
	      BlockType		      Inport
	      Name		      "objs"
	      SID		      1
	      Position		      [20, 101, 40, 119]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "level"
	      SID		      2
	      Position		      [20, 136, 40, 154]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "stop_turn"
	      SID		      3
	      Position		      [20, 171, 40, 189]
	      Port		      "3"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "turn"
	      SID		      4
	      Position		      [20, 206, 40, 224]
	      Port		      "4"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "thrust"
	      SID		      5
	      Position		      [20, 246, 40, 264]
	      Port		      "5"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Inport
	      Name		      "shoot"
	      SID		      6
	      Position		      [20, 281, 40, 299]
	      Port		      "6"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Demux
	      Name		      " Demux "
	      SID		      19
	      Ports		      [1, 1]
	      Position		      [270, 245, 320, 285]
	      Outputs		      "1"
	    }
	    Block {
	      BlockType		      "S-Function"
	      Name		      " SFunction "
	      SID		      18
	      Tag		      "Stateflow S-Function eml_asteroids 2"
	      Ports		      [6, 5]
	      Position		      [180, 102, 230, 243]
	      FunctionName	      "sf_sfun"
	      PortCounts	      "[6 5]"
	      EnableBusSupport	      off
	      Port {
		PortNumber		2
		Name			"objs1"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	      Port {
		PortNumber		3
		Name			"nL"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	      Port {
		PortNumber		4
		Name			"nG"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	      Port {
		PortNumber		5
		Name			"info"
		RTWStorageClass		"Auto"
		DataLoggingNameMode	"SignalName"
	      }
	    }
	    Block {
	      BlockType		      Terminator
	      Name		      " Terminator "
	      SID		      21
	      Position		      [460, 256, 480, 274]
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "objs1"
	      SID		      10
	      Position		      [460, 101, 480, 119]
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "nL"
	      SID		      11
	      Position		      [460, 136, 480, 154]
	      Port		      "2"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "nG"
	      SID		      12
	      Position		      [460, 171, 480, 189]
	      Port		      "3"
	      IconDisplay	      "Port number"
	    }
	    Block {
	      BlockType		      Outport
	      Name		      "info"
	      SID		      13
	      Position		      [460, 206, 480, 224]
	      Port		      "4"
	      IconDisplay	      "Port number"
	    }
	    Line {
	      SrcBlock		      " SFunction "
	      SrcPort		      1
	      DstBlock		      " Demux "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "objs"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      "level"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      2
	    }
	    Line {
	      SrcBlock		      "stop_turn"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      3
	    }
	    Line {
	      SrcBlock		      "turn"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      4
	    }
	    Line {
	      SrcBlock		      "thrust"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      5
	    }
	    Line {
	      SrcBlock		      "shoot"
	      SrcPort		      1
	      DstBlock		      " SFunction "
	      DstPort		      6
	    }
	    Line {
	      Name		      "objs1"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      2
	      DstBlock		      "objs1"
	      DstPort		      1
	    }
	    Line {
	      Name		      "nL"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      3
	      DstBlock		      "nL"
	      DstPort		      1
	    }
	    Line {
	      Name		      "nG"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      4
	      DstBlock		      "nG"
	      DstPort		      1
	    }
	    Line {
	      Name		      "info"
	      Labels		      [0, 0]
	      SrcBlock		      " SFunction "
	      SrcPort		      5
	      DstBlock		      "info"
	      DstPort		      1
	    }
	    Line {
	      SrcBlock		      " Demux "
	      SrcPort		      1
	      DstBlock		      " Terminator "
	      DstPort		      1
	    }
	  }
	}
	Block {
	  BlockType		  Outport
	  Name			  "objs1"
	  SID			  33
	  Position		  [295, 48, 325, 62]
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Outport
	  Name			  "nL"
	  SID			  34
	  Position		  [295, 93, 325, 107]
	  Port			  "2"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Outport
	  Name			  "nG"
	  SID			  35
	  Position		  [295, 138, 325, 152]
	  Port			  "3"
	  IconDisplay		  "Port number"
	}
	Block {
	  BlockType		  Outport
	  Name			  "info"
	  SID			  36
	  Position		  [295, 183, 325, 197]
	  Port			  "4"
	  IconDisplay		  "Port number"
	}
	Line {
	  SrcBlock		  "stop_turn"
	  SrcPort		  1
	  DstBlock		  "Update"
	  DstPort		  3
	}
	Line {
	  SrcBlock		  "turn"
	  SrcPort		  1
	  DstBlock		  "Update"
	  DstPort		  4
	}
	Line {
	  SrcBlock		  "thrust"
	  SrcPort		  1
	  DstBlock		  "Update"
	  DstPort		  5
	}
	Line {
	  SrcBlock		  "shoot"
	  SrcPort		  1
	  DstBlock		  "Update"
	  DstPort		  6
	}
	Line {
	  SrcBlock		  "objs"
	  SrcPort		  1
	  DstBlock		  "Update"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Update"
	  SrcPort		  1
	  DstBlock		  "objs1"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "level"
	  SrcPort		  1
	  DstBlock		  "Update"
	  DstPort		  2
	}
	Line {
	  SrcBlock		  "Update"
	  SrcPort		  2
	  DstBlock		  "nL"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Update"
	  SrcPort		  3
	  DstBlock		  "nG"
	  DstPort		  1
	}
	Line {
	  SrcBlock		  "Update"
	  SrcPort		  4
	  DstBlock		  "info"
	  DstPort		  1
	}
      }
    }
    Block {
      BlockType		      DataTypeConversion
      Name		      "dbl"
      SID		      37
      Position		      [195, 171, 235, 189]
      BackgroundColor	      "orange"
      RndMeth		      "Floor"
      SaturateOnIntegerOverflow	off
    }
    Line {
      SrcBlock		      "Time"
      SrcPort		      1
      Points		      [25, 0]
      DstBlock		      "Dot Product"
      DstPort		      1
    }
    Line {
      Labels		      [0, 0]
      SrcBlock		      "Memory"
      SrcPort		      1
      Points		      [-180, 0]
      Branch {
	DstBlock		"Setup Ctrl"
	DstPort			1
      }
      Branch {
	Points			[-200, 0]
	DstBlock		"Setup"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Setup Ctrl"
      SrcPort		      1
      Points		      [0, 15]
      DstBlock		      "Update"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Turn"
      SrcPort		      1
      Points		      [60, 0]
      Branch {
	DstBlock		"Compare\nTo Zero"
	DstPort			1
      }
      Branch {
	Points			[0, -75]
	DstBlock		"Update"
	DstPort			4
      }
    }
    Line {
      SrcBlock		      "Thrust"
      SrcPort		      1
      Points		      [10, 0]
      Branch {
	Points			[0, 45]
	DstBlock		"Logical\nOperator"
	DstPort			3
      }
      Branch {
	Points			[65, 0; 0, -110]
	DstBlock		"Update"
	DstPort			5
      }
    }
    Line {
      SrcBlock		      "Logical\nOperator"
      SrcPort		      1
      DstBlock		      "Reset Ship\nControls"
      DstPort		      1
    }
    Line {
      SrcBlock		      "StopTurn"
      SrcPort		      1
      Points		      [40, 0]
      Branch {
	Points			[0, 110]
	DstBlock		"Logical\nOperator"
	DstPort			1
      }
      Branch {
	Points			[5, 0; 0, -45]
	DstBlock		"Update"
	DstPort			3
      }
    }
    Line {
      SrcBlock		      "Shoot"
      SrcPort		      1
      Points		      [90, 0]
      Branch {
	DstBlock		"Logical\nOperator"
	DstPort			4
      }
      Branch {
	Points			[0, -155]
	DstBlock		"Update"
	DstPort			6
      }
    }
    Line {
      SrcBlock		      "Update"
      SrcPort		      1
      Points		      [80, 0]
      Branch {
	DstBlock		"Plot"
	DstPort			1
      }
      Branch {
	Points			[0, -60]
	DstBlock		"Memory"
	DstPort			1
      }
    }
    Line {
      SrcBlock		      "Update"
      SrcPort		      2
      Points		      [110, 0; 0, -150]
      DstBlock		      "Memory1"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Memory1"
      SrcPort		      1
      Points		      [-390, 0; 0, 45]
      Branch {
	DstBlock		"Game"
	DstPort			2
      }
      Branch {
	Points			[0, 85]
	DstBlock		"Setup"
	DstPort			2
      }
    }
    Line {
      SrcBlock		      "Dot Product"
      SrcPort		      1
      Points		      [10, 0; 0, 80]
      DstBlock		      "Setup Ctrl"
      DstPort		      2
    }
    Line {
      SrcBlock		      "dbl"
      SrcPort		      1
      DstBlock		      "Dot Product"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Game"
      SrcPort		      1
      DstBlock		      "dbl"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Compare\nTo Zero"
      SrcPort		      1
      Points		      [50, 0; 0, 80]
      DstBlock		      "Logical\nOperator"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Setup"
      SrcPort		      1
      DstBlock		      "Setup Ctrl"
      DstPort		      3
    }
    Line {
      SrcBlock		      "Memory2"
      SrcPort		      1
      Points		      [-405, 0; 0, 85]
      Branch {
	DstBlock		"Game"
	DstPort			1
      }
      Branch {
	Points			[0, 110]
	DstBlock		"Setup"
	DstPort			3
      }
    }
    Line {
      SrcBlock		      "Update"
      SrcPort		      3
      Points		      [130, 0; 0, -220]
      DstBlock		      "Memory2"
      DstPort		      1
    }
    Line {
      SrcBlock		      "Update"
      SrcPort		      4
      Points		      [150, 0]
      DstBlock		      "Plot"
      DstPort		      2
    }
    Line {
      SrcBlock		      "Setup"
      SrcPort		      2
      DstBlock		      "Update"
      DstPort		      2
    }
    Annotation {
      Name		      "Embedded MATLAB Asteroids in Fixed Point"
      Position		      [430, 28]
      FontName		      "Arial"
      FontSize		      20
    }
    Annotation {
      Name		      "The classic Asteroids game with some modifications; the asteroids behave as rigid objects that can "
      "collide.\nStandard Newtonian mechanics is used to compute velocity and angular momentum during collisions. The '"
      "Setup'\nand 'Update' blocks don't contain any double math; they all consist of purely integer or fixed point mat"
      "h."
      Position		      [107, 543]
      HorizontalAlignment     "left"
      FontName		      "Arial"
      FontSize		      16
    }
    Annotation {
      Name		      "Hit space bar to start game. Left/Right arrow keys turn ship. Up arrow key for thrust. \nSpace bar "
      "to shoot."
      Position		      [157, 608]
      HorizontalAlignment     "left"
      FontName		      "Arial"
      FontSize		      16
    }
    Annotation {
      Name		      "Keys:"
      Position		      [107, 598]
      HorizontalAlignment     "left"
      FontName		      "Arial"
      FontSize		      16
      FontWeight	      "bold"
    }
    Annotation {
      Name		      "Copyright 2005-2009 The MathWorks, Inc."
      Position		      [480, 654]
    }
  }
}
# Finite State Machines
#
#    Stateflow Version 7.5 (R2010a) dated Jul  7 2010, 19:59:58
#
#


Stateflow {
  machine {
    id			    1
    name		    "eml_asteroids"
    created		    "20-Apr-2004 14:20:44"
    isLibrary		    0
    firstTarget		    40
    sfVersion		    75014000.000003
    sfDemoChecksum	    [1806447643 1719498779 2791249825 3485024068]
  }
  chart {
    id			    2
    name		    "Setup/Setup"
    windowPosition	    [296.813 314.45 200.25 189.75]
    viewLimits		    [0 156.75 0 153.75]
    screen		    [1 1 1280 1024 1.333333333333333]
    treeNode		    [0 3 0 0]
    firstTransition	    5
    firstJunction	    4
    viewObj		    2
    machine		    1
    ssIdHighWaterMark	    8
    decomposition	    CLUSTER_CHART
    type		    EML_CHART
    firstData		    6
    chartFileNumber	    1
    disableImplicitCasting  1
    eml {
      name		      "setup"
    }
    supportVariableSizing   0
  }
  state {
    id			    3
    labelString		    "eML_blk_kernel()"
    position		    [18 64.5 118 66]
    fontSize		    12
    chart		    2
    treeNode		    [2 0 0 0]
    superState		    SUBCHART
    subviewer		    2
    ssIdNumber		    1
    type		    FUNC_STATE
    decomposition	    CLUSTER_STATE
    eml {
      isEML		      1
      script		      "function [objs1,level] = setup(objs,nL,nG)\n\n% nL = nextLevel\n\nmy_fimath = fimath('MaxProductW"
      "ordLength',32,'MaxSumWordLength',32,...\n                   'ProductFractionLength',12,'ProductMode','SpecifyPre"
      "cision',...\n                   'SumFractionLength',12,'SumMode','SpecifyPrecision');\nmy_fitype = numerictype(1"
      ",32,12);\n\npersistent level0;\npersistent objs0;\n\nmaxobjs = 64;\n\ninitial = false;\n\nif isempty(level0)\n  "
      "  level0 = fi(0,my_fitype,my_fimath);\n    nL = true;\n    initial = true;\nend\n\nif nG\n    level0 = fi(0,my_f"
      "itype,my_fimath);\n    nL = true;\nend\n\nif nL\n    level0 = level0 + 1;\nend\n\nlevel = level0;\n\nobjs0 = fi("
      "objs,my_fitype,my_fimath);\n\nif isempty(objs0)\n    objs0 = fi(zeros(11,maxobjs),my_fitype,my_fimath);\nend\n\n"
      "if nG\n    % Delete all objects that is not a ship\n    for i = 1:maxobjs\n        if objs0(1,i) ~= 2 % ship id\n"
      "            objs0(1,i) = 0;\n        end\n    end\nend\n\nif nL\n    if level0 < 5\n        level0_int = fi(leve"
      "l0,numerictype(1,16,0));\n        n = int32(level0_int) + 1;\n    else\n        n = int32(5);\n    end\n \n    i"
      "f initial\n        n = int32(20);\n    end\n \n    for z = int32(1):n\n        objs0 = add_asteroid(objs0,initia"
      "l);\n    end\n       \n    % Move objects so two objects never collide\n    \n     for z = int32(1):n\n         "
      "x = objs0(2,z);\n         y = objs0(3,z);\n         r = objs0(10,z);\n         q = true;\n         while q\n    "
      "         c = false;\n             for k = int32(1):n\n                 if z ~= k\n                     xk = objs"
      "0(2,k);\n                     yk = objs0(3,k);\n                     rk = objs0(10,k);\n                     dx "
      "= x-xk;\n                     ddx = x*xk;\n                     dy = y-yk;\n                     rrk = r+rk;\n  "
      "                   if dx*dx+dy*dy < rrk*rrk\n                         c = true;\n                         break;"
      "\n                     end\n                 end\n             end\n             q = c;\n             if q\n    "
      "             x = fi(400 * fi_rand(),my_fitype,my_fimath);\n                 y = fi(400 * fi_rand(),my_fitype,my_"
      "fimath);\n                 objs0(2,z) = x;\n                 objs0(3,z) = y;\n             end\n         end\n  "
      "   end  \nend\nobjs1 = objs0;\n\nfunction [objs1,index] = add_object(objs,id,r)\n    my_fimath = fimath('MaxProd"
      "uctWordLength',32,'MaxSumWordLength',32);\n    my_fitype = numerictype(1,32,20);\n\n    x = 400 * fi_rand();\n  "
      "  y = 400 * fi_rand();\n    arg = fi_rand()*2*pi;\n    vx = fi_rand()*6 - 3;\n    vy = fi_rand()*6 - 3;\n    var"
      "g = fi_rand()*0.2 - 0.1;\n    collidable = 1;\n    i = add_new(objs);\n    col = double('w');\n    cnt = 0;\n   "
      " objs(:,i) = fi([id x y arg vx vy varg collidable col r cnt]',my_fitype,my_fimath);\n    objs1 = objs;\n    inde"
      "x = i;\n\nfunction objs1 = add_asteroid(objs,initial)\n    r = fi_rand() * 15 + 8;\n    if ~initial\n        r(:"
      ") = 30;\n    end \n    [objs1,i] = add_object(objs,int32(1),r);\n    objs1(5,i) = objs1(5,i)*0.1;\n    objs1(6,i"
      ") = objs1(6,i)*0.1;\n    objs1(7,i) = objs1(7,i)*0.1;\n\nfunction r = fi_rand()\n\npersistent state;\n\nmy_fimat"
      "h0 = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                    'ProductFractionLength',32,"
      "'ProductMode','SpecifyPrecision',...\n                    'SumFractionLength',32,'SumMode','SpecifyPrecision',.."
      ".\n                    'OverflowMode','wrap');\nmy_fitype0 = numerictype(0,32,32);\n                \nmy_fimath "
      "= fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                   'ProductFractionLength',12,'Pro"
      "ductMode','SpecifyPrecision',...\n                   'SumFractionLength',12,'SumMode','SpecifyPrecision');\n\nmy"
      "_fitype = numerictype(1,32,12);\n\nif isempty(state)\n    state = fi(0,my_fitype0,my_fimath0);\nend\n\nstate = s"
      "tate * 34567.27491803 + 43178.421727917;\n\nr = fi(state,my_fitype,my_fimath);\n\nfunction index = add_new(objs)"
      "\n    maxobjs = 64;\n    index = int32(-1);\n    for i = 1:maxobjs,\n        if objs(1,i) == 0,\n            ind"
      "ex = int32(i);\n            return\n        end\n    end\n"
      editorLayout	      "100 M4x1[258 62 761 437]"
      fimathString	      "fimath(...\n'RoundMode', 'floor',...\n'OverflowMode', 'wrap',...\n'ProductMode', 'KeepLSB', "
      "'ProductWordLength', 32,...\n'SumMode', 'KeepLSB', 'SumWordLength', 32,...\n'CastBeforeSum', true)"
      emlDefaultFimath	      FimathUserSpecified
    }
  }
  junction {
    id			    4
    position		    [23.5747 49.5747 7]
    chart		    2
    linkNode		    [2 0 0]
    subviewer		    2
    ssIdNumber		    3
    type		    CONNECTIVE_JUNCTION
  }
  transition {
    id			    5
    labelString		    "{eML_blk_kernel();}"
    labelPosition	    [32.125 19.875 102.544 14.964]
    fontSize		    12
    src {
      intersection	      [0 0 1 0 23.5747 14.625 0 0]
    }
    dst {
      id		      4
      intersection	      [7 0 -1 -1 23.5747 42.5747 0 0]
    }
    midPoint		    [23.5747 24.9468]
    chart		    2
    linkNode		    [2 0 0]
    dataLimits		    [21.175 25.975 14.625 42.575]
    subviewer		    2
    drawStyle		    SMART
    executionOrder	    1
    ssIdNumber		    2
  }
  data {
    id			    6
    ssIdNumber		    4
    name		    "objs"
    linkNode		    [2 0 7]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
	firstIndex		"1 "
      }
      type {
	method			SF_PARAMETERIZED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"fixdt('sfix32_En12')"
      }
    }
    dataType		    "fixdt('sfix32_En12')"
  }
  data {
    id			    7
    ssIdNumber		    5
    name		    "nL"
    linkNode		    [2 6 8]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	primitive		SF_BOOLEAN_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "boolean"
  }
  data {
    id			    8
    ssIdNumber		    6
    name		    "objs1"
    linkNode		    [2 7 9]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
	firstIndex		"1 "
      }
      type {
	method			SF_PARAMETERIZED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"fixdt('sfix32_En12')"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "fixdt('sfix32_En12')"
  }
  data {
    id			    9
    ssIdNumber		    7
    name		    "nG"
    linkNode		    [2 8 10]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	primitive		SF_BOOLEAN_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "boolean"
  }
  data {
    id			    10
    ssIdNumber		    8
    name		    "level"
    linkNode		    [2 9 0]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_PARAMETERIZED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"fixdt('sfix32_En12')"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "fixdt('sfix32_En12')"
  }
  instance {
    id			    11
    name		    "Setup/Setup"
    machine		    1
    chart		    2
  }
  chart {
    id			    12
    name		    "Update/Update"
    windowPosition	    [311.813 299.45 200.25 189.75]
    viewLimits		    [0 156.75 0 153.75]
    screen		    [1 1 1280 1024 1.333333333333333]
    treeNode		    [0 13 0 0]
    firstTransition	    15
    firstJunction	    14
    viewObj		    12
    machine		    1
    ssIdHighWaterMark	    13
    decomposition	    CLUSTER_CHART
    type		    EML_CHART
    firstData		    16
    chartFileNumber	    2
    disableImplicitCasting  1
    eml {
      name		      "update"
    }
    supportVariableSizing   0
  }
  state {
    id			    13
    labelString		    "eML_blk_kernel()"
    position		    [18 64.5 118 66]
    fontSize		    12
    chart		    12
    treeNode		    [12 0 0 0]
    superState		    SUBCHART
    subviewer		    12
    ssIdNumber		    1
    type		    FUNC_STATE
    decomposition	    CLUSTER_STATE
    eml {
      isEML		      1
      script		      "function [objs1,nL,nG,info] = update(objs, level, stop_turn, turn, thrust, shoot)\n\npersistent s"
      "top;\npersistent thrust_cnt;\npersistent turn_cnt;\npersistent turn_dir;\npersistent ship_cnt;\npersistent ship_"
      "destroyed_cnt;\npersistent level_complete_cnt;\npersistent score;\n\nmy_fimath = fimath('MaxProductWordLength',3"
      "2,'MaxSumWordLength',32,...\n                   'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n"
      "                   'SumFractionLength',12,'SumMode','SpecifyPrecision');\nmy_fitype = numerictype(1,32,12);\n\no"
      "bjs1 = fi(objs,my_fitype,my_fimath);\nnL = false;\nnG = false;\n\nif isempty(score)\n    score = fi(0,my_fitype,"
      "my_fimath);\nend\n\n%\n% stop is used for debugging. It is convenient to \"freeze\" the\n% updates.\n%\nif isemp"
      "ty(stop)\n    stop = false;\nend\n\nif isempty(ship_cnt)\n    ship_cnt = fi(0,my_fitype,my_fimath);\nend\n\nif i"
      "sempty(thrust_cnt)\n    thrust_cnt = fi(0,my_fitype,my_fimath);\nend\n\nif isempty(turn_cnt) || stop_turn\n    t"
      "urn_cnt = fi(0,my_fitype,my_fimath);\n    turn_dir = int32(0);\nend\n\nif isempty(ship_destroyed_cnt)\n    ship_"
      "destroyed_cnt = fi(0,my_fitype,my_fimath);\nend\n\nif isempty(level_complete_cnt)\n    level_complete_cnt = fi(0"
      ",my_fitype,my_fimath);\nend\n\nif level_complete_cnt > 200\n    level_complete_cnt = fi(0,my_fitype,my_fimath);\n"
      "    nL = true;\nend\n\nif turn ~= 0\n    turn_cnt = fi(3,my_fitype,my_fimath);\n    turn_dir = turn;\nend\n\ninf"
      "o = [level ship_cnt score];\n\nif stop\n    return\nend\n\nmin_x = fi(0,my_fitype,my_fimath) - 20;\nmax_x = fi(4"
      "00,my_fitype,my_fimath) + 20;\nmin_y = fi(0,my_fitype,my_fimath) - 20;\nmax_y = fi(400,my_fitype,my_fimath) + 20"
      ";\nwidth = max_x - min_x;\nheight = max_y - min_y;\n\norigin_x = (max_x + min_x) * 0.5;\norigin_y = (max_y + min"
      "_y) * 0.5;\n\nif ship_destroyed_cnt > 0\n    ship_destroyed_cnt = ship_destroyed_cnt - 1;\nend\n\n% Make sure th"
      "rust is at the same position as ship\nmaxobjs = int32(64);\n\nship_index = int32(0);\nthrust_index = int32(0);\n"
      "no_asteroids = true;\nfor i = int32(1):maxobjs\n    if objs1(1,i) == 2 % space ship id\n        ship_index = int"
      "32(i);\n    end\n    if objs1(1,i) == 5 % thrust id\n        thrust_index = int32(i);\n    end\n    if objs1(1,i"
      ") == 1 % asteroid id\n        no_asteroids = false;\n    end\nend\n\nship_exists = ship_index > 0;\n\nif ship_de"
      "stroyed_cnt <= 0 && ship_cnt > 0 && ~ship_exists\n    if is_space_empty(objs1,origin_x,origin_y,40)\n        [ob"
      "js1,ship_index] = add_ship(objs1,origin_x,origin_y);\n        ship_cnt = ship_cnt - 1;\n        ship_exists = tr"
      "ue;\n    end\nend\n\nif ~ship_exists && shoot && ship_cnt == 0\n    ship_cnt = fi(3,my_fitype,my_fimath);\n    s"
      "core = fi(0,my_fitype,my_fimath);\n    nG = true;\nend\n\nif thrust ~= 0 && thrust_cnt == 0 && ship_index > 0\n "
      "   thrust_cnt = fi(7,my_fitype,my_fimath);\n    [objs1,thrust_index] = add_thrust(objs1);\nend\n\nif no_asteroid"
      "s && ship_index > 0\n    level_complete_cnt = level_complete_cnt + 1;\nend\n    \nif thrust_index > 0 && ship_in"
      "dex > 0\n    objs1(2:7,thrust_index) = objs1(2:7,ship_index);\nend\n\n% fprintf(1,'i=%d id=%d r=%d\\n', i, doubl"
      "e(objs1(1,i)), double(objs1(2,i)));\n\n%\n% Start updating all objects\n%\n\nfor i = int32(1):maxobjs\n    id = "
      "objs1(1,i);\n%    fprintf(1,'i=%d id=%d r=%d\\n', i, double(id), double(objs1(1,i)));\n    if id == 0 % marked d"
      "eleted\n        continue\n    end\n    x = objs1(2,i);\n    y = objs1(3,i);\n    arg = objs1(4,i);\n    vx = obj"
      "s1(5,i);\n    vy = objs1(6,i);\n    varg = objs1(7,i);\n    collidable = objs1(8,i);\n    color = objs1(9,i);\n "
      "   r = objs1(10,i);\n    cnt = objs1(11,i);\n        \n    if cnt > 0\n        cnt = cnt - 1;\n        objs1(11,"
      "i) = cnt;\n        if cnt <= 0 % delete object\n            objs1(1,i) = 0;\n            continue\n        end\n"
      "    end\n    \n    if id == 2 % space ship\n        \n        if turn_cnt > 0\n            turn_cnt = turn_cnt -"
      " 1;\n            if turn_dir == -1\n                varg = fi(-0.1,numerictype(varg),fimath(varg));\n           "
      " elseif turn_dir == 1\n                varg = fi(0.1,numerictype(varg),fimath(varg));\n            else\n       "
      "         varg = fi(0,numerictype(varg),fimath(varg));\n            end\n        else\n            varg = fi(0,nu"
      "merictype(varg),fimath(varg));\n        end\n        objs1(7,i) = varg;\n        \n        if thrust_cnt > 0\n  "
      "          thrust_cnt = thrust_cnt - 1;            \n            if thrust_cnt == 6\n                vx = vx + co"
      "s(arg)*0.3;\n                vy = vy + sin(arg)*0.3;\n            end\n            objs1(5,i) = vx;\n           "
      " objs1(6,i) = vy;\n        end\n        \n        if shoot ~= 0 && ship_exists\n            missile_cnt = fi(0,m"
      "y_fitype,my_fimath);\n            for j = int32(1):maxobjs\n                if objs(1,j) == 3\n                 "
      "   missile_cnt = missile_cnt + 1;\n                end\n            end\n            if missile_cnt < 3\n       "
      "         mx = x + (r+2)*cos(arg);\n                my = y + (r+2)*sin(arg);\n                mvx = vx + 3*cos(ar"
      "g);\n                mvy = vy + 3*sin(arg);\n                objs1 = add_missile(objs1,mx,my,mvx,mvy,arg);\n    "
      "            missile_cnt = missile_cnt + 1;\n            end\n        end\n    end\n    \n    arg = arg + varg;\n"
      "    x = x + vx;\n    y = y + vy;    \n    \n    while arg >= 2*pi, arg = arg - 2*pi; end\n    while arg < 0, arg"
      " = arg + 2*pi; end\n\n    objs1(2,i) = x;\n    objs1(3,i) = y;\n    objs1(4,i) = arg;\n    \n    while x > max_x"
      "\n        x = x - width;\n        objs1(2,i) = x;\n        objs1 = move_to_empty_space(objs1,i,int32(0),int32(10"
      "),min_x,max_x,min_y,max_y);\n    end\n    while x < min_x\n        x = x + width;\n        objs1(2,i) = x;\n    "
      "    objs1 = move_to_empty_space(objs1,i,int32(0),int32(10),min_x,max_x,min_y,max_y);\n    end\n    while y > max"
      "_y\n        y = y - height; \n        objs1(3,i) = y;\n        objs1 = move_to_empty_space(objs1,i,int32(10),int"
      "32(0),min_x,max_x,min_y,max_y);\n    end\n    while y < min_y\n        y = y + height; \n        objs1(3,i) = y;"
      "\n        objs1 = move_to_empty_space(objs1,i,int32(10),int32(0),min_x,max_x,min_y,max_y);\n    end\n    \n    ["
      "xs ys n] = get_object_data(objs1(:,i));\n    \n    for j = int32(1):maxobjs\n        if objs1(1,j) == 0 % object"
      " marked deleted\n            continue\n        end\n        collidable_j = objs1(8,j);\n        if i ~= j && col"
      "lidable ~= 0 && collidable_j ~= 0 && collides(objs1(:,i),objs1(:,j))\n\n            if (objs1(1,i) == 3 && objs1"
      "(1,j) == 1) || ...\n               (objs1(1,i) == 1 && objs1(1,j) == 3) % if missile + asteroid\n               "
      " [dir_x,dir_y] = get_any_dir;\n                if objs1(1,i) == 3\n                    x0 = objs1(2,i); y0 = obj"
      "s1(3,i);\n                    objs1(:,i) = objs1(:,j);\n                else\n                    x0 = objs1(2,j"
      "); y0 = objs1(3,j);\n                    objs1(:,j) = objs1(:,i);\n                end\n                vel = fi"
      "(2,my_fitype,my_fimath);\n                vel = vel*fi_rand() + 1;\n                asteroid_size = objs1(10,i);"
      "\n                objs1(10,i) = objs1(10,i) * 0.5;\n                objs1(10,j) = objs1(10,i);\n                "
      "if objs1(10,i) < 4\n                    objs1(1,i) = 0;\n                    objs1(1,j) = 0;\n                el"
      "se\n                    objs1(4,i) = objs1(4,i) + vel*dir_x;\n                    objs1(5,i) = objs1(5,i) + vel*"
      "dir_y;\n                    objs1(4,j) = objs1(4,j) - vel*dir_x;\n                    objs1(5,j) = objs1(5,j) - "
      "vel*dir_y;\n                    objs1(2,i) = objs1(2,i) + objs1(10,i)*dir_x;\n                    objs1(3,i) = o"
      "bjs1(3,i) + objs1(10,i)*dir_y;\n                    objs1(2,j) = objs1(2,j) - objs1(10,i)*dir_x;\n              "
      "      objs1(3,j) = objs1(3,j) - objs1(10,i)*dir_y;\n                end\n                objs1 = add_explosion(o"
      "bjs1,x0,y0,int32(40));\n\n                if asteroid_size >= 25\n                    score = score + 20;\n     "
      "           elseif asteroid_size >= 13\n                    score = score + 50;\n                else\n          "
      "          score = score + 100;\n                end\n\n                continue\n            end\n\n            "
      "ship_index = int32(-1);\n            ship_vx = fi(0,my_fitype,my_fimath);\n            ship_vy = fi(0,my_fitype,"
      "my_fimath);\n            ship_varg = fi(0,my_fitype,my_fimath);\n            if (objs1(1,i) == 2 || objs1(1,j) ="
      "= 2) % if ship + something else\n                if objs1(1,i) == 2\n                    ship_index = int32(i);\n"
      "                else\n                    ship_index = int32(j);\n                end\n                ship_vx ="
      " objs1(5,ship_index);\n                ship_vy = objs1(6,ship_index);\n                ship_varg = objs1(7,ship_"
      "index);\n            end\n\n%            objs1(9,i) = double('r');\n            [objs1(:,i),objs1(:,j)] = do_col"
      "lision(objs1(:,i),objs1(:,j));\n\n            if ship_index ~= -1\n                ship_vx = ship_vx - objs1(5,s"
      "hip_index);\n                ship_vy = ship_vy - objs1(6,ship_index);\n                ship_varg = ship_varg - o"
      "bjs1(7,ship_index);\n                ship_vr = ship_varg*ship_r();\n                % If ship gained to much ene"
      "rgy in the collison we'll destroy it\n                delta = sqrt(ship_vx*ship_vx+ship_vy*ship_vy+ship_varg*shi"
      "p_varg);\n                if delta >= 0.2 % Empirically tested (it feels right)\n                    objs1(1,shi"
      "p_index) = 0; % remove ship\n                    ship_destroyed_cnt = fi(100,my_fitype,my_fimath);\n            "
      "        objs1 = add_explosion(objs1,objs1(2,ship_index),objs1(3,ship_index),int32(100));\n                end\n "
      "           end\n            \n%            stop = true;\n            break\n        else\n%            objs1(9,i"
      ") = double('w');\n        end\n    end\nend\n\nfunction b = is_space_empty(objs,x,y,r)\n    maxobjs = 64;\n    f"
      "or j = 1:maxobjs\n        if objs(8,j) ~= 0 && objs(1,j) ~= 0 ...\n            radius = objs(10,j);\n           "
      " dx = objs(2,j) - x;\n            dy = objs(3,j) - y;\n            if dx*dx+dy*dy < (r+radius)*(r+radius)\n     "
      "           b = false;\n                return\n            end\n        end\n    end\n    b = true;\n\nfunction "
      "objs1 = move_to_empty_space(objs,obj_i,dx,dy,min_x,max_x,min_y,max_y)\n    maxobjs = 64;\n    width = max_x - mi"
      "n_x;\n    height = max_y - min_y;\n    objs1 = objs;\n    some_collision = true;\n    wraps = int32(0);\n    if "
      "objs1(8,obj_i) == 0\n        return\n    end\n    while some_collision && wraps < 2\n        some_collision = fa"
      "lse;\n        for j = 1:maxobjs\n            if objs1(1,j) == 0\n                continue\n            end\n    "
      "        if obj_i ~= j && objs1(8,j) ~= 0 && collides(objs1(:,obj_i),objs1(:,j))\n                x = objs1(2,obj"
      "_i);\n                y = objs1(3,obj_i);\n                x = x + dx;\n                y = y + dy;\n           "
      "     while x > max_x, x = x - width; wraps = wraps + 1; end\n                while x < min_x, x = x + width; wra"
      "ps = wraps + 1; end\n                while y > max_y, y = y - height; wraps = wraps + 1; end\n                wh"
      "ile y < min_y, y = y + height; wraps = wraps + 1; end\n                objs1(2,obj_i) = x;\n                objs"
      "1(3,obj_i) = y;\n                some_collision = true;\n            end\n        end\n    end\n\nfunction r = f"
      "i_rand()\n\npersistent state;\n\nmy_fimath0 = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n      "
      "              'ProductFractionLength',32,'ProductMode','SpecifyPrecision',...\n                    'SumFractionL"
      "ength',32,'SumMode','SpecifyPrecision',...\n                    'OverflowMode','wrap');\nmy_fitype0 = numerictyp"
      "e(0,32,32);\n                \nmy_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n         "
      "          'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                   'SumFractionLength"
      "',12,'SumMode','SpecifyPrecision');\n\nmy_fitype = numerictype(1,32,12);\n\nif isempty(state)\n    state = fi(0,"
      "my_fitype0,my_fimath0);\nend\n\nstate = state * 34567.27491803 + 43178.421727917;\n\nr = fi(state,my_fitype,my_f"
      "imath);\n\n%\n% get any direction\n%\n\n\nfunction [dx,dy] = get_any_dir\n    arg = fi_rand()*2*pi;\n    dx = co"
      "s(arg);\n    dy = sin(arg);\n\n%\n% do_collision\n%\n% Compute new momentum for objects\n%\n\nfunction [obj1,obj"
      "2] = do_collision(obj1,obj2)\n\n[px,py] = collision_point(obj1,obj2);\n[nx,ny] = collision_normal(obj1,obj2);\nn"
      " = [nx ny];\np = [px py];\n\nc = true;\n\ncnt = int32(0);\n\nwhile c\n    [obj1,obj2] = do_collision0(obj1,obj2,"
      "p,n);\n\n    c = collides(obj1,obj2);\n    if c\n        q = fi_rand();\n        arg = fi(q,numerictype(p),fimat"
      "h(p)) * 2 * pi;\n        n = n * [cos(arg) sin(arg); -sin(arg) cos(arg)];\n        cnt = cnt + 1;\n        if cn"
      "t > 10\n%            disp('failed!');\n            break;\n        end\n    end\nend\n\nfunction [obj1,obj2] = d"
      "o_collision0(obj1,obj2,p,n)\n\npx = p(1);\npy = p(2);\nnx = n(1);\nny = n(2);\n\ni1 = get_inertia(obj1);\nm1 = g"
      "et_mass(obj1);\nx1 = obj1(2);\ny1 = obj1(3);\nvx1 = obj1(5);\nvy1 = obj1(6);\nw1 = obj1(7);\nr1 = obj1(10);\n\ni"
      "2 = get_inertia(obj2);\nm2 = get_mass(obj2);\nx2 = obj2(2);\ny2 = obj2(3);\nvx2 = obj2(5);\nvy2 = obj2(6);\nw2 ="
      " obj2(7);\nr2 = obj2(10);\n\n%\n% Before we do anything, let's undo the collision point so\n% objects don't get "
      "stuck because we compute the collision\n% normal slightly wrong.\n%\n\nobj1(2) = obj1(2) - vx1;\nobj1(3) = obj1("
      "3) - vy1;\nobj1(4) = obj1(4) - w1;\nobj2(2) = obj2(2) - vx2;\nobj2(3) = obj2(3) - vy2;\nobj2(4) = obj2(4) - w2;\n"
      "\n\nv1 = [vx1 vy1];\nv2 = [vx2 vy2];\nr1p = [px-x1 py-y1];\nr2p = [px-x2 py-y2];\n\nw1r1p = cross([0 0 w1],[r1p "
      "0]);\nw2r2p = cross([0 0 w2],[r2p 0]);\n\nv1p = v1 + w1r1p(1:2);\nv2p = v2 + w2r2p(1:2);\n\nv21 = v1p - v2p;\n\n"
      "e = 1.00;\n\nxx1 = cross([r1p 0],[n 0]);\nxx2 = cross([r2p 0],[n 0]);\n\nj1 = (-(1+e)*v21) * n';\nj2 = divide(nu"
      "merictype(m1),1,m1) + ...\n     divide(numerictype(m2),1,m2) + ...\n     divide(numerictype(xx1),(xx1 * xx1'),i1"
      ") + ...\n     divide(numerictype(xx2),(xx2 * xx2'),i2);\n\nj = divide(numerictype(j1),j1,j2);\n\nnew_v1 = v1 + j"
      " * divide(numerictype(n),n,m1);\nnew_v2 = v2 - j * divide(numerictype(n),n,m2);\n\nnew_w1 = w1 + divide(numerict"
      "ype(j),j,i1)*xx1(3);\nnew_w2 = w2 - divide(numerictype(j),j,i2)*xx2(3);\n\nobj1(5) = new_v1(1);\nobj1(6) = new_v"
      "1(2);\nobj1(7) = new_w1;\n\nobj2(5) = new_v2(1);\nobj2(6) = new_v2(2);\nobj2(7) = new_w2;\n\nobj1(2) = obj1(2) +"
      " new_v1(1);\nobj1(3) = obj1(3) + new_v1(2);\nobj1(4) = obj1(4) + new_w1;\n\nobj2(2) = obj2(2) + new_v2(1);\nobj2"
      "(3) = obj2(3) + new_v2(2);\nobj2(4) = obj2(4) + new_w2;\n   \n%\n% add object\n%\n\nfunction [objs1,index] = add"
      "_object(objs,id,r,x,y,vx,vy,arg,col)\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,..."
      "\n                       'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                      "
      " 'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    varg = 0;\n  "
      "  collidable = 1;\n    index = add_new(objs);\n    if nargin < 9\n        ficol = fi(int32('w'),my_fitype,my_fim"
      "ath);\n    else\n        ficol = fi(int32(col),my_fitype,my_fimath);\n    end\n    objs(:,index) = fi([id x y ar"
      "g vx vy varg collidable ficol r -1]',my_fitype,my_fimath);\n    objs1 = objs;\n\nfunction [objs1,index] = add_sh"
      "ip(objs,x,y)\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                      "
      " 'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                       'SumFractionLength',12,"
      "'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    [objs1,index] = add_object(objs,2,15,"
      "x,y,0,0,fi(pi/2,my_fitype,my_fimath),'g');\n\nfunction [objs1,index] = add_thrust(objs)\n    [objs1,index] = add"
      "_object(objs,5,15,0,0,0,0,0,'y');\n    objs1(11,index) = 15; % Life time\n    objs1(8,index) = 0; % not collidab"
      "le\n    \nfunction objs1 = add_missile(objs,x,y,vx,vy,arg)\n    [objs1,index] = add_object(objs,3,4,x,y,vx,vy,ar"
      "g,'y');\n    objs1(11,index) = 50; % Life time\n\nfunction obj = new_explosion(x,y,n)\n    my_fimath = fimath('M"
      "axProductWordLength',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'ProductMod"
      "e','SpecifyPrecision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_"
      "fitype = numerictype(1,32,12);\n    obj = fi([4 x y 0 0 0 0 0 double('w') n 2]',my_fitype,my_fimath);\n    \nfun"
      "ction objs1 = add_explosion(objs,x,y,n)\n    index = add_new(objs);\n    obj = new_explosion(x,y,n);\n    objs1 "
      "= objs;\n    objs1(:,index) = obj;\n    \nfunction index = add_new(objs)\n    my_fimath = fimath('MaxProductWord"
      "Length',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'ProductMode','SpecifyPr"
      "ecision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = nume"
      "rictype(1,32,12);\n    maxobjs = 64;\n    index = int32(-1);\n    for i = 1:maxobjs,\n        if objs(1,i) == 0\n"
      "            index = int32(i);\n            return\n        end\n    end\n    feval('error','overflow objects');\n"
      "\nfunction n = get_number(objs)    \n    n = add_new(objs);\n\n%\n% get_object_data\n%\n% Get point data given o"
      "bject\n%\nfunction [xs ys n] = get_object_data(obj)\n\nid = obj(1);\nx = obj(2);\ny = obj(3);\narg = obj(4);\nr "
      "= obj(10);\n\nxs = fi([0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0],numerictype(x),fimath(x));\nys = fi([0 0 0 0 0 0 0 0 0 0"
      " 0 0 0 0 0 0],numerictype(y),fimath(y));\nn = int32(0);\nif id == 1,\n    asteroid_x0 = asteroid_x();\n    aster"
      "oid_y0 = asteroid_y();\n    asteroid_r0 = asteroid_r();\n    f = divide(numerictype(r),r,asteroid_r0);\n    n = "
      "int32(size(asteroid_x0,1));\n    xs(1:n) = x + f * asteroid_x0 * cos(arg) - f * asteroid_y0 * sin(arg);\n    ys("
      "1:n) = y + f * asteroid_x0 * sin(arg) + f * asteroid_y0 * cos(arg);\nelseif id == 2\n    ship_x0 = ship_x();\n  "
      "  ship_y0 = ship_y();\n    ship_r0 = ship_r();\n    f = divide(numerictype(r),r,ship_r0);\n    n = int32(size(sh"
      "ip_x0,1));\n    xs(1:n) = x + f * ship_x0 * cos(arg) - f * ship_y0 * sin(arg);\n    ys(1:n) = y + f * ship_x0 * "
      "sin(arg) + f * ship_y0 * cos(arg);    \nelse % id == 3\n    missile_x0 = missile_x();\n    missile_y0 = missile_"
      "y();\n    missile_r0 = missile_r();\n    f = divide(numerictype(r),r,missile_r0);\n    n = int32(size(missile_x0"
      ",1));\n    xs(1:n) = x + f * missile_x0 * cos(arg) - f * missile_y0 * sin(arg);\n    ys(1:n) = y + f * missile_x"
      "0 * sin(arg) + f * missile_y0 * cos(arg);    \nend\n\n%\n% asteroid_x\n% asteroid_y\n%\n% Returning asteroid x a"
      "nd y data\n%\n\nfunction r = asteroid_x\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,"
      "...\n                       'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                   "
      "    'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi([2 "
      "10 20 17 7 16 12 -7 -17 -21 -14 -8 -7]',my_fitype,my_fimath);\n\nfunction r = asteroid_y\n    my_fimath = fimath"
      "('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'Product"
      "Mode','SpecifyPrecision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    "
      "my_fitype = numerictype(1,32,12);\n    r = fi([18 22 5 -4 -6 -10 -17 -19 -13 3 17 11 23]',my_fitype,my_fimath);\n"
      "\nfunction r = asteroid_r\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n         "
      "              'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                       'SumFracti"
      "onLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi(22,my_fitype,my_f"
      "imath);\n\nfunction r = ship_x\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n    "
      "                   'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                       'SumF"
      "ractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi([-4,-2,-2,-4"
      ",8]',my_fitype,my_fimath);\n    \nfunction r = ship_y\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumW"
      "ordLength',32,...\n                       'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n     "
      "                  'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n"
      "    r = fi([4,1,-1,-4,0]',my_fitype,my_fimath);\n\nfunction r = ship_r\n    my_fimath = fimath('MaxProductWordLe"
      "ngth',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'ProductMode','SpecifyPrec"
      "ision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numeri"
      "ctype(1,32,12);\n    r = fi(10,my_fitype,my_fimath);\n    \nfunction r = missile_x\n    my_fimath = fimath('MaxP"
      "roductWordLength',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'ProductMode',"
      "'SpecifyPrecision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fit"
      "ype = numerictype(1,32,12);\n    r = fi([-4,4]',my_fitype,my_fimath);\n    \nfunction r = missile_y\n    my_fima"
      "th = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',"
      "12,'ProductMode','SpecifyPrecision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecisi"
      "on');\n    my_fitype = numerictype(1,32,12);\n    r = fi([0,0]',my_fitype,my_fimath);\n\nfunction r = missile_r\n"
      "    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                       'ProductFract"
      "ionLength',12,'ProductMode','SpecifyPrecision',...\n                       'SumFractionLength',12,'SumMode','Spe"
      "cifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi(8,my_fitype,my_fimath);        \n\n%\n% coll"
      "ides(obj1,obj2)\n%\n% Return true if obj1 collides with obj2.\n%\nfunction r = collides(obj1,obj2)\n    id1 = ob"
      "j1(1);\n    x1 = obj1(2);\n    y1 = obj1(3);\n    r1 = obj1(10);\n    id2 = obj2(1);\n    x2 = obj2(2);\n    y2 "
      "= obj2(3);\n    r2 = obj2(10);\n    dx = x2 - x1;\n    dy = y2 - y1;\n    if (dx*dx + dy*dy) < ((r1+r2)*(r1+r2))"
      "\n        [xs1 ys1 n1] = get_object_data(obj1);\n        [xs2 ys2 n2] = get_object_data(obj2);\n        r = poly"
      "gons_collide(xs1,ys1,n1,xs2,ys2,n2);\n    else\n        r = false;\n    end\n\n%\n% I = get_inertia(obj)\n%\n\nf"
      "unction I = get_inertia(obj)\n    r = obj(10);\n    m = get_mass(obj);\n    I = divide(numerictype(m),m*r*r,2);\n"
      "%    I = m;\n\n%\n% m = get_mass(obj)\n%\n\nfunction m = get_mass(obj)\n    m = obj(10);\n    \n%\n% collision_n"
      "ormal(obj1,obj2)\n%\n\nfunction [nx,ny] = collision_normal(obj1,obj2)\n    [xs1 ys1 n1] = get_object_data(obj1);"
      "\n    [xs2 ys2 n2] = get_object_data(obj2);\n    [p,i] = polygons_collide_point(xs1,ys1,n1,xs2,ys2,n2);\n    if "
      "p == 1\n        prev_i = i-1;\n        if prev_i == 0\n            prev_i = n1;\n        end\n        dx = xs1(i"
      ") - xs1(prev_i);\n        dy = ys1(i) - ys1(prev_i);\n        l = sqrt(dx*dx+dy*dy);\n        nx = divide(numeri"
      "ctype(dy),dy,l);\n        ny = -divide(numerictype(dx),dx,l);\n    elseif p == 2\n        prev_i = i-1;\n       "
      " if prev_i == 0\n            prev_i = n2;\n        end\n        dx = xs2(i) - xs2(prev_i);\n        dy = ys2(i) "
      "- ys2(prev_i);\n        l = sqrt(dx*dx+dy*dy);\n        nx = divide(numerictype(dy),dy,l);\n        ny = -divide"
      "(numerictype(dx),dx,l);\n    else\n        nx = fi(0,numerictype(xs1),fimath(ys1));\n        ny = fi(0,numericty"
      "pe(xs1),fimath(ys1));\n    end\n    \n%\n% collision_point(obj1,obj2)\n%\n\nfunction [x,y] = collision_point(obj"
      "1,obj2)\n    [xs1 ys1 n1] = get_object_data(obj1);\n    [xs2 ys2 n2] = get_object_data(obj2);\n    [p,i] = polyg"
      "ons_collide_point(xs1,ys1,n1,xs2,ys2,n2);\n    if p == 1\n        x = xs1(i);\n        y = ys1(i);\n    elseif p"
      " == 2\n        x = xs2(i);\n        y = ys2(i);\n    else\n        x = fi(0,numerictype(xs1),fimath(xs1));\n    "
      "    y = fi(0,numerictype(ys1),fimath(ys1));\n    end\n\n%\n% polygons_collide(xs1,ys1,xs2,ys2)\n%\n% Return true"
      " if polygon xs1,ys1 collides with xs2,ys2\n%\nfunction r = polygons_collide(xs1,ys1,n1,xs2,ys2,n2)\n\n[p,n] = po"
      "lygons_collide_point(xs1,ys1,n1,xs2,ys2,n2);\nr = p ~= 0;\n\n%\n% Return [p,n] if polygons collide where\n%     "
      "where [p,n] represents the collision point such that\n%     p = 1 if the point belongs to the first polygon\n%  "
      "   p = 2 if the point belongs to the second polygon\n%     n = the index of the point in the polygon that is\n% "
      "    the collision point.\n%     p = 0 if the polygons do not collide\n\nfunction [p,n] = polygons_collide_point("
      "xs1,ys1,n1,xs2,ys2,n2)\nif n2 > 2\n    for i = int32(1):int32(n1)\n        if inside_polygon(xs1(i),ys1(i),xs2,y"
      "s2,n2)\n            p = int32(1);\n            n = i;\n            return;\n        end\n    end\nend\n\nif n1 >"
      " 2\n    for i = int32(1):int32(n2)\n        if inside_polygon(xs2(i),ys2(i),xs1,ys1,n1)\n            p = int32(2"
      ");\n            n = i;\n            return;\n        end\n    end\nend\np = int32(0);\nn = int32(0);\n\n%\n% ins"
      "ide_polygon (Check if point is inside polygon)\n%\n% Returns true if point (x0,y0) is inside the polygon\n% (xs,"
      "ys)\n%\nfunction r = inside_polygon(x0,y0,xs,ys,max_n)\n\nif nargin <= 4\n    max_n = size(xs,1);\nend\n\ncnt = "
      "int32(0);\nn = max_n;\ni = int32(1);\nwhile i <= n\n    xi = xs(i);\n    yi = ys(i);\n    j = i + 1;\n    if j ="
      "= n+1\n        j = int32(1);\n    end\n    xj = xs(j);\n    yj = ys(j);\n    if line_intersect(x0,y0,10000,y0,xi"
      ",yi,xj,yj)\n        if is_near(yi,y0) || is_near(yj,y0)\n            if is_near(yi,y0)\n                i_prev ="
      " i - 1;\n                if i_prev < 1\n                    i_prev = n;\n                end \n                i"
      "_next = i + 1;\n            else\n                i_prev = i;\n                i_next = j + 1;\n                "
      "if i_next > n\n                    i_next = int32(1);\n                end\n            end\n            c = int"
      "32(0);\n            while c < n && is_near(ys(i_prev),y0)\n                i_prev = i_prev - 1;\n               "
      " if i_prev < 1\n                    i_prev = n;\n                end\n                c = c + 1;\n            en"
      "d\n            c = int32(0);\n            while c < n && is_near(ys(i_next),y0)\n                i_next = i_next"
      " + 1;\n                if i_next > n\n                    i_next = int32(1);\n                end\n             "
      "   c = c + 1;\n            end\n            if sign(ys(i_next) - y0) ~= sign(ys(i_prev) - y0)\n                c"
      "nt = cnt + 1;\n            end\n            if i_next < i\n                break\n            else\n            "
      "    i = i_next - 1;\n                if i < 1\n                    i = n;\n                end\n            end\n"
      "        else\n            cnt = cnt + 1;\n        end\n    end\n    i = i + 1;\nend\nr = rem(cnt,int32(2)) == 1;"
      "\n\nfunction r = is_near(x,y)\n    r = abs(x - y) < 0.1;\n\n%\n% line_intersect (Line segment intersection check"
      ")\n%\n% Returns true if line (x1,y1)--(x0,y0) intersects\n%                      (x2,y2)--(x3,y3)\n%\nfunction r"
      " = line_intersect(x0,y0,x1,y1,x2,y2,x3,y3)\n\nr = ((ccw(x0,y0,x1,y1,x2,y2) * ccw(x0,y0,x1,y1,x3,y3)) <= 0) && .."
      ".\n    ((ccw(x2,y2,x3,y3,x0,y0) * ccw(x2,y2,x3,y3,x1,y1)) <= 0);\n\n%\n% ccw (Counter clockwise)\n%\n% Compare v"
      "ectors (x1,y1) and (x2,y2) w.r.t. (x0,y0) and\n% determine whether we visit them clockwise or counter\n% clockwi"
      "se.\n%\nfunction r = ccw( x0, y0, x1, y1, x2, y2 )\n    dx1 = x1 - x0;\n    dy1 = y1 - y0;\n    dx2 = x2 - x0;\n"
      "    dy2 = y2 - y0;\n    q = dx1*dy2 - dy1*dx2;\n    if q > 0\n         r = int32(1);\n    elseif q < 0\n        "
      " r = int32(-1);\n    else\n        if ((dx1*dx2 < 0) || ((dy1*dy2) < 0))\n            r = int32(-1);\n        el"
      "seif ((dx1*dx1+dy1*dy1) < (dx2*dx2+dy2*dy2))\n            r = int32(1);\n        else\n            r = int32(0);"
      "\n        end\n    end\n\n%\n% Currently, sign is not implemented for fi\n%\n\nfunction y = sign(x)\n    if x < "
      "0\n        y = int32(-1);\n    elseif x > 0\n        y = int32(1);\n    else\n        y = int32(0);\n    end\n  "
      "  \n%\n% Currently, sqrt is not implemented for fi\n%\n\nfunction y = sqrt(x)\n    % Compute using Newton-Raphso"
      "n.\n    % First compute a good guess\n    q = fi(1,numerictype(x),fimath(x));\n    g = fi(1,numerictype(x),fimat"
      "h(x));\n    if x > 1\n        while q < x\n            q = q*4;\n            g = g*2;\n        end\n    else\n  "
      "      while q > x\n            q = divide(numerictype(q),q,4);\n            g = divide(numerictype(g),g,2);\n   "
      "     end\n    end\n    y = g;\n    for i = 1:4\n        y = divide(numerictype(y),(y + divide(numerictype(y),x,y"
      ")),2);\n    end\n\n%\n% cross product\n%\n    \nfunction c = cross(a,b)\n    c = [a(2).*b(3)-a(3).*b(2), a(3).*b"
      "(1)-a(1).*b(3), a(1).*b(2)-a(2).*b(1)];\n    \n%\n% Trigonometric functions for fi\n%\n\nfunction y = sin(x)\n  "
      "  if x < pi/2\n        [y,t] = fi_sin_cos(x);\n    else\n        [y0,t] = fi_sin_cos(x-pi);\n        y = -y0;\n "
      "   end\n        \nfunction y = cos(x)\n    if x < pi/2\n        [t,y] = fi_sin_cos(x);\n    else\n        [t,y0]"
      " = fi_sin_cos(x-pi);\n        y = -y0;\n    end\n\nfunction [scale,ks,phases] = cordic_table\n    m = fimath('Ma"
      "xProductWordLength',32,'MaxSumWordLength',32,...\n                   'ProductFractionLength',28,'ProductMode','S"
      "pecifyPrecision',...\n                   'SumFractionLength',28,'SumMode','SpecifyPrecision');\n    t = numerict"
      "ype(1,32,28);\n    k0 = fi(2^0,t,m);\n    p0 = atan(double(k0));\n    k1 = fi(2^-1,t,m);\n    p1 = atan(double(k"
      "1));\n    k2 = fi(2^-2,t,m);\n    p2 = atan(double(k2));\n    k3 = fi(2^-3,t,m);\n    p3 = atan(double(k3));\n  "
      "  k4 = fi(2^-4,t,m);\n    p4 = atan(double(k4));\n    k5 = fi(2^-5,t,m);\n    p5 = atan(double(k5));\n    k6 = f"
      "i(2^-6,t,m);\n    p6 = atan(double(k6));\n    k7 = fi(2^-7,t,m);\n    p7 = atan(double(k7));\n    k8 = fi(2^-8,t"
      ",m);\n    p8 = atan(double(k8));\n    k9 = fi(2^-9,t,m);\n    p9 = atan(double(k9));\n    k10 = fi(2^-10,t,m);\n"
      "    p10 = atan(double(k10));\n    k11 = fi(2^-11,t,m);\n    p11 = atan(double(k11));\n    k12 = fi(2^-12,t,m);\n"
      "    p12 = atan(double(k12));\n    k13 = fi(2^-13,t,m);\n    p13 = atan(double(k13));\n    k14 = fi(2^-14,t,m);\n"
      "    p14 = atan(double(k14));\n    ks = [k0 k1 k2 k3 k4 k5 k6 k7 k8 k9 k10 k11 k12 k13 k14];\n    phases = fi([p0"
      " p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 p13 p14],t,m);\n\n    p = fi(0,t,m);\n    z = fi(complex(1,0),t,m);\n   "
      " for i=1:length(ks)\n        if imag(z) >= 0.0\n            z = complex(real(z)+imag(z)*ks(i),...\n             "
      "           imag(z)-real(z)*ks(i));\n            p = p + phases(i);\n        else\n            z = complex(real(z"
      ")-imag(z)*ks(i),...\n                        imag(z)+real(z)*ks(i));\n            p = p - phases(i);\n        en"
      "d\n    end\n    scale = divide(t,1,real(z));\n    \nfunction [sin_x,cos_x] = fi_sin_cos(x)\n    [scale,ks,phases"
      "] = cordic_table;\n    t = numerictype(scale);\n    m = fimath(scale);\n    p = fi(0,t,m);\n    if x > pi/2\n   "
      "     z = fi(complex(0,1),t,m);\n        p = fi(pi/2,t,m);\n    elseif x < -pi/2\n        z = fi(complex(0,-1),t,"
      "m);\n        p = fi(-pi/2,t,m);\n    else\n        z = fi(complex(1,0),t,m);\n        p = fi(0,t,m);\n    end\n "
      "   for i = 1:length(ks)\n        if x < p\n            z = complex(real(z)+imag(z)*ks(i),...\n                  "
      "      imag(z)-real(z)*ks(i));\n            p = p - phases(i);\n        else\n            z = complex(real(z)-ima"
      "g(z)*ks(i),...\n                        imag(z)+real(z)*ks(i));\n            p = p + phases(i);\n        end\n  "
      "  end\n    sin_x = fi(imag(z) * scale,numerictype(x),fimath(x));\n    cos_x = fi(real(z) * scale,numerictype(x),"
      "fimath(x));\n        "
      editorLayout	      "100 M4x1[258 62 761 437]"
      fimathString	      "fimath(...\n'RoundMode', 'floor',...\n'OverflowMode', 'wrap',...\n'ProductMode', 'KeepLSB', "
      "'ProductWordLength', 32,...\n'SumMode', 'KeepLSB', 'SumWordLength', 32,...\n'CastBeforeSum', true)"
      emlDefaultFimath	      FimathUserSpecified
    }
  }
  junction {
    id			    14
    position		    [23.5747 49.5747 7]
    chart		    12
    linkNode		    [12 0 0]
    subviewer		    12
    ssIdNumber		    3
    type		    CONNECTIVE_JUNCTION
  }
  transition {
    id			    15
    labelString		    "{eML_blk_kernel();}"
    labelPosition	    [32.125 19.875 102.544 14.964]
    fontSize		    12
    src {
      intersection	      [0 0 1 0 23.5747 14.625 0 0]
    }
    dst {
      id		      14
      intersection	      [7 0 -1 -1 23.5747 42.5747 0 0]
    }
    midPoint		    [23.5747 24.9468]
    chart		    12
    linkNode		    [12 0 0]
    dataLimits		    [21.175 25.975 14.625 42.575]
    subviewer		    12
    drawStyle		    SMART
    executionOrder	    1
    ssIdNumber		    2
  }
  data {
    id			    16
    ssIdNumber		    4
    name		    "objs"
    linkNode		    [12 0 17]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"[11,64]"
	firstIndex		"1 "
      }
      type {
	method			SF_PARAMETERIZED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"fixdt('sfix32_En12')"
      }
    }
    dataType		    "fixdt('sfix32_En12')"
  }
  data {
    id			    17
    ssIdNumber		    5
    name		    "level"
    linkNode		    [12 16 18]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_PARAMETERIZED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"fixdt('sfix32_En12')"
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "fixdt('sfix32_En12')"
  }
  data {
    id			    18
    ssIdNumber		    6
    name		    "stop_turn"
    linkNode		    [12 17 19]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	primitive		SF_BOOLEAN_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "boolean"
  }
  data {
    id			    19
    ssIdNumber		    7
    name		    "turn"
    linkNode		    [12 18 20]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"1"
      }
      type {
	primitive		SF_INT32_TYPE
      }
    }
    dataType		    "int32"
  }
  data {
    id			    20
    ssIdNumber		    8
    name		    "objs1"
    linkNode		    [12 19 21]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"[11,64]"
	firstIndex		"1 "
      }
      type {
	method			SF_PARAMETERIZED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"fixdt('sfix32_En12')"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "fixdt('sfix32_En12')"
  }
  data {
    id			    21
    ssIdNumber		    9
    name		    "nL"
    linkNode		    [12 20 22]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	primitive		SF_BOOLEAN_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "boolean"
  }
  data {
    id			    22
    ssIdNumber		    10
    name		    "nG"
    linkNode		    [12 21 23]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	primitive		SF_BOOLEAN_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "boolean"
  }
  data {
    id			    23
    ssIdNumber		    11
    name		    "info"
    linkNode		    [12 22 24]
    scope		    OUTPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
	firstIndex		"1 "
      }
      type {
	method			SF_PARAMETERIZED_TYPE
	primitive		SF_DOUBLE_TYPE
	expression		"fixdt('sfix32_En12')"
      }
      complexity	      SF_COMPLEX_INHERITED
      frame		      SF_FRAME_NO
    }
    dataType		    "fixdt('sfix32_En12')"
  }
  data {
    id			    24
    ssIdNumber		    12
    name		    "thrust"
    linkNode		    [12 23 25]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	primitive		SF_BOOLEAN_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "boolean"
  }
  data {
    id			    25
    ssIdNumber		    13
    name		    "shoot"
    linkNode		    [12 24 0]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	primitive		SF_BOOLEAN_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "boolean"
  }
  instance {
    id			    26
    name		    "Update/Update"
    machine		    1
    chart		    12
  }
  chart {
    id			    27
    name		    "Plot"
    windowPosition	    [311.813 299.45 200.25 189.75]
    viewLimits		    [0 156.75 0 153.75]
    screen		    [1 1 1280 1024 1.333333333333333]
    treeNode		    [0 28 0 0]
    firstTransition	    30
    firstJunction	    29
    viewObj		    27
    machine		    1
    ssIdHighWaterMark	    5
    decomposition	    CLUSTER_CHART
    type		    EML_CHART
    firstData		    31
    chartFileNumber	    3
    disableImplicitCasting  1
    eml {
      name		      "plot"
    }
    supportVariableSizing   0
  }
  state {
    id			    28
    labelString		    "eML_blk_kernel()"
    position		    [18 64.5 118 66]
    fontSize		    12
    chart		    27
    treeNode		    [27 0 0 0]
    superState		    SUBCHART
    subviewer		    27
    ssIdNumber		    1
    type		    FUNC_STATE
    decomposition	    CLUSTER_STATE
    eml {
      isEML		      1
      script		      "function plot(objs,info)\n\neml.extrinsic('eml_asteroids_setup');\neml.extrinsic('set','get','gca"
      "','hold','text','sprintf');\neml.extrinsic('line','drawnow');\n\npersistent canvas;\npersistent figs;\npersisten"
      "t info_fig;\n\npersistent debris;\n\nmy_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n   "
      "                'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                   'SumFraction"
      "Length',12,'SumMode','SpecifyPrecision');\nmy_fitype = numerictype(1,32,12);\n\nlevel = info(1);\nships = info(2"
      ");\nscore = info(3);\n\nmaxobjs = 64;\nmaxdebris = 128;\nmaxdata = 7;\n\nif isempty(figs)\n    figs = zeros(1,ma"
      "xobjs);\n    debris = zeros(10,maxdebris);\nend\n\n%if isempty(debris)\n%    debris = zeros(maxexplosions,maxdeb"
      "ris,maxdata);\n%end\n\nobjs1 = double(objs);\n\nmin_x = 0;\nmax_x = 400;\nmin_y = 0;\nmax_y = 400;\n\nif isempty"
      "(canvas)\n    stop = false;\n    canvas = eml_asteroids_setup; % external user defined M function\n             "
      "                     % (we don't have support for function handles)\n    set(canvas, 'Color', 'black');\n    set"
      "(gca, 'Visible', 'off');\n    set(gca, 'XLim', [min_x max_x]);\n    set(gca, 'YLim', [min_y max_y]);\n    hold('"
      "on');\nend\n\nif isempty(info_fig)\n    info_fig = text(35,380,'LEVEL: 00   SHIPS: 00   SCORE: 0000000','Color',"
      "'y','FontName','FixedWidth','FontSize',12);\nend\nstr = sprintf('LEVEL: %02d   SHIPS: %02d   SCORE: %06d', ...\n"
      "               double(level), double(ships), double(score));\nset(info_fig,'String',str);\n\nfor i = 1:maxdebris"
      "\n    cnt = debris(1,i);\n    if cnt == 0\n        continue\n    end\n\n    sfig = debris(10,i);\n    \n    cnt "
      "= cnt - 1;\n    debris(1,i) = cnt;\n    sl = debris(9,i);\n    if cnt <= 0 || sl <= 0\n        debris(1,i) = 0;\n"
      "        set(sfig, 'xdata', []);\n        set(sfig, 'ydata', []);\n        continue;\n    end\n\n    sx = debris("
      "2,i);\n    sy = debris(3,i);\n    sr = debris(4,i);\n    sv = debris(5,i);\n    sd = debris(6,i);\n    sa = debr"
      "is(7,i);\n    sva = debris(8,i);\n    cos_sa = cos(sa);\n    sin_sa = sin(sa);\n    cos_sd = cos(sd);\n    sin_s"
      "d = sin(sd);\n    sx1 = sx+cos_sd*sr+sl*cos_sa;\n    sy1 = sy+sin_sd*sr+sl*sin_sa;\n    sx2 = sx+cos_sd*sr-sl*co"
      "s_sa;\n    sy2 = sy+sin_sd*sr-sl*sin_sa;\n    if sfig == 0\n        col = [qrand()*0.5+0.5 qrand()*0.5+0.5 qrand"
      "()*0.5+0.5];\n        sfig = line([sx1 sx2],[sy1 sy2],'Color',col);\n    else\n        set(sfig, 'xdata', [sx1 s"
      "x2]);\n        set(sfig, 'ydata', [sy1 sy2]);\n    end\n    debris(10,i) = sfig;\n    sr = sr + sv;\n    sa = sa"
      " + sva;\n    debris(4,i) = sr;\n    debris(7,i) = sa;\n    sl = sl - 0.1;\n    if sl < 0\n        sl = 0;\n    e"
      "nd\n    debris(9,i) = sl;\n    debris(8,i) = sva;\n    sv = sv - 0.5;\n    if sv < 0\n        sv = 0;\n    end\n"
      "    debris(5,i) = sv;\nend\n\nfor i = 1:maxobjs\n    if objs1(1,i) == 0 % object deleted\n        figobj = figs("
      "i);\n        if figobj ~= 0\n            set(figobj, 'xdata', []);\n            set(figobj, 'ydata', []);\n     "
      "   end\n        continue\n    end\n    \n    if objs1(1,i) == 4 && objs1(11,i) == 1 % explosion\n        debris "
      "= new_explosion(debris,objs1(2,i),objs1(3,i),objs1(10,i));\n        continue\n    end\n\n    [xs ys n] = get_obj"
      "ect_data(objs1(:,i));\n\n    %\n    % Make polygon data closed\n    %\n    for k = n+1:length(xs)\n        xs(k)"
      " = xs(1);\n        ys(k) = ys(1);\n    end\n\n    figobj = figs(i);\n    \n    if figobj == 0,\n        figobj ="
      " line(xs, ys);\n        figs(i) = figobj;\n        set(figobj, 'Color', char(objs1(9,i)));\n    else\n        se"
      "t(figobj, 'xdata', xs);\n        set(figobj, 'ydata', ys);\n        set(figobj, 'Color', char(objs1(9,i)));\n   "
      " end\nend\ndrawnow;\n%pause(1);\n\nfunction y = qrand\n    y = 0;\n    y = rand();\n\nfunction debris = new_expl"
      "osion(debris,x,y,n)\n    n0 = n;\n    maxdebris = 128;\n    q = 0;\n    r = 0;\n    for i = 1:maxdebris\n       "
      " if debris(1,i) == 0\n            q = rand();\n            debris(1,i) = 50;\n            debris(2,i) = x;\n    "
      "        debris(3,i) = y;\n            r = rand();\n            r = r*(n0/15) + (n0/15);\n            debris(4,i)"
      " = r;\n            q = rand();\n            debris(5,i) = (n0/6)*q+(n0/10);\n            q = rand();\n          "
      "  debris(6,i) = q*2*pi;\n            q = rand();\n            debris(7,i) = q*2*pi;\n            q = rand();\n  "
      "          debris(8,i) = q*0.8 - 0.3;\n            q = rand();\n            debris(9,i) = q*2+3;\n            n ="
      " n - 1;\n            if n <= 0\n                return\n            end\n        end\n    end\n%\n% get_object_d"
      "ata\n%\n% Get point data given object\n%\nfunction [xs ys n] = get_object_data(obj)\n\nid = obj(1);\nx = obj(2);"
      "\ny = obj(3);\narg = obj(4);\nr = obj(10);\n\nxs = zeros(1,16);\nys = zeros(1,16);\nn = 0;\nif id == 1,\n    ast"
      "eroid_x0 = double(asteroid_x());\n    asteroid_y0 = double(asteroid_y());\n    asteroid_r0 = double(asteroid_r()"
      ");\n    n = size(asteroid_x0,1);\n    f = r/asteroid_r0;\n    xs(1:n) = x + f * asteroid_x0 * cos(arg) - f * ast"
      "eroid_y0 * sin(arg);\n    ys(1:n) = y + f * asteroid_x0 * sin(arg) + f * asteroid_y0 * cos(arg);\nelseif id == 2"
      "\n    ship_x0 = double(ship_x());\n    ship_y0 = double(ship_y());\n    ship_r0 = double(ship_r());\n    n = siz"
      "e(ship_x0,1);\n    f = r/ship_r0;\n    xs(1:n) = x + f * ship_x0 * cos(arg) - f * ship_y0 * sin(arg);\n    ys(1:"
      "n) = y + f * ship_x0 * sin(arg) + f * ship_y0 * cos(arg);\nelseif id == 3\n    missile_x0 = double(missile_x());"
      "\n    missile_y0 = double(missile_y());\n    missile_r0 = double(missile_r());\n    n = size(missile_x0,1);\n   "
      " f = r/missile_r0;\n    xs(1:n) = x + f * missile_x0 * cos(arg) - f * missile_y0 * sin(arg);\n    ys(1:n) = y + "
      "f * missile_x0 * sin(arg) + f * missile_y0 * cos(arg);\nelseif id == 5\n    thrust_x0 = double(thrust_x());\n   "
      " thrust_y0 = double(thrust_y());\n    thrust_r0 = double(thrust_r());\n    n = size(thrust_x0,1);\n    f = r/thr"
      "ust_r0;\n    xs(1:n) = x + f * thrust_x0 * cos(arg) - f * thrust_y0 * sin(arg);\n    ys(1:n) = y + f * thrust_x0"
      " * sin(arg) + f * thrust_y0 * cos(arg);\nend\n\n%\n% asteroid_x\n% asteroid_y\n%\n% Returning asteroid x and y d"
      "ata\n%\n\nfunction r = asteroid_x\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n "
      "                      'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                       'S"
      "umFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi([2 10 20 "
      "17 7 16 12 -7 -17 -21 -14 -8 -7]',my_fitype,my_fimath);\n\nfunction r = asteroid_y\n    my_fimath = fimath('MaxP"
      "roductWordLength',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'ProductMode',"
      "'SpecifyPrecision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fit"
      "ype = numerictype(1,32,12);\n    r = fi([18 22 5 -4 -6 -10 -17 -19 -13 3 17 11 23]',my_fitype,my_fimath);\n\nfun"
      "ction r = asteroid_r\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n              "
      "         'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                       'SumFractionLen"
      "gth',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi(22,my_fitype,my_fimath"
      ");\n\nfunction r = ship_x\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n         "
      "              'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                       'SumFracti"
      "onLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi([-4,-2,-2,-4,8]',"
      "my_fitype,my_fimath);\n    \nfunction r = ship_y\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLe"
      "ngth',32,...\n                       'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n          "
      "             'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r"
      " = fi([4,1,-1,-4,0]',my_fitype,my_fimath);\n\nfunction r = ship_r\n    my_fimath = fimath('MaxProductWordLength'"
      ",32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'ProductMode','SpecifyPrecision"
      "',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype"
      "(1,32,12);\n    r = fi(10,my_fitype,my_fimath);    \n\nfunction r = thrust_x\n    my_fimath = fimath('MaxProduct"
      "WordLength',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'ProductMode','Speci"
      "fyPrecision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = "
      "numerictype(1,32,12);\n    r = fi([-2,-2,-6]',my_fitype,my_fimath);\n\nfunction r = thrust_y\n    my_fimath = fi"
      "math('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                       'ProductFractionLength',12,'Pro"
      "ductMode','SpecifyPrecision',...\n                       'SumFractionLength',12,'SumMode','SpecifyPrecision');\n"
      "    my_fitype = numerictype(1,32,12);\n    r = fi([1,-1,0]',my_fitype,my_fimath);    \n\nfunction r = thrust_r\n"
      "    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                       'ProductFract"
      "ionLength',12,'ProductMode','SpecifyPrecision',...\n                       'SumFractionLength',12,'SumMode','Spe"
      "cifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi(6,my_fitype,my_fimath);        \n    \nfunct"
      "ion r = missile_x\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,...\n                 "
      "      'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                       'SumFractionLength"
      "',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi([-4,4,-4]',my_fitype,my_f"
      "imath);\n    \nfunction r = missile_y\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWordLength',32,.."
      ".\n                       'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n                     "
      "  'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n    r = fi([-1,0"
      ",1]',my_fitype,my_fimath);\n\nfunction r = missile_r\n    my_fimath = fimath('MaxProductWordLength',32,'MaxSumWo"
      "rdLength',32,...\n                       'ProductFractionLength',12,'ProductMode','SpecifyPrecision',...\n      "
      "                 'SumFractionLength',12,'SumMode','SpecifyPrecision');\n    my_fitype = numerictype(1,32,12);\n "
      "   r = fi(8,my_fitype,my_fimath);\n"
      editorLayout	      "100 M4x1[258 62 761 437]"
      fimathString	      "fimath(...\n'RoundMode', 'floor',...\n'OverflowMode', 'wrap',...\n'ProductMode', 'KeepLSB', "
      "'ProductWordLength', 32,...\n'SumMode', 'KeepLSB', 'SumWordLength', 32,...\n'CastBeforeSum', false)"
      fimathForFiConstructors FimathMatlabFactoryDefault
      emlDefaultFimath	      FimathUserSpecified
    }
  }
  junction {
    id			    29
    position		    [23.5747 49.5747 7]
    chart		    27
    linkNode		    [27 0 0]
    subviewer		    27
    ssIdNumber		    3
    type		    CONNECTIVE_JUNCTION
  }
  transition {
    id			    30
    labelString		    "{eML_blk_kernel();}"
    labelPosition	    [32.125 19.875 102.544 14.964]
    fontSize		    12
    src {
      intersection	      [0 0 1 0 23.5747 14.625 0 0]
    }
    dst {
      id		      29
      intersection	      [7 0 -1 -1 23.5747 42.5747 0 0]
    }
    midPoint		    [23.5747 24.9468]
    chart		    27
    linkNode		    [27 0 0]
    dataLimits		    [21.175 25.975 14.625 42.575]
    subviewer		    27
    drawStyle		    SMART
    executionOrder	    1
    ssIdNumber		    2
  }
  data {
    id			    31
    ssIdNumber		    4
    name		    "objs"
    linkNode		    [27 0 32]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
	firstIndex		"1 "
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
    }
    dataType		    "Inherit: Same as Simulink"
  }
  data {
    id			    32
    ssIdNumber		    5
    name		    "info"
    linkNode		    [27 31 0]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
	firstIndex		"1 "
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  instance {
    id			    33
    name		    "Plot"
    machine		    1
    chart		    27
  }
  chart {
    id			    34
    name		    "Reset Ship\nControls"
    windowPosition	    [308.232 321.305 200.25 189.75]
    viewLimits		    [0 156.75 0 153.75]
    screen		    [1 1 1400 1050 1.333333333333333]
    treeNode		    [0 35 0 0]
    firstTransition	    37
    firstJunction	    36
    viewObj		    34
    machine		    1
    ssIdHighWaterMark	    4
    decomposition	    CLUSTER_CHART
    type		    EML_CHART
    firstData		    38
    chartFileNumber	    4
    disableImplicitCasting  1
    eml {
      name		      "reset"
    }
    supportVariableSizing   0
  }
  state {
    id			    35
    labelString		    "eML_blk_kernel()"
    position		    [18 64.5 118 66]
    fontSize		    12
    chart		    34
    treeNode		    [34 0 0 0]
    superState		    SUBCHART
    subviewer		    34
    ssIdNumber		    1
    type		    FUNC_STATE
    decomposition	    CLUSTER_STATE
    eml {
      isEML		      1
      script		      "function reset(x)\n\nfeval('eml_asteroids_reset_controls',x);\n"
      editorLayout	      "100 M4x1[258 62 761 437]"
      fimathString	      "fimath(...\n'RoundMode', 'floor',...\n'OverflowMode', 'wrap',...\n'ProductMode', 'KeepLSB', "
      "'ProductWordLength', 32,...\n'SumMode', 'KeepLSB', 'SumWordLength', 32,...\n'CastBeforeSum', false)"
      fimathForFiConstructors FimathMatlabFactoryDefault
      emlDefaultFimath	      FimathUserSpecified
    }
  }
  junction {
    id			    36
    position		    [23.5747 49.5747 7]
    chart		    34
    linkNode		    [34 0 0]
    subviewer		    34
    ssIdNumber		    3
    type		    CONNECTIVE_JUNCTION
  }
  transition {
    id			    37
    labelString		    "{eML_blk_kernel();}"
    labelPosition	    [32.125 19.875 102.544 14.964]
    fontSize		    12
    src {
      intersection	      [0 0 1 0 23.5747 14.625 0 0]
    }
    dst {
      id		      36
      intersection	      [7 0 -1 -1 23.5747 42.5747 0 0]
    }
    midPoint		    [23.5747 24.9468]
    chart		    34
    linkNode		    [34 0 0]
    dataLimits		    [21.175 25.975 14.625 42.575]
    subviewer		    34
    drawStyle		    SMART
    executionOrder	    1
    ssIdNumber		    2
  }
  data {
    id			    38
    ssIdNumber		    4
    name		    "x"
    linkNode		    [34 0 0]
    scope		    INPUT_DATA
    machine		    1
    props {
      array {
	size			"-1"
      }
      type {
	method			SF_INHERITED_TYPE
	primitive		SF_DOUBLE_TYPE
      }
      complexity	      SF_COMPLEX_INHERITED
    }
    dataType		    "Inherit: Same as Simulink"
  }
  instance {
    id			    39
    name		    "Reset Ship\nControls"
    machine		    1
    chart		    34
  }
  target {
    id			    40
    name		    "sfun"
    description		    "Default Simulink S-Function Target."
    codeFlags		    ""
    machine		    1
    linkNode		    [1 0 0]
  }
}
