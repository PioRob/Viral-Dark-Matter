import com.sun.jini.start.NonActivatableServiceDescriptor;
import com.sun.jini.start.ServiceDescriptor;
import com.mathworks.toolbox.distcomp.util.ConfigUtil;
import com.mathworks.toolbox.distcomp.control.PortConfig;

/* Copyright 2004-2005 The MathWorks, Inc. */

com.sun.jini.start {
      private static logPrefix = ConfigUtil.concat(new String[]{"${com.mathworks.toolbox.distcomp.checkpointdir}","${/}","${com.mathworks.toolbox.distcomp.hostname}"});

    serviceType = "phoenix";
    persistenceDirectory = ConfigUtil.concat(new String[]{logPrefix, ConfigUtil.getServicePostfix(serviceType)});    
    checkpointDirectory = "${com.mathworks.toolbox.distcomp.checkpointdir}";
    logDirectory = "${com.mathworks.toolbox.distcomp.logdir}";
    
    private static jarDir = "${com.mathworks.toolbox.distcomp.toolboxroot}${/}..${/}..${/}java${/}jarext${/}distcomp${/}";
    private static configDir = "${com.mathworks.toolbox.distcomp.toolboxroot}${/}config${/}";
    private static distcompJar = "${com.mathworks.toolbox.distcomp.toolboxroot}${/}..${/}..${/}java${/}jar${/}toolbox${/}distcomp.jar";

    //
    // PHOENIX Service
    //
    private static phoenix_codebase = "";
    private static phoenix_policy = ConfigUtil.concat(new String[]{configDir,"jsk-all.policy"});
    private static phoenix_config = ConfigUtil.concat(new String[]{configDir,"phoenix.config"});
    private static phoenix_classpath = ConfigUtil.concat(new String[]{jarDir,"phoenix.jar"});
    private static phoenix_impl = "com.sun.jini.phoenix.PhoenixStarter";
    private static phoenix_service = 
        new NonActivatableServiceDescriptor(
            phoenix_codebase, phoenix_policy, phoenix_classpath,
            phoenix_impl,
            new String[]{phoenix_config});

    ////
    //// Remote starter service.  Listens on listener_port and receives
    //// commands to start and stop workers and job managers.
    //// 
    private static starter_codebase = "";
    private static starter_policy = ConfigUtil.concat(new String[]{configDir,"jsk-all.policy"});
    private static starter_classpath = phoenix_classpath; //distcompJar;
    private static starter_impl = "com.mathworks.toolbox.distcomp.control.CommandListener";
    private static starter_port = PortConfig.getRemoteCommandPort("${com.mathworks.toolbox.distcomp.base_port}");

    private static starter_config_args = new String[]{String.valueOf(starter_port)};
    private static starter_service = 
        new NonActivatableServiceDescriptor(
            starter_codebase, starter_policy, starter_classpath,
            starter_impl,
            starter_config_args);
            

    //
    // Parent watchdog service
    // 
    private static watchdog_codebase = "";
    private static watchdog_policy = ConfigUtil.concat(new String[]{configDir,"jsk-all.policy"});
    private static watchdog_classpath = "";
    private static watchdog_impl = "com.mathworks.toolbox.distcomp.control.ParentWatchdog";
    private static watchdog_args = null;

    private static watchdog_service = 
        new NonActivatableServiceDescriptor(
            watchdog_codebase,
            watchdog_policy,
            watchdog_classpath,
            watchdog_impl,
            watchdog_args);
            


    //
    // Services to start -- used by ServiceStarter.main()
    //
    static serviceDescriptors = new ServiceDescriptor[] {
    	phoenix_service,
        starter_service,
        watchdog_service
    };
    
}
